{"version":3,"file":"static/js/3488.c3c21d49.chunk.js","mappings":"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","sources":["api/SignApi.ts","atom/atomAdminState.js","components/button/Button.js","components/button/styles/ButtonStyle.js","components/common/Fetching.js","components/common/ResultModal.js","components/common/SelectedModal.js","components/meat/hooks/useSelectModal.js","components/meat/hooks/useEmptyModal.js","components/meat/hooks/useCustomHook.js","atom/atomUserState.js","atom/atomSupervisorState.js","components/meat/hooks/useCustomLoginTS.ts","components/meat/hooks/useModal.js","components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","hooks/useCustomMove.js","api/joinApi.js","pages/sign/up/UserSignUpPage.js","util/utils.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\nimport axios from \"axios\";\r\nimport { SigninForm } from \"../pages/sign/TSJoin\";\r\nimport authAxios from \"../util/tokenUtil\";\r\n\r\n// // proxy를 가져온다.\r\nexport const API_SERVER_HOST = \"\";\r\nconst signHost = `${API_SERVER_HOST}/api/user`;\r\nconst adminHost = `${API_SERVER_HOST}/api/owner`;\r\nconst supervisorHost = `${API_SERVER_HOST}/api/admin`;\r\n\r\nexport const loginPostTS = async ({ authParam }: { authParam: SigninForm }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const data = {\r\n      email: authParam.email,\r\n      upw: authParam.upw,\r\n    };\r\n    const res = await axios.post(`${signHost}/signin`, data, header);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\nexport const loginAdminPostTS = async ({\r\n  authParam,\r\n}: {\r\n  authParam: SigninForm;\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const data = {\r\n      email: authParam.email,\r\n      upw: authParam.upw,\r\n    };\r\n    const res = await axios.post(`${adminHost}/signin`, data, header);\r\n    if (res && res.status < 400) {\r\n      console.log(res.data);\r\n      return res.data;\r\n    } else {\r\n      console.log(\"\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const postSignUpTS = async ({\r\n  signUpData,\r\n}: {\r\n  signUpData: FormData;\r\n}) => {\r\n  console.log(\"plz\", signUpData);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await axios.post(\r\n      `${API_SERVER_HOST}/api/owner/signup`,\r\n      signUpData,\r\n      header,\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"오류임\");\r\n    throw error;\r\n  }\r\n};\r\n\r\n// export const postSvisorSignUpTs = async () => {};\r\n\r\nexport const postSvisorSignUpTs = async ({\r\n  authParam,\r\n}: {\r\n  authParam: SigninForm;\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const data = {\r\n      email: authParam.email,\r\n      upw: authParam.upw,\r\n    };\r\n    const res = await axios.post(`${supervisorHost}/signin`, data, header);\r\n    if (res && res.status < 400) {\r\n      console.log(res.data);\r\n      return res.data;\r\n    } else {\r\n      console.log(\"\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n","import { atom } from \"recoil\";\r\nimport { getCookie } from \"../util/CookiesUtil\";\r\n\r\nconst initState = {\r\n  result: 0,\r\n};\r\n\r\nconst loadMemberCookie = () => {\r\n  const memberInfo = getCookie(\"member\");\r\n  return memberInfo;\r\n};\r\nexport const atomAdminState = atom({\r\n  key: \"atomAdminState\",\r\n  default: loadMemberCookie() || initState,\r\n});\r\n","import React from \"react\";\r\nimport { DefaultBt } from \"./styles/ButtonStyle\";\r\n\r\nconst Button = props => {\r\n  const { bttext } = props;\r\n\r\n  return (\r\n    <DefaultBt>\r\n      <span>{bttext}</span>\r\n    </DefaultBt>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${ColorStyle.primary};\r\n  }\r\n`;\r\n","import { ClipLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst Fetching = () => {\r\n  const laodingCss = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <ClipLoader size={50} color={ColorStyle.primary} loading={true} />\r\n      <div\r\n        style={{\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        맛있게 굽고 있는 중...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fetching;\r\n","import Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useSelectModal() {\r\n  const [isSelectModal, setIsSelectModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmFn: null,\r\n    cancelFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openSelectModal = (title, content, confirmFn, cancelFn) => {\r\n    setIsSelectModal({ isOpen: true, title, content, confirmFn, cancelFn });\r\n  };\r\n\r\n  const confirmSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  const cancelSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  };\r\n}\r\n\r\nexport default useSelectModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useEmptyModal() {\r\n  const [isEmptyModal, setIsEmptyModal] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openEmptyModal = (content, callFn) => {\r\n    setIsEmptyModal({ isOpen: true, content, callFn });\r\n  };\r\n\r\n  const closeEmptyModal = () => {\r\n    setIsEmptyModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return { isEmptyModal, openEmptyModal, closeEmptyModal };\r\n}\r\n\r\nexport default useEmptyModal;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../../../util/utils\";\r\nimport useModal from \"./useModal\";\r\nimport useSelectModal from \"./useSelectModal\";\r\nimport useCustomLoginTS from \"./useCustomLoginTS\";\r\nimport useEmptyModal from \"./useEmptyModal\";\r\nconst useCustomHook = () => {\r\n  const navigate = useNavigate();\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  const { isModal, openModal, closeModal, moveToLogin, shutModal } = useModal();\r\n  const { isLogin } = useCustomLoginTS();\r\n  const {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useSelectModal();\r\n  const { isEmptyModal, openEmptyModal, closeEmptyModal } = useEmptyModal();\r\n\r\n  // @COMMENT SearchParams (page,category,search,filter)\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n\r\n  const category = urlSearchParams.get(\"category\")\r\n    ? parseInt(urlSearchParams.get(\"category\"))\r\n    : 0;\r\n\r\n  const size = urlSearchParams.get(\"size\")\r\n    ? parseInt(urlSearchParams.get(\"size\"))\r\n    : 3;\r\n\r\n  const filter = urlSearchParams.get(\"filter\")\r\n    ? parseInt(urlSearchParams.get(\"filter\"))\r\n    : 0;\r\n\r\n  const check = urlSearchParams.get(\"check\")\r\n    ? parseInt(urlSearchParams.get(\"check\"))\r\n    : 0;\r\n\r\n  const defaultQueryString = createSearchParams({\r\n    page,\r\n    search,\r\n    category,\r\n    filter,\r\n    size,\r\n  }).toString();\r\n\r\n  // @COMMENT Page Query\r\n  const MoveToPage = PageParam => {\r\n    let queryStr = \"\";\r\n    if (PageParam) {\r\n      const PageNum = getNum(PageParam.page, page);\r\n      queryStr = createSearchParams({\r\n        page: PageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  // @COMMENT Filter Query\r\n  const MoveToFilter = FilterParam => {\r\n    let queryStr = \"\";\r\n    if (FilterParam) {\r\n      const FilterNum = getNum(FilterParam.filter, filter);\r\n      queryStr = createSearchParams({\r\n        filter: FilterNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // @COMMENT Category Query\r\n  const MoveToList = CategoryParam => {\r\n    let queryStr = \"\";\r\n    if (CategoryParam) {\r\n      const categoryNum = getNum(CategoryParam.category, category);\r\n      queryStr = createSearchParams({\r\n        category: categoryNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // ! Read Page hook\r\n  const moveToRead = ishop => {\r\n    navigate({ pathname: `../detail/${ishop}`, search: defaultQueryString });\r\n  };\r\n\r\n  // ! Read Page hook\r\n  const moveToReser = ishop => {\r\n    navigate({\r\n      pathname: `../reservation/${ishop}`,\r\n      search: defaultQueryString,\r\n    });\r\n  };\r\n  // ! GO B ReserPage\r\n  const moveToBReser = (e, ibutcher, name) => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      navigate({\r\n        pathname: `../../butcher/pickup/${ibutcher}`,\r\n        search: `name=${name}&${defaultQueryString}`,\r\n      });\r\n      // console.log(\"넘어간드아\", menuList, name, ibutcher);\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n    console.log(name);\r\n  };\r\n\r\n  const moveToReview = (ireser, checkShop, name, ishop) => {\r\n    console.log(name);\r\n    navigate({\r\n      pathname: `../../meat/review/${ireser}`,\r\n      search: `name=${name}&checkShop=${checkShop}&ishop=${ishop}&${defaultQueryString}`,\r\n    });\r\n  };\r\n  // @COMMENT Payment\r\n  const moveToPayment = (pk, amount) => {\r\n    console.log(\"payment, pk :\", pk, \"amount :\", amount);\r\n    navigate({\r\n      pathname: `/payment/checkout`,\r\n      search: `pk=${pk}&amount=${amount}`,\r\n    });\r\n  };\r\n\r\n  const moveToSize = SizeParam => {\r\n    let queryStr = \"\";\r\n    if (SizeParam) {\r\n      const SizeStr = getNum(SizeParam.size, size);\r\n      queryStr = createSearchParams({\r\n        size: SizeStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../review\", search: queryStr });\r\n  };\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const moveToSearch = SearchParam => {\r\n    let queryStr = \"\";\r\n    if (SearchParam) {\r\n      const SearchStr = getNum(SearchParam.search, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  const moveToCheck = CheckParam => {\r\n    let queryStr = \"\";\r\n    if (CheckParam) {\r\n      const checkNum = getNum(CheckParam.check, check);\r\n      queryStr = createSearchParams({\r\n        check: checkNum,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../report\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    page,\r\n    search,\r\n    category,\r\n    check,\r\n    filter,\r\n    MoveToFilter,\r\n    MoveToList,\r\n    moveToRead,\r\n    moveToSearch,\r\n    refresh,\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    moveToLogin,\r\n    moveToReser,\r\n    MoveToPage,\r\n    moveToReview,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n    moveToBReser,\r\n    openEmptyModal,\r\n    isEmptyModal,\r\n    closeEmptyModal,\r\n    moveToPayment,\r\n    shutModal,\r\n    moveToCheck,\r\n    size,\r\n    moveToSize,\r\n  };\r\n};\r\nexport default useCustomHook;\r\n","import { atom } from \"recoil\";\r\nimport { getCookie } from \"../util/CookiesUtil\";\r\n\r\nconst initState = {\r\n  result: 0,\r\n};\r\n\r\nconst loadMemberCookie = () => {\r\n  const memberInfo = getCookie(\"member\");\r\n  return memberInfo;\r\n};\r\nexport const atomUserState = atom({\r\n  key: \"atomUserState\",\r\n  default: loadMemberCookie() || initState,\r\n});\r\n","import { atom } from \"recoil\";\r\nimport { getCookie } from \"../util/CookiesUtil\";\r\n\r\nconst initState = {\r\n  result: 0,\r\n};\r\n\r\nconst loadMemberCookie = () => {\r\n  const memberInfo = getCookie(\"member\");\r\n  return memberInfo;\r\n};\r\nexport const atomSupervisorState = atom({\r\n  key: \"atomSupervisorState\",\r\n  default: loadMemberCookie() || initState,\r\n});\r\n","import axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  loginAdminPostTS,\r\n  loginPostTS,\r\n  postSvisorSignUpTs,\r\n} from \"../../../api/SignApi\";\r\nimport { atomUserState } from \"../../../atom/atomUserState\";\r\nimport { atomAdminState } from \"../../../atom/atomAdminState\";\r\nimport { SigninForm } from \"../../../pages/sign/TSJoin\";\r\nimport { removeCookie, setCookie } from \"../../../util/CookiesUtil\";\r\nimport { atomSupervisorState } from \"../../../atom/atomSupervisorState\";\r\n\r\nconst useCustomLoginTS = () => {\r\n  const [userState, setUserState] = useRecoilState(atomUserState);\r\n  const [adminState, setAdminState] = useRecoilState(atomAdminState);\r\n  const [supervisorState, setSupervisorState] =\r\n    useRecoilState(atomSupervisorState);\r\n  const resetSignState = useResetRecoilState(atomUserState);\r\n  const resetAdminState = useResetRecoilState(atomAdminState);\r\n  const resetSupervisorState = useResetRecoilState(atomSupervisorState);\r\n\r\n  const navigate = useNavigate();\r\n  const API_SERVER_HOST = \"\";\r\n  const host = `${API_SERVER_HOST}/api/user`;\r\n\r\n  const isLogin = userState.result === 1;\r\n  const isSupervisorLogin = supervisorState.result === 1;\r\n  const isAdminLogin = adminState.result === 1;\r\n  // const isAdminLogin = adminState?.shopName?.length > 0;\r\n  console.log(\"Test3\", isAdminLogin);\r\n  console.log(\"Test4\", adminState.shopName);\r\n\r\n  const doLoginTS = async ({ authParam }: { authParam: SigninForm }) => {\r\n    const result = await loginPostTS({ authParam });\r\n    saveAsUserCookie(result);\r\n    return result;\r\n  };\r\n\r\n  const doAdminLoginTS = async ({ authParam }: { authParam: SigninForm }) => {\r\n    const result = await loginAdminPostTS({ authParam });\r\n    saveAsAdminCookie(result);\r\n    console.log(\"test22\", result);\r\n    return result;\r\n  };\r\n  const doSupervisorLoginTS = async ({\r\n    authParam,\r\n  }: {\r\n    authParam: SigninForm;\r\n  }) => {\r\n    const result = await postSvisorSignUpTs({ authParam });\r\n    saveAsSupervisorCookie(result);\r\n    return result;\r\n  };\r\n\r\n  const saveAsUserCookie = (result: any) => {\r\n    setUserState(result);\r\n\r\n    setCookie(\"member\", JSON.stringify(result), 1);\r\n  };\r\n\r\n  const saveAsAdminCookie = (result: any) => {\r\n    setAdminState(result);\r\n    setCookie(\"member\", JSON.stringify(result), 1);\r\n  };\r\n\r\n  const saveAsSupervisorCookie = (result: any) => {\r\n    setSupervisorState(result);\r\n    setCookie(\"member\", JSON.stringify(result), 1);\r\n  };\r\n\r\n  const doLogout = async () => {\r\n    resetSignState();\r\n    resetAdminState();\r\n    resetSupervisorState();\r\n    removeCookie(\"member\");\r\n    // removeCookie(\"member\");\r\n    // removeCookie(\"member\");\r\n    try {\r\n      const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n      const res = await axios.post(`${host}/signout`, header);\r\n      if (res.status === 200) {\r\n        console.log(\"rt cookie 삭제\");\r\n        console.log(res.data);\r\n      } else {\r\n        // Handle failure case\r\n      }\r\n    } catch (error) {\r\n      // Handle error case\r\n    }\r\n  };\r\n\r\n  const moveToPath = (path: string) => {\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const loginComplete = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return {\r\n    supervisorState,\r\n    adminState,\r\n    userState,\r\n    doLoginTS,\r\n    doAdminLoginTS,\r\n    doSupervisorLoginTS,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    loginComplete,\r\n    isLogin,\r\n    isAdminLogin,\r\n    isSupervisorLogin,\r\n  };\r\n};\r\n\r\nexport default useCustomLoginTS;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useModal() {\r\n  const [isModal, setIsModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openModal = (title, content, callFn) => {\r\n    setIsModal({ isOpen: true, title, content, callFn });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const shutModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const moveToLogin = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n    navgate(\"/login\");\r\n  };\r\n\r\n  return { isModal, openModal, closeModal, moveToLogin, shutModal };\r\n}\r\n\r\nexport default useModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 114px;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum, getSearch } from \"../util/utils\";\r\nimport useCustomLoginTS from \"../components/meat/hooks/useCustomLoginTS\";\r\n\r\nconst useCustomMove = () => {\r\n  // 로그인 훅\r\n  const { isLogin, moveToLogin, isSupervisorLogin, isAdminLogin } =\r\n    useCustomLoginTS();\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  // to add\r\n  const moveToAdd = () => {\r\n    if (isLogin || isSupervisorLogin || isAdminLogin) {\r\n      navigate(\"/community/add\");\r\n    } else {\r\n      moveToLogin();\r\n    }\r\n  };\r\n\r\n  // to search\r\n  const moveToSearch = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    moveToList,\r\n    moveToModify,\r\n    moveToRead,\r\n    moveToAdd,\r\n    moveToSearch,\r\n    page,\r\n    search,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import axios from \"axios\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst signHost = `${API_SERVER_HOST}/api/user`;\r\n\r\nexport const postJadd = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"회원정보임\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await axios.post(`${signHost}/signup`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\nexport const nickNameCheck = async ({\r\n  iNickCheck,\r\n  successNickFn,\r\n  failNickFn,\r\n  errorNickFn,\r\n}) => {\r\n  console.log(\"닉네임중복체크\", iNickCheck);\r\n  const nickname = iNickCheck;\r\n  try {\r\n    const response = await axios.post(`${signHost}/signup/${nickname}`);\r\n    if (response.status === 200) {\r\n      successNickFn(response.data);\r\n    } else if (response.status === 400) {\r\n      console.log(\"dddd\");\r\n      failNickFn(\"에러다.\");\r\n    }\r\n  } catch (error) {\r\n    errorNickFn(error);\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nimport \"../up/styles/UserSignUpStyles.css\";\r\n\r\nimport { nickNameCheck, postJadd } from \"../../../api/joinApi\";\r\nimport Fetching from \"../../../components/common/Fetching\";\r\nimport ResultModal from \"../../../components/common/ResultModal\";\r\nimport SelectedModal from \"../../../components/common/SelectedModal\";\r\nimport useCustomHook from \"../../../components/meat/hooks/useCustomHook\";\r\nimport TitleHeader from \"../../../components/titleheader/TitleHeader\";\r\nimport useCustomMove from \"../../../hooks/useCustomMove\";\r\nimport {\r\n  DefaultBt,\r\n  GenderBtWrap,\r\n  JaddAddressBts,\r\n  JaddAddressWrap,\r\n  JaddBirthWrap,\r\n  JaddGenderWrap,\r\n  JaddMailWrap,\r\n  JaddMorePwWrap,\r\n  JaddNameWrap,\r\n  JaddNickNameInner,\r\n  JaddNickNameWrap,\r\n  JaddNumberWrap,\r\n  JaddPageImage,\r\n  JaddPageInfo,\r\n  JaddPageMain,\r\n  JaddPageWrap,\r\n  JaddPwWrap,\r\n  NicknameCheck,\r\n} from \"./styles/UserSignUpStyles\";\r\n\r\nconst initState = {\r\n  pic: \"\",\r\n  email: \"\",\r\n  upw: \"\",\r\n  checkUpw: \"\",\r\n  name: \"\",\r\n  nickname: \"\",\r\n  birth: \"\",\r\n  gender: \"\",\r\n  address: \"\",\r\n  tel: \"\",\r\n};\r\n// 회원가입 작성 페이지입니다.\r\nconst UserSignUpPage = () => {\r\n  // const [todo, setTodo] = useState({});\r\n\r\n  const [product, setProduct] = useState(initState);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n    setMessage(\"\"); // (비밀번호 확인 메시지) 사용자가 다시 입력할 때 메시지 초기화\r\n  };\r\n\r\n  const [image, setImage] = useState(null); // 단일 이미지를 저장하는 상태를 사용합니다.\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const {\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useCustomHook();\r\n\r\n  const uploadRef = useRef();\r\n  const handleClickImg = () => {\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = e => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const previewUrl = URL.createObjectURL(file);\r\n      setImage(previewUrl);\r\n      setSelectedImage(file);\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    setImage(null);\r\n  };\r\n\r\n  // console.log(\"이1\", product.email);\r\n  // console.log(\"이2\", product.upw);\r\n  // console.log(\"이3\", product.checkUpw);\r\n  // console.log(\"이4\", product.name);\r\n  // console.log(\"이5\", product.nickname);\r\n  // console.log(\"이6\", product.birth);\r\n  // console.log(\"이7\", product.gender);\r\n  // console.log(\"이8\", product.address);\r\n  // console.log(\"이9\", product.tel);\r\n\r\n  const handleClick = async product => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          email: product?.email,\r\n          upw: product?.upw,\r\n          checkUpw: product?.checkUpw,\r\n          name: product?.name,\r\n          nickname: product?.nickname,\r\n          birth: product?.birth,\r\n          gender: product?.gender,\r\n          address: product?.address,\r\n          tel: product?.tel,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n    formData.append(\"pic\", selectedImage);\r\n\r\n    postJadd({ product: formData, successFn, failFn, errorFn });\r\n  };\r\n\r\n  // 모달창\r\n  // 회원 가입 시 예외처리 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n  // 회원가입 시 모달창 관련\r\n  const [addResult, setAddResult] = useState(false);\r\n  // resultModal 관련\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(false);\r\n  // 페이지 이동 관련\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n  // selectedModal 띄우기 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 등록 로직 실행\r\n    if (product.email === \"\") {\r\n      openModal(\"이메일 필수 입력\", \"이메일을 입력해주세요.\", closeModal);\r\n    } else if (product.upw === null) {\r\n      openModal(\"비밀번호 4~8자 이내\", \"비밀번호를 입력해주세요.\", closeModal); // c,k\r\n    } else if (product.checkUpw === null) {\r\n      openModal(\r\n        \"비밀번호 확인 필수 입력\",\r\n        \"비밀번호를 확인해주세요.\",\r\n        closeModal,\r\n      ); // ck\r\n    } else if (product.name === \"\") {\r\n      openModal(\"이름 필수 입력\", \"이름을 입력해주세요.\", closeModal);\r\n    } else if (product.nickname === \"\") {\r\n      openModal(\"닉네임 3~6 이내\", \"닉네임을 입력해주세요.\", closeModal);\r\n    } else if (product.birth === \"\") {\r\n      openModal(\"생년월일 필수 입력\", \"생년월일 입력해주세요.\", closeModal);\r\n    } else if (product.gender === \"\") {\r\n      openModal(\"성별 필수 선택\", \"성별을 선택해주세요.\", closeModal);\r\n    } else if (product.address === \"\") {\r\n      openModal(\"주소 필수 입력\", \"주소를 입력해주세요.\", closeModal);\r\n    } else if (product.tel === \"\") {\r\n      openModal(\r\n        \"휴대폰 번호 필수 입력\",\r\n        \"휴대폰 번호를 입력해주세요.\",\r\n        closeModal,\r\n      );\r\n    } else {\r\n      handleClick(product);\r\n    }\r\n  };\r\n\r\n  const { moveToModify } = useCustomMove();\r\n\r\n  // 회원가입 등록 시 resultModal 닫기 callFn\r\n  const closeJaddModal = () => {\r\n    // 모달창 닫기\r\n    setAddResult(false);\r\n    if (popRedirect === true) {\r\n      // 메인 페이지로 가기\r\n      moveToModify({});\r\n    }\r\n  };\r\n  // 회원가입 등록 시 예외처리용 resultModal 닫기 callFn\r\n  const closeException = () => {\r\n    setResult(false);\r\n  };\r\n  // selectedModal 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    openSelectModal(\r\n      \"회원가입\",\r\n      \"회원가입을 하시겠습니까?\",\r\n      () => {\r\n        handleConfirm(product), confirmSelectModal();\r\n      },\r\n      cancelSelectModal,\r\n    );\r\n  };\r\n\r\n  const successFn = addResult => {\r\n    console.log(\"글 등록 성공\", addResult);\r\n    openModal(\"회원가입 완료\", \"회원가입이 완료 되었습니다.\", () => {\r\n      closeModal, navigate(\"/\");\r\n    });\r\n  };\r\n  const failFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(false);\r\n    setPopTitle(\"글 등록 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  // 비밀번호 확인 메시지\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageColor, setMessageColor] = useState(\"\");\r\n\r\n  const handleValiation = () => {\r\n    if (product.upw === product.checkUpw) {\r\n      setMessage(\"비밀번호가 일치합니다.\");\r\n      setMessageColor(\"green\");\r\n    } else {\r\n      setMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      setMessageColor(\"red\");\r\n    }\r\n  };\r\n\r\n  // 성별 선택\r\n  const genderChoice = () => {\r\n    console.log(\"성별\");\r\n  };\r\n  const [genderSelect, setGenderSelect] = useState(0);\r\n  const handleGenderClick = e => {\r\n    product.gender;\r\n    if (e == 1) {\r\n      product.gender = \"남\";\r\n      setGenderSelect(1);\r\n\r\n      console.log(\"남\");\r\n    } else if (e == 2) {\r\n      product.gender = \"여\";\r\n      console.log(\"여\");\r\n      setGenderSelect(2);\r\n    }\r\n  };\r\n\r\n  // 닉네임 중복확인\r\n  // 닉네임 중복확인\r\n  const [nickname, setNickname] = useState();\r\n  const [isAvailable, setIsAvailable] = useState(null);\r\n\r\n  // 이거는 나름 규칙으로 하면되죠\r\n  // setIsAvailable(nickname.length >= 3);\r\n  // console.log(\"테스트\", product.nickname);\r\n  const handleCheckAvailability = iNickCheck => {\r\n    // const iNickCheck = nickname;\r\n    console.log(\"니크네임\", product.nickname);\r\n    nickNameCheck({\r\n      iNickCheck: product.nickname,\r\n      successNickFn,\r\n      failNickFn,\r\n      errorNickFn,\r\n    });\r\n  };\r\n\r\n  const successNickFn = () => {\r\n    openModal(\"닉네임 중복확인\", \"사용가능한 닉네임 입니다.\", closeModal);\r\n  };\r\n  const failNickFn = () => {\r\n    console.log(\"페일\");\r\n  };\r\n  const errorNickFn = error => {\r\n    if (error.response && error.response.status === 400) {\r\n      openModal(\"닉네임 중복확인\", \"중복된 닉네임입니다.\", closeModal);\r\n    }\r\n    // console.log(\"에러임 ㄹㅇㅋㅋ\");\r\n  };\r\n  // 휴대폰번호 하이픈 자동입력\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const handleInputChange = e => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = e.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 전화번호 형식에 맞게 하이픈 추가\r\n    const formattedPhoneNumber = formatPhoneNumber(inputValue);\r\n\r\n    // 상태 업데이트\r\n    setPhoneNumber(formattedPhoneNumber);\r\n  };\r\n\r\n  const formatPhoneNumber = value => {\r\n    // 000-0000-0000 형식으로 포맷팅\r\n    const regex = /^(\\d{3})(\\d{0,4})(\\d{0,4})$/;\r\n    const matches = value.match(regex);\r\n\r\n    if (matches) {\r\n      return `${matches[1]}${matches[2] ? \"-\" + matches[2] : \"\"}${\r\n        matches[3] ? \"-\" + matches[3] : \"\"\r\n      }`;\r\n    }\r\n    // 일치하지 않는 경우 그대로 반환\r\n    return value;\r\n  };\r\n\r\n  // 생년월일 형식\r\n  const [birthday, setBirthday] = useState(\"\");\r\n\r\n  const handleBirthChange = event => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = event.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 생년월일 형식으로 변환\r\n    const formattedBirthday = inputValue.replace(\r\n      /(\\d{4})(\\d{0,2})(\\d{0,2})/,\r\n      (match, p1, p2, p3) => {\r\n        let result = p1;\r\n        if (p2) {\r\n          result += `/${p2}`;\r\n        }\r\n        if (p3) {\r\n          result += `/${p3}`;\r\n        }\r\n        return result;\r\n      },\r\n    );\r\n\r\n    // 상태 업데이트\r\n    setBirthday(formattedBirthday);\r\n  };\r\n\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickCancel = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const callModal = () => {\r\n    openModal(\"테스트\", \"테스트입니다\", closeModal);\r\n  };\r\n\r\n  return (\r\n    <JaddPageWrap>\r\n      {fetching ? <Fetching /> : null}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      {isSelectModal.isOpen && (\r\n        <SelectedModal\r\n          title={isSelectModal.title}\r\n          content={isSelectModal.content}\r\n          confirmFn={isSelectModal.confirmFn}\r\n          cancelFn={isSelectModal.cancelFn}\r\n        />\r\n      )}\r\n      <TitleHeader\r\n        timg={`${process.env.PUBLIC_URL}/assets/images/join_header.png`}\r\n        tname=\"회원가입\"\r\n        tcontent=\"오늘도 맛있는 고기와 함께하세요\"\r\n      ></TitleHeader>\r\n      <JaddPageMain>\r\n        <JaddPageImage>\r\n          {/* 프로필 사진 미리 보기 */}\r\n          <div className=\"previewBox\">\r\n            {image ? (\r\n              <img src={image} alt=\"프로필미리보기\" />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                alt={`미리보기`}\r\n                onClick={deleteImage}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* 파일 업로드 버튼 */}\r\n          <div className=\"uploadBox\" onClick={handleClickImg}>\r\n            <div>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/profile_camera.svg`}\r\n                alt=\"업로드 버튼\"\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                ref={uploadRef}\r\n                style={{ display: \"none\" }}\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 커스텀 스타일이 적용된 버튼 */}\r\n          {/* <button\r\n            className=\"JaddPage-img-button \"\r\n\r\n          ></button> */}\r\n        </JaddPageImage>\r\n        <JaddPageInfo>\r\n          <div className=\"JaddMailInfo\">\r\n            <JaddMailWrap>\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={product.email}\r\n                className=\"JoinMail\"\r\n                placeholder=\"@까지 정확하게 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddMailWrap>\r\n            <br />\r\n            <JaddNameWrap>\r\n              <label>이름</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={product.name}\r\n                className=\"JaddName\"\r\n                placeholder=\"본인 이름을 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddNameWrap>\r\n            <br />\r\n            <form action=\"\" method=\"post\" onSubmit=\"return passCheckForm()\">\r\n              <JaddPwWrap>\r\n                <label>비밀번호</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"upw\"\r\n                  value={product.upw}\r\n                  className=\"JaddPw\"\r\n                  placeholder=\"비밀번호를 입력하세요.(특수문자 포함 4-8자)\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"8\"\r\n                  minLength=\"4\"\r\n                />\r\n              </JaddPwWrap>\r\n              <br />\r\n              <JaddMorePwWrap>\r\n                <label>비밀번호 확인</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"checkUpw\"\r\n                  value={product.checkUpw}\r\n                  className=\"JaddMorePw\"\r\n                  placeholder=\"입력한 비밀번호를 한번 더 확인하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"8\"\r\n                  minLength=\"4\"\r\n                  onBlur={handleValiation}\r\n                />\r\n                {message !== \"\" &&\r\n                  product.upw !== \"\" &&\r\n                  product.checkUpw !== \"\" && (\r\n                    <div\r\n                      style={{\r\n                        color: messageColor,\r\n                        fontSize: \"14px\",\r\n                        paddingTop: \"5px\",\r\n                      }}\r\n                    >\r\n                      {message}\r\n                    </div>\r\n                  )}\r\n              </JaddMorePwWrap>\r\n            </form>\r\n            <br />\r\n            <JaddGenderWrap>\r\n              <div className=\"JaddGender\">\r\n                성별\r\n                <GenderBtWrap>\r\n                  <DefaultBt\r\n                    type=\"button\"\r\n                    name=\"gender\"\r\n                    className=\"gender-bt-man\"\r\n                    onClick={e => handleGenderClick(1)}\r\n                    clicked={product.gender === \"남\"}\r\n                    // 성별={1}\r\n                  >\r\n                    <span>남성</span>\r\n                  </DefaultBt>\r\n                  <DefaultBt\r\n                    type=\"button\"\r\n                    name=\"gender\"\r\n                    className=\"gender-bt-woman\"\r\n                    onClick={e => handleGenderClick(2)}\r\n                    clicked={product.gender === \"여\"}\r\n                  >\r\n                    <span>여성</span>\r\n                  </DefaultBt>\r\n                </GenderBtWrap>\r\n              </div>\r\n            </JaddGenderWrap>\r\n            <br />\r\n            <JaddNickNameWrap>\r\n              <label>닉네임</label>\r\n              <JaddNickNameInner>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nickname\"\r\n                  value={product.nickname}\r\n                  className=\"JaddNickName\"\r\n                  placeholder=\"사용할 닉네임을 입력하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"6\"\r\n                  minLength=\"1\"\r\n                ></input>\r\n\r\n                <DefaultBt\r\n                  className=\"JaddNickName-Bt\"\r\n                  onClick={handleCheckAvailability}\r\n                >\r\n                  중복확인\r\n                </DefaultBt>\r\n              </JaddNickNameInner>\r\n              <NicknameCheck>\r\n                {isAvailable === 1 && (\r\n                  <p style={{ color: \"green\", paddingTop: \"5px\" }}>\r\n                    사용 가능한 닉네임입니다.\r\n                  </p>\r\n                )}\r\n                {isAvailable === 0 && (\r\n                  <p style={{ color: \"red\", paddingTop: \"5px\" }}>\r\n                    이미 사용 중인 닉네임입니다.\r\n                  </p>\r\n                )}\r\n              </NicknameCheck>\r\n            </JaddNickNameWrap>\r\n            <br />\r\n\r\n            <JaddNumberWrap>\r\n              <label>휴대폰 번호</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"tel\"\r\n                value={product.tel.replace(/(\\d{3})(\\d{4})(\\d{3})/, \"$1-$2-$3\")}\r\n                className=\"JaddNumber\"\r\n                placeholder=\"휴대폰 번호를 입력하세요.\"\r\n                onChange={e => {\r\n                  let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                  let event = {\r\n                    target: {\r\n                      name: e.target.name,\r\n                      value: input,\r\n                    },\r\n                  };\r\n                  handleChange(event);\r\n                }}\r\n                maxLength=\"13\"\r\n              />\r\n            </JaddNumberWrap>\r\n            <br />\r\n            <JaddBirthWrap>\r\n              <label>생년월일</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"birth\"\r\n                value={product.birth.replace(\r\n                  /(\\d{4})(\\d{2})(\\d{2})/,\r\n                  \"$1/$2/$3\",\r\n                )}\r\n                className=\"JaddBirth\"\r\n                placeholder=\"YYYY/MM/DD\"\r\n                onChange={e => {\r\n                  let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                  let event = {\r\n                    target: {\r\n                      name: e.target.name,\r\n                      value: input,\r\n                    },\r\n                  };\r\n                  handleChange(event);\r\n                }}\r\n                maxLength=\"10\"\r\n              />\r\n            </JaddBirthWrap>\r\n            <br />\r\n            <JaddAddressWrap>\r\n              <label>주소</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={product.address}\r\n                className=\"JaddAddress\"\r\n                placeholder=\"거주 중인 주소를 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddAddressWrap>\r\n            <JaddAddressBts>\r\n              <DefaultBt\r\n                type=\"button\"\r\n                className=\"join-button\"\r\n                onClick={handleAddClick}\r\n              >\r\n                회원가입\r\n              </DefaultBt>\r\n              <button\r\n                type=\"button\"\r\n                className=\"cancel-button\"\r\n                onClick={() => {\r\n                  handleClickCancel();\r\n                }}\r\n              >\r\n                취소하기\r\n              </button>\r\n            </JaddAddressBts>\r\n          </div>\r\n        </JaddPageInfo>\r\n\r\n        <div>\r\n          <Outlet />\r\n        </div>\r\n      </JaddPageMain>\r\n    </JaddPageWrap>\r\n  );\r\n};\r\nexport default UserSignUpPage;\r\n","export const getNum = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n\r\nexport const getSearch = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n"],"names":["signHost","concat","adminHost","supervisorHost","loginPostTS","async","authParam","_ref","header","headers","data","email","upw","axios","post","error","console","log","loginAdminPostTS","_ref2","res","status","postSignUpTS","signUpData","_ref3","postSvisorSignUpTs","_ref4","atomAdminState","atom","key","default","getCookie","result","props","bttext","_jsx","DefaultBt","children","styled","button","_templateObject","_taggedTemplateLiteral","ColorStyle","primary","Fetching","_jsxs","style","position","left","top","zIndex","width","height","background","display","flexDirection","gap","justifyContent","alignItems","ClipLoader","size","color","loading","fontFamily","fontSize","title","content","callFn","textAlign","padding","borderRadius","paddingBottom","borderBottom","onClick","Button","confirmFn","cancelFn","isSelectModal","setIsSelectModal","useState","isOpen","useNavigate","openSelectModal","confirmSelectModal","prev","cancelSelectModal","isEmptyModal","setIsEmptyModal","openEmptyModal","closeEmptyModal","useCustomHook","navigate","urlSearchParams","setUrlSearchPrams","useSearchParams","isModal","openModal","closeModal","moveToLogin","shutModal","useModal","isLogin","useCustomLoginTS","useSelectModal","useEmptyModal","page","get","parseInt","search","category","filter","check","defaultQueryString","createSearchParams","toString","refresh","setRefresh","MoveToFilter","FilterParam","queryStr","FilterNum","getNum","pathname","MoveToList","CategoryParam","categoryNum","moveToRead","ishop","moveToSearch","SearchParam","SearchStr","moveToReser","MoveToPage","PageParam","PageNum","moveToReview","ireser","checkShop","name","moveToBReser","e","ibutcher","stopPropagation","moveToPayment","pk","amount","moveToCheck","CheckParam","checkNum","moveToSize","SizeParam","SizeStr","atomUserState","atomSupervisorState","userState","setUserState","useRecoilState","adminState","setAdminState","supervisorState","setSupervisorState","resetSignState","useResetRecoilState","resetAdminState","resetSupervisorState","host","isSupervisorLogin","isAdminLogin","shopName","saveAsUserCookie","setCookie","JSON","stringify","saveAsAdminCookie","saveAsSupervisorCookie","doLoginTS","doAdminLoginTS","doSupervisorLoginTS","doLogout","removeCookie","moveToPath","path","replace","loginComplete","setIsModal","navgate","TitleHeaderWrapper","div","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","grayScale","TitleContent","_templateObject4","sub_title","timg","tname","tcontent","src","alt","useCustomMove","queryStrDefault","moveToList","pageParam","pageNum","searchStr","getSearch","moveToModify","num","moveToAdd","initState","pic","checkUpw","nickname","birth","gender","address","tel","UserSignUpPage","product","setProduct","fetching","setFetching","handleChange","target","value","setMessage","image","setImage","selectedImage","setSelectedImage","uploadRef","useRef","handleClick","formData","FormData","dto","Blob","type","append","successFn","failFn","errorFn","response","charAt","statusText","postJadd","setResult","addResult","setAddResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","showModal","setShowModal","message","messageColor","setMessageColor","genderSelect","setGenderSelect","handleGenderClick","setNickname","isAvailable","setIsAvailable","successNickFn","failNickFn","errorNickFn","phoneNumber","setPhoneNumber","birthday","setBirthday","JaddPageWrap","ResultModal","SelectedModal","TitleHeader","process","JaddPageMain","JaddPageImage","className","deleteImage","handleClickImg","current","click","ref","onChange","file","files","previewUrl","URL","createObjectURL","JaddPageInfo","JaddMailWrap","placeholder","JaddNameWrap","action","method","onSubmit","JaddPwWrap","maxLength","minLength","JaddMorePwWrap","onBlur","handleValiation","paddingTop","JaddGenderWrap","GenderBtWrap","clicked","JaddNickNameWrap","JaddNickNameInner","iNickCheck","nickNameCheck","NicknameCheck","JaddNumberWrap","input","event","JaddBirthWrap","JaddAddressWrap","JaddAddressBts","handleAddClick","handleConfirm","Outlet","init"],"sourceRoot":""}