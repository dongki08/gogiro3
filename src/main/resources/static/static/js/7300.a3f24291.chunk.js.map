{"version":3,"file":"static/js/7300.a3f24291.chunk.js","mappings":"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","sources":["components/common/ResultModal.js","components/common/SelectedModal.js","components/meat/hooks/useSelectModal.js","components/meat/hooks/useEmptyModal.js","components/meat/hooks/useCustomHook.js","components/meat/hooks/useModal.js","components/community/styles/ReadStyle.js","components/community/Read.js","pages/community/ReadPage.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useSelectModal() {\r\n  const [isSelectModal, setIsSelectModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmFn: null,\r\n    cancelFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openSelectModal = (title, content, confirmFn, cancelFn) => {\r\n    setIsSelectModal({ isOpen: true, title, content, confirmFn, cancelFn });\r\n  };\r\n\r\n  const confirmSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  const cancelSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  };\r\n}\r\n\r\nexport default useSelectModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useEmptyModal() {\r\n  const [isEmptyModal, setIsEmptyModal] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openEmptyModal = (content, callFn) => {\r\n    setIsEmptyModal({ isOpen: true, content, callFn });\r\n  };\r\n\r\n  const closeEmptyModal = () => {\r\n    setIsEmptyModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return { isEmptyModal, openEmptyModal, closeEmptyModal };\r\n}\r\n\r\nexport default useEmptyModal;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../../../util/utils\";\r\nimport useModal from \"./useModal\";\r\nimport useSelectModal from \"./useSelectModal\";\r\nimport useCustomLoginTS from \"./useCustomLoginTS\";\r\nimport useEmptyModal from \"./useEmptyModal\";\r\nconst useCustomHook = () => {\r\n  const navigate = useNavigate();\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  const { isModal, openModal, closeModal, moveToLogin, shutModal } = useModal();\r\n  const { isLogin } = useCustomLoginTS();\r\n  const {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useSelectModal();\r\n  const { isEmptyModal, openEmptyModal, closeEmptyModal } = useEmptyModal();\r\n\r\n  // @COMMENT SearchParams (page,category,search,filter)\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n\r\n  const category = urlSearchParams.get(\"category\")\r\n    ? parseInt(urlSearchParams.get(\"category\"))\r\n    : 0;\r\n\r\n  const filter = urlSearchParams.get(\"filter\")\r\n    ? parseInt(urlSearchParams.get(\"filter\"))\r\n    : 0;\r\n\r\n  const check = urlSearchParams.get(\"check\")\r\n    ? parseInt(urlSearchParams.get(\"check\"))\r\n    : 0;\r\n\r\n  const defaultQueryString = createSearchParams({\r\n    page,\r\n    search,\r\n    category,\r\n    filter,\r\n  }).toString();\r\n\r\n  // @COMMENT Page Query\r\n  const MoveToPage = PageParam => {\r\n    let queryStr = \"\";\r\n    if (PageParam) {\r\n      const PageNum = getNum(PageParam.page, page);\r\n      queryStr = createSearchParams({\r\n        page: PageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  // @COMMENT Filter Query\r\n  const MoveToFilter = FilterParam => {\r\n    let queryStr = \"\";\r\n    if (FilterParam) {\r\n      const FilterNum = getNum(FilterParam.filter, filter);\r\n      queryStr = createSearchParams({\r\n        filter: FilterNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // @COMMENT Category Query\r\n  const MoveToList = CategoryParam => {\r\n    let queryStr = \"\";\r\n    if (CategoryParam) {\r\n      const categoryNum = getNum(CategoryParam.category, category);\r\n      queryStr = createSearchParams({\r\n        category: categoryNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // ! Read Page hook\r\n  const moveToRead = ishop => {\r\n    navigate({ pathname: `../detail/${ishop}`, search: defaultQueryString });\r\n  };\r\n\r\n  // ! Read Page hook\r\n  const moveToReser = ishop => {\r\n    navigate({\r\n      pathname: `../reservation/${ishop}`,\r\n      search: defaultQueryString,\r\n    });\r\n  };\r\n  // ! GO B ReserPage\r\n  const moveToBReser = (e, ibutcher, name) => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      navigate({\r\n        pathname: `../../butcher/pickup/${ibutcher}`,\r\n        search: `name=${name}&${defaultQueryString}`,\r\n      });\r\n      // console.log(\"넘어간드아\", menuList, name, ibutcher);\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n    console.log(name);\r\n  };\r\n\r\n  const moveToReview = (ireser, checkShop, name, ishop) => {\r\n    console.log(name);\r\n    navigate({\r\n      pathname: `../../meat/review/${ireser}`,\r\n      search: `name=${name}&checkShop=${checkShop}&ishop=${ishop}&${defaultQueryString}`,\r\n    });\r\n  };\r\n  // @COMMENT Payment\r\n  const moveToPayment = (pk, amount) => {\r\n    console.log(\"payment, pk :\", pk, \"amount :\", amount);\r\n    navigate({\r\n      pathname: `/payment`,\r\n      search: `pk=${pk}&amount=${amount}`,\r\n    });\r\n  };\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const moveToSearch = SearchParam => {\r\n    let queryStr = \"\";\r\n    if (SearchParam) {\r\n      const SearchStr = getNum(SearchParam.search, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    page,\r\n    search,\r\n    category,\r\n    filter,\r\n    MoveToFilter,\r\n    MoveToList,\r\n    moveToRead,\r\n    moveToSearch,\r\n    refresh,\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    moveToLogin,\r\n    moveToReser,\r\n    MoveToPage,\r\n    moveToReview,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n    moveToBReser,\r\n    openEmptyModal,\r\n    isEmptyModal,\r\n    closeEmptyModal,\r\n    moveToPayment,\r\n    shutModal,\r\n  };\r\n};\r\nexport default useCustomHook;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useModal() {\r\n  const [isModal, setIsModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openModal = (title, content, callFn) => {\r\n    setIsModal({ isOpen: true, title, content, callFn });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const shutModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const moveToLogin = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n    navgate(\"/login\");\r\n  };\r\n\r\n  return { isModal, openModal, closeModal, moveToLogin, shutModal };\r\n}\r\n\r\nexport default useModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const MoreBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n`;\r\n\r\nexport const TitleBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 20px 20px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  align-self: stretch;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  border-bottom: 1px solid ${ColorStyle.g500};\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const MoreTitleStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const MoreStyle = styled.div`\r\n  position: relative;\r\n  color: ${ColorStyle.g600};\r\n`;\r\n\r\nexport const WriterBoxStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  color: ${ColorStyle.g700};\r\n  font-size: ${FontSize.default};\r\n  .viewBox {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  .like-box {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n  }\r\n  .like-button {\r\n    background: none;\r\n    border: none;\r\n    padding: none;\r\n    margin: 0;\r\n    color: ${ColorStyle.g700};\r\n    font: inherit;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PrnvContentStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: flex-start;\r\n  gap: 60px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  .prnv {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  .prnvTitle {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BtnBoxStyle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 30px 0px 50px 0px;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  align-self: stretch;\r\n  .editBtn {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n\r\nexport const ReviewBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px 20px 50px 20px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .readReviewBox {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    padding-bottom: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    align-self: stretch;\r\n  }\r\n  .readReview {\r\n    display: flex;\r\n    /* width: 1105px; */\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 15px;\r\n    flex: 1 0 0;\r\n  }\r\n  .reviewInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n  }\r\n  .reviewCount {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n    color: ${ColorStyle.secondary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .userInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 30px;\r\n    align-self: stretch;\r\n  }\r\n  .user {\r\n    display: flex;\r\n    width: 65px;\r\n    align-items: center;\r\n    gap: 2px;\r\n  }\r\n  .nickName {\r\n    align-items: center;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.primary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .date {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g500};\r\n    font-size: 11px;\r\n  }\r\n  .reviewContentBox {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .reviewContent {\r\n    display: flex;\r\n    padding: 0px 10px;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-shrink: 1;\r\n    gap: 10px;\r\n    /* align-self: stretch; */\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .button-box {\r\n    display: flex;\r\n    /* width: 25px; */\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-shrink: 0;\r\n  }\r\n  .deleteBtn {\r\n    display: flex;\r\n    width: 25px;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.primary};\r\n    cursor: pointer;\r\n  }\r\n  .reportBtn {\r\n    display: flex;\r\n    /* width: 25px; */\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n  }\r\n  .inputReviewBox {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 20px 0px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 13px;\r\n    align-self: stretch;\r\n    border-top: 1px dashed ${ColorStyle.g500};\r\n  }\r\n  .inputReview {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    align-self: stretch;\r\n    textarea {\r\n      border: none;\r\n      outline: none;\r\n      resize: none;\r\n      padding: 12px 20px 4px 20px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 90%;\r\n      border-radius: 10px;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      color: ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteComment,\r\n  deleteOne,\r\n  getOne,\r\n  postComment,\r\n  postCommuCommentReport,\r\n  postCommuReport,\r\n  postFav,\r\n} from \"../../api/communityApi\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\nimport {\r\n  ContentInfoStyle,\r\n  ContentStyle,\r\n  ImgStyle,\r\n  LargeImgStyle,\r\n  NameStyle,\r\n  ThumbnailStyle,\r\n  UserStyle,\r\n  WrapStyle,\r\n} from \"./styles/ListStyle\";\r\nimport {\r\n  BtnBoxStyle,\r\n  MoreBoxStyle,\r\n  MoreStyle,\r\n  MoreTitleStyle,\r\n  PrnvContentStyle,\r\n  ReviewBox,\r\n  TitleBoxStyle,\r\n  WriterBoxStyle,\r\n} from \"./styles/ReadStyle\";\r\n// @COMMENT import React-Query\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport useCustomLoginTS from \"../meat/hooks/useCustomLoginTS\";\r\nimport useCustomHook from \"../meat/hooks/useCustomHook\";\r\n\r\nconst host = API_SERVER_HOST;\r\n// 서버데이터 초기값\r\nconst initState = {\r\n  iboard: 0,\r\n  iuser: 0,\r\n  name: \"\",\r\n  writerPic: \"\",\r\n  title: \"\",\r\n  contents: \"\",\r\n  createdAt: \"\",\r\n  pics: [],\r\n  be: {\r\n    iboard: 0,\r\n    title: \"\",\r\n  },\r\n  af: {\r\n    iboard: 0,\r\n    title: \"\",\r\n  },\r\n  comments: [\r\n    {\r\n      icomment: 0,\r\n      writerPk: 0,\r\n      writerName: \"\",\r\n      comment: \"\",\r\n      createdAt: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 댓글 등록을 위한 초기값\r\nconst initComment = {\r\n  contents: \"\",\r\n};\r\n\r\nconst Read = () => {\r\n  // @RTK 로그인 정보 불러오기\r\n  // const authState = useSelector(state => state.authSlice);\r\n  // @RECOIL 로그인 정보 불러오기\r\n  const { userState } = useCustomLoginTS();\r\n  // console.log(authState.nickname);\r\n  const isNickname = userState.nickname;\r\n  // const isNickname = authState.nickname;\r\n\r\n  // 커스텀 훅\r\n  const { moveToRead, moveToList, moveToModify, page } = useCustomMove();\r\n\r\n  // 해당 글 pk값 추출 및 할당(get)\r\n  const { iboard } = useParams();\r\n\r\n  // 해당 글 상태 초기화 및 업데이트(get)\r\n  const [content, setContent] = useState(initState);\r\n  // console.log(content.name);\r\n  const isName = content.name;\r\n\r\n  // 해당 글에 댓글 작성을 위한 상태 초기화 및 업데이트(post)\r\n  const [contents, setcontents] = useState(initComment);\r\n\r\n  // 해당 글의 댓글 상태 초기화 및 업데이트(get)\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  // 커뮤니티 해당 글 이미지 미리보기 관련\r\n  const [selectedImg, setSlectedImg] = useState(content.pics[0]?.pic);\r\n\r\n  // 댓글이 빈 문자열일 때 resultModal을 띄우기 위한 상태 업데이트\r\n  const [showCommentModal, setShowCommentModal] = useState(false);\r\n\r\n  // 댓글이 50자 넘을 때 resultModal을 띄우기 위한 상태 업데이트\r\n  const [showCommentLengthModal, setShowCommentLengthModal] = useState(false);\r\n\r\n  // 댓글 삭제 관련\r\n  // 댓글 pk값 상태 업데이트\r\n  const [currentCommentId, setCurrentCommentId] = useState(null);\r\n\r\n  // selectedModal 띄우기 위한 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 해당 글 pk값 상태 업데이트\r\n  const [currentReadId, setCurrentReadId] = useState(null);\r\n\r\n  // selectedModal 을 띄우기 위한 상태 업데이트\r\n  const [showReadModal, setShowReadModal] = useState(false);\r\n\r\n  // API 통신 결과 상태 업데이트\r\n  // 댓글 등록 및 삭제 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n\r\n  // 해당 글 삭제 결과 상태 업데이트\r\n  const [delReadResult, setDelReadResult] = useState(false);\r\n\r\n  // resultModal props 값 업데이트\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(\"\");\r\n\r\n  // Modal 닫기 이후 화면 전환 상태 업데이트\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n\r\n  // ----------------------------------------------------------------------------------------------------\r\n\r\n  // 커뮤니티 해당 글 정보 가져오기(get)\r\n  const getOneData = () => {\r\n    getOne({ iboard, successFn, failFn, errorFn });\r\n  };\r\n\r\n  const successFn = result => {\r\n    setFetching(false);\r\n    setContent(result);\r\n    setComments(result.comments);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOneData();\r\n  }, [iboard, page]);\r\n\r\n  // 해당글의 이미지 큰이미지로 보여주기\r\n  // content.pics가 변경될 때마다 실행됩니다.\r\n  useEffect(() => {\r\n    if (content.pics && content.pics.length > 0 && content.pics[0].pic) {\r\n      setSlectedImg(content.pics[0].pic);\r\n    }\r\n  }, [content.pics]);\r\n\r\n  // 썸네일 이미지 클릭 시 이미지 상태 업데이트\r\n  const handleThumbnailClick = pic => {\r\n    setSlectedImg(pic);\r\n  };\r\n\r\n  // 댓글 등록 관련\r\n  const handleChange = e => {\r\n    // 댓글 입력 텍스트 필드의 새로고침을 위해 변수에 할당\r\n    const newContents = { ...contents, [e.target.name]: e.target.value };\r\n    setcontents(newContents);\r\n    // 기존 방식\r\n    // contents[e.target.name] = e.target.value;\r\n    // setcontents({ ...contents });\r\n  };\r\n\r\n  // 댓글 등록 함수\r\n  const addComment = () => {\r\n    // 댓글 입력 창에 빈 문자열이면 모달창 띄우기\r\n    if (contents.contents.length !== 0) {\r\n      // 댓글이 50자 이내면 post 실행\r\n      if (contents.contents.length <= 50) {\r\n        postComment({\r\n          iboard,\r\n          contents,\r\n          successFn: successFnAdd,\r\n          failFn: failFnAdd,\r\n          errorFn: errorFnAdd,\r\n        });\r\n      }\r\n      // 댓글이 50자 초과면 모달창 띄우기\r\n      if (contents.contents.length > 50) {\r\n        setShowCommentLengthModal(true);\r\n      }\r\n    } else {\r\n      // 댓글 빈 문자열이면 모달창 띄우기\r\n      setShowCommentModal(true);\r\n    }\r\n    // console.log(contents);\r\n    // console.log(iboard);\r\n  };\r\n  const successFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록\");\r\n    setPopContent(\"댓글을 등록하였습니다.\");\r\n    setcontents({ ...initComment });\r\n    getOneData();\r\n  };\r\n  const failFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"댓글을 등록에 실패하였습니다. 다시 등록 해주세요.\");\r\n  };\r\n  const errorFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 등록 해주세요.\");\r\n  };\r\n\r\n  // 댓글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelComment = icomment => {\r\n    setCurrentCommentId(icomment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const successFnDel = result => {\r\n    console.log(\"댓글 삭제 성공\", result);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제\");\r\n    setPopContent(\"댓글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setResult(false);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"댓글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // 해당 글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelRead = iboard => {\r\n    setCurrentReadId(iboard);\r\n    setShowReadModal(true);\r\n  };\r\n\r\n  // 모달창 관련\r\n  const closeModal = () => {\r\n    // 모달창 숨기기\r\n    setResult(false);\r\n  };\r\n\r\n  // 댓글 등록시 빈 문자열일 때 모달창 닫기\r\n  const closeCommentBlank = () => {\r\n    setShowCommentModal(false);\r\n  };\r\n\r\n  // 댓글 등록 시 글 수 50자 초과 모달창 닫기\r\n  const closeCommnetLength = () => {\r\n    setShowCommentLengthModal(false);\r\n  };\r\n\r\n  // 해당 글 삭제 resultModal callFn\r\n  const closeDelReadModal = () => {\r\n    // 모달창 숨기기\r\n    setShowReadModal(false);\r\n    moveToList({ page: page });\r\n  };\r\n\r\n  // 해당 글 삭제 selectedModal 취소\r\n  const cancelReadModal = () => {\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  // 댓글 삭제 selectedModal 취소 버튼\r\n  const cancelModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 댓글 삭제를 위한 selectedModal 확인버튼\r\n  const confirmModal = () => {\r\n    if (currentCommentId) {\r\n      deleteComment({\r\n        icomment: currentCommentId,\r\n        successFn: successFnDel,\r\n        failFn: failFnDel,\r\n        errorFn: errorFnDel,\r\n      });\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 해당 글 삭제를 위한 selectedModal 확인버튼\r\n  const confirmReadModal = () => {\r\n    if (currentReadId) {\r\n      deleteOne({\r\n        iboard: currentReadId,\r\n        successFn: successFnReadDel,\r\n        failFn: failFnReadDel,\r\n        errorFn: errorFnReadDel,\r\n      });\r\n    }\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  const successFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 성공\", delReadResult);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제\");\r\n    setPopContent(\"해당 글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setDelReadResult(false);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"해당 글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setPopRedirect(1);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // @COMMENT React-query Mutation (Like function)\r\n  //  /api/community/fav initState\r\n  const initStatefav = {\r\n    iuser: 0,\r\n    iboard: 0,\r\n  };\r\n  // use Mutation\r\n  const iuser = userState.iuser;\r\n  // const dataForm = {\r\n  //   iuser: parseInt(iuser),\r\n  //   iboard: parseInt(iboard),\r\n  // };\r\n  // console.log(\"데이터 폼 테스트 :\", dataForm);\r\n  const [favorite, setFavorite] = useState(false);\r\n  const favMutation = useMutation({\r\n    mutationFn: fav => postFav({ iboard }),\r\n    onSuccess: result => {\r\n      // console.log(\"성공한 게시물 : \", iboard);\r\n      if (result.result === 0) {\r\n        openModal(\"좋아요 해제\", \"좋아요가 해제 되었습니다.\", shutModal);\r\n        setFavorite(false);\r\n      }\r\n      if (result.result === 1) {\r\n        openModal(\"좋아요 등록\", \"좋아요가 등록 되었습니다.\", shutModal);\r\n        setFavorite(true);\r\n      }\r\n    },\r\n    onError: () => {},\r\n  });\r\n\r\n  const handleClickFav = () => {\r\n    console.log(\"데이터다 :\", iboard, iuser);\r\n    // console.log(\"test2\", dataForm);\r\n    favMutation.mutate();\r\n  };\r\n  const reportInitState = {\r\n    iboard: iboard,\r\n    ireport: 1,\r\n  };\r\n  const [reportData, setReportData] = useState(reportInitState);\r\n  const [reported, setReported] = useState(false);\r\n  const reportMutation = useMutation({\r\n    mutationFn: reportData => postCommuReport({ reportData }),\r\n    onSuccess: () => {\r\n      console.log(\"신고 성공\");\r\n      // console.log(\"신고 -완-\");\r\n      openModal(\"글신고완료\", \"신고가 완료 되었습니다.\", shutModal);\r\n      setReported(true);\r\n    },\r\n    onError: error => {\r\n      if (error.response && error.response.status === 404) {\r\n        // openModal(\"예약 실패\", \"시간을 기입해주세요.\", closeModal);\r\n        openModal(\"신고 오류\", \"이미 신고한 글입니다.\", shutModal);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleClickRBoardBtn = comment => {\r\n    console.log(\"딸깍\", comment);\r\n    // console.log(\"딸깍\", comment);\r\n    openSelectModal(\r\n      \"글 신고하기\",\r\n      <div style={{ padding: \"10px\" }}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <span>신고항목을 선택해주세요.</span>\r\n        </div>\r\n        <div>\r\n          <select onChange={e => handleChangeBoardReport(e)}>\r\n            <option value={1}>욕설/인신공격</option>\r\n            <option value={2}>음란물</option>\r\n            <option value={3}>영리목적/홍보성</option>\r\n            <option value={4}>개인정보</option>\r\n            <option value={5}>게시글 도배</option>\r\n            <option value={6}>기타</option>\r\n          </select>\r\n        </div>\r\n      </div>,\r\n      () => {\r\n        handleClickBoardReport(), cancelSelectModal();\r\n      },\r\n      () => cancelSelectModal(),\r\n    );\r\n  };\r\n\r\n  const handleChangeBoardReport = e => {\r\n    const selectedValue = parseInt(e.target.value, 10);\r\n    setReportData(prevValue => ({\r\n      ...prevValue,\r\n      ireport: selectedValue,\r\n    }));\r\n  };\r\n\r\n  const handleClickBoardReport = () => {\r\n    // const numIboard = parseInt(iboard, 10);\r\n    const report = {\r\n      iboard: iboard !== undefined ? Number(iboard) : 0,\r\n      ireport: reportData.ireport,\r\n    };\r\n    console.log(\"report form test \", report);\r\n    // console.log(\"reportData \", reportData);\r\n    reportMutation.mutate(report);\r\n  };\r\n\r\n  // ! 커뮤니티 댓글 신고\r\n\r\n  const reportCommentInitState = {\r\n    icomment: 0,\r\n    ireport: 1,\r\n  };\r\n  const [reportCommentData, setReportCommentData] = useState(\r\n    reportCommentInitState,\r\n  );\r\n  const reportCommentMutation = useMutation({\r\n    mutationFn: reportCommentData =>\r\n      postCommuCommentReport({ reportCommentData }),\r\n    onSuccess: result => {\r\n      // console.log(\"값\", result);\r\n      // console.log(\"신고 -완-\");\r\n      openModal(\"댓글신고완료\", \"신고가 완료 되었습니다.\", shutModal);\r\n    },\r\n    onError: error => {\r\n      if (error.response && error.response.status === 404) {\r\n        // openModal(\"예약 실패\", \"시간을 기입해주세요.\", closeModal);\r\n        openModal(\"신고 오류\", \"이미 신고한 글입니다.\", shutModal);\r\n      }\r\n    },\r\n  });\r\n  // Call customhook\r\n  const {\r\n    isModal,\r\n    openModal,\r\n    // closeModal,\r\n    openSelectModal,\r\n    shutModal,\r\n    isSelectModal,\r\n    cancelSelectModal,\r\n  } = useCustomHook();\r\n\r\n  const handleClickRCommentBtn = comment => {\r\n    console.log(\"딸깍\", comment);\r\n    // console.log(\"딸깍\", comment);\r\n    openSelectModal(\r\n      \"댓글 신고하기\",\r\n      <div style={{ padding: \"10px\" }}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <span>신고항목을 선택해주세요.</span>\r\n        </div>\r\n        <div>\r\n          <select onChange={e => handleChangeCommentReport(e)}>\r\n            <option value={1}>욕설/인신공격</option>\r\n            <option value={2}>음란물</option>\r\n            <option value={3}>영리목적/홍보성</option>\r\n            <option value={4}>개인정보</option>\r\n            <option value={5}>게시글 도배</option>\r\n            <option value={6}>기타</option>\r\n          </select>\r\n        </div>\r\n      </div>,\r\n      () => {\r\n        handleClickCommentReport(comment), cancelSelectModal();\r\n      },\r\n      () => cancelSelectModal(),\r\n    );\r\n  };\r\n  const handleChangeCommentReport = e => {\r\n    const selectedValue = parseInt(e.target.value, 10);\r\n    console.log(\"handlechange\", selectedValue);\r\n    setReportCommentData(prevValue => ({\r\n      ...prevValue,\r\n      ireport: selectedValue,\r\n    }));\r\n  };\r\n\r\n  const handleClickCommentReport = comment => {\r\n    console.log(\"comment num \", comment);\r\n    // const numIboard = parseInt(iboard, 10);\r\n    const reportComment = {\r\n      icomment: comment !== undefined ? Number(comment) : 0,\r\n      ireport: reportCommentData.ireport,\r\n    };\r\n    console.log(\"report form test \", reportComment);\r\n    // console.log(\"reportCommentData \", reportCommentData);\r\n    reportCommentMutation.mutate(reportComment);\r\n  };\r\n\r\n  // const handleClickRPostBtn = () => {};\r\n  // Report Comment Button Click\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n\r\n      {isSelectModal.isOpen && (\r\n        <SelectedModal\r\n          title={isSelectModal.title}\r\n          content={isSelectModal.content}\r\n          confirmFn={isSelectModal.confirmFn}\r\n          cancelFn={isSelectModal.cancelFn}\r\n        />\r\n      )}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <TitleBoxStyle>\r\n        <MoreTitleStyle>{content.title}</MoreTitleStyle>\r\n        <WriterBoxStyle>\r\n          <div className=\"userName\">{content.name}</div>\r\n          <div className=\"date\">{content.createdAt}</div>\r\n          {/* @COMMENT TEST LIKE BUTTON */}\r\n          <div className=\"like-box\" onClick={handleClickFav}>\r\n            {favorite ? (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/like_fill.svg`}\r\n                alt=\"like\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/like.svg`}\r\n                alt=\"like\"\r\n              />\r\n            )}\r\n            <button className=\"like-button\">좋아요</button>\r\n          </div>\r\n          {/* <button onClick={handleClickReport}>신고버튼</button>\r\n           */}\r\n          <div className=\"like-box\" onClick={handleClickRBoardBtn}>\r\n            {/* <span>글신고하고싶다 이말이야</span> */}\r\n            {/* <select onChange={e => handleChangeReport(e)}>\r\n                  <option value={1}>욕설/인신공격</option>\r\n                  <option value={2}>음란물</option>\r\n                  <option value={3}>영리목적/홍보성</option>\r\n                  <option value={4}>개인정보</option>\r\n                  <option value={5}>게시글 도배</option>\r\n                  <option value={6}>기타</option>\r\n                </select> */}\r\n            {reported ? (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/report_fill.svg`}\r\n                alt=\"like\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/report.svg`}\r\n                alt=\"like\"\r\n              />\r\n            )}\r\n            <button className=\"like-button\">신고하기</button>\r\n          </div>\r\n          {/* <div className=\"viewBox\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/assets/images/view_eye.svg`}\r\n              alt=\"img\"\r\n            />\r\n            <div className=\"viewCount\"></div>            \r\n          </div> */}\r\n        </WriterBoxStyle>\r\n      </TitleBoxStyle>\r\n      <MoreBoxStyle>\r\n        <ImgStyle>\r\n          <LargeImgStyle>\r\n            {content.pics[0] ? (\r\n              <img\r\n                src={`${host}/pic/community/${content.iboard}/${selectedImg}`}\r\n                alt=\"Large image\"\r\n              />\r\n            ) : null}\r\n          </LargeImgStyle>\r\n          <ThumbnailStyle>\r\n            {content.pics.map(\r\n              (pic, index) =>\r\n                pic && (\r\n                  <div\r\n                    className=\"thumbnail\"\r\n                    key={index}\r\n                    onClick={() => {\r\n                      handleThumbnailClick(pic.pic);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={`${host}/pic/community/${content.iboard}/${pic.pic}`}\r\n                      alt={`img_${index + 1}`}\r\n                    />\r\n                  </div>\r\n                ),\r\n            )}\r\n          </ThumbnailStyle>\r\n        </ImgStyle>\r\n        <ContentInfoStyle>\r\n          <ContentStyle>\r\n            <UserStyle>\r\n              {content.writerPic ? (\r\n                <img\r\n                  src={`${host}/pic/user/${content.iuser}/${content.writerPic}`}\r\n                  alt=\"프로필사진\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                  alt=\"기본사진\"\r\n                />\r\n              )}\r\n              <NameStyle>\r\n                <div>{content.name}</div>\r\n                {/* <TagBoxStyle>\r\n                  <Tag tagtext=\"#동성로\" />\r\n                  <Tag tagtext=\"#모듬한판\" />\r\n                  <Tag tagtext=\"#퇴근길\" />\r\n                </TagBoxStyle> */}\r\n              </NameStyle>\r\n            </UserStyle>\r\n            <MoreStyle>{content.contents}</MoreStyle>\r\n          </ContentStyle>\r\n        </ContentInfoStyle>\r\n      </MoreBoxStyle>\r\n      {content.be && (\r\n        <PrnvContentStyle>\r\n          <div className=\"prnv\">\r\n            <div className=\"prnvIcon\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/mingcute_up-line.svg`}\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n            <div className=\"prnvText\">이전글</div>\r\n          </div>\r\n          <div\r\n            className=\"prnvTitle\"\r\n            onClick={() => {\r\n              moveToRead(content.be.iboard);\r\n            }}\r\n          >\r\n            {content.be.title}\r\n          </div>\r\n        </PrnvContentStyle>\r\n      )}\r\n      {content.af && (\r\n        <PrnvContentStyle>\r\n          <div className=\"prnv\">\r\n            <div className=\"prnvIcon\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/mingcute_down-line.svg`}\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n            <div className=\"prnvText\">다음글</div>\r\n          </div>\r\n          <div\r\n            className=\"prnvTitle\"\r\n            onClick={() => {\r\n              moveToRead(content.af.iboard);\r\n            }}\r\n          >\r\n            {content.af.title}\r\n          </div>\r\n        </PrnvContentStyle>\r\n      )}\r\n      <BtnBoxStyle>\r\n        <div className=\"editBtn\">\r\n          <div\r\n            onClick={() => {\r\n              moveToModify(content.iboard);\r\n            }}\r\n          >\r\n            {isName === isNickname ? <Button bttext=\"수정하기\" /> : null}\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              handleDelRead(content.iboard);\r\n            }}\r\n          >\r\n            {isName === isNickname ? <Button bttext=\"삭제하기\" /> : null}\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            moveToList({ page });\r\n          }}\r\n        >\r\n          <Button bttext=\"목록보기\" />\r\n        </div>\r\n      </BtnBoxStyle>\r\n      <ReviewBox>\r\n        <div className=\"readReviewBox\">\r\n          <div className=\"readReview\">\r\n            <div className=\"reviewInfo\">\r\n              <div className=\"reviewCount\">\r\n                댓글 {content.comments.length}개\r\n              </div>\r\n              {content.comments.length > 0 &&\r\n                content.comments.map(comment => (\r\n                  <>\r\n                    <div className=\"userInfo\" key={comment.icomment}>\r\n                      <div className=\"user\">\r\n                        <div className=\"icon\">\r\n                          <img\r\n                            src={`${process.env.PUBLIC_URL}/assets/images/speech.svg`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"nickName\">{comment.writerName}</div>\r\n                      </div>\r\n                      <div className=\"date\">{comment.createdAt}</div>\r\n                    </div>\r\n                    <div className=\"reviewContentBox\">\r\n                      <div className=\"reviewContent\">{comment.comment}</div>\r\n                      <div className=\"button-box\">\r\n                        {comment.writerName === isNickname ? (\r\n                          <div\r\n                            className=\"deleteBtn\"\r\n                            onClick={() => {\r\n                              handleDelComment(comment.icomment);\r\n                            }}\r\n                          >\r\n                            삭제\r\n                          </div>\r\n                        ) : null}\r\n                        <div\r\n                          className=\"reportBtn\"\r\n                          onClick={() =>\r\n                            handleClickRCommentBtn(comment.icomment)\r\n                          }\r\n                        >\r\n                          {/* <span>댓글신고하고싶다 이말이야</span>\r\n\r\n                          <select onChange={e => handleChangeCommentReport(e)}>\r\n                            <option value={1}>욕설/인신공격</option>\r\n                            <option value={2}>음란물</option>\r\n                            <option value={3}>영리목적/홍보성</option>\r\n                            <option value={4}>개인정보</option>\r\n                            <option value={5}>게시글 도배</option>\r\n                            <option value={6}>기타</option>\r\n                          </select> */}\r\n                          댓글신고\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"inputReviewBox\">\r\n          <div className=\"inputReview\">\r\n            <textarea\r\n              cols={50}\r\n              type=\"text\"\r\n              name=\"contents\"\r\n              value={contents.contents}\r\n              onChange={e => handleChange(e)}\r\n              placeholder=\"댓글을 입력해보세요(50자 이내)\"\r\n            />\r\n          </div>\r\n          <div onClick={addComment}>\r\n            <Button bttext=\"댓글입력\" />\r\n          </div>\r\n        </div>\r\n      </ReviewBox>\r\n\r\n      {/* 모달창 */}\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"댓글 삭제\"\r\n          content=\"정말 댓글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmModal}\r\n          cancelFn={cancelModal}\r\n        />\r\n      ) : null}\r\n\r\n      {showReadModal ? (\r\n        <SelectedModal\r\n          title=\"글 삭제\"\r\n          content=\"정말 해당 글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmReadModal}\r\n          cancelFn={cancelReadModal}\r\n        />\r\n      ) : null}\r\n\r\n      {result ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n\r\n      {delReadResult ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeDelReadModal}\r\n        />\r\n      ) : null}\r\n\r\n      {showCommentModal ? (\r\n        <ResultModal\r\n          title=\"댓글 등록\"\r\n          content=\"댓글을 입력해주세요\"\r\n          callFn={closeCommentBlank}\r\n        />\r\n      ) : null}\r\n\r\n      {showCommentLengthModal ? (\r\n        <ResultModal\r\n          title=\"댓글 등록\"\r\n          content=\"댓글을 50자 이내로 작성해주세요\"\r\n          callFn={closeCommnetLength}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React from \"react\";\r\nimport Read from \"../../components/community/Read\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\n\r\n// 글 읽기 페이지입니다.\r\nconst ReadPage = () => {\r\n  return (\r\n    <div>\r\n      <TitleHeader\r\n        timg={`${process.env.PUBLIC_URL}/assets/images/community_header.png`}\r\n        tname=\"고기잡담\"\r\n        tcontent='\"인생은 고기서 고기다\"'\r\n      />\r\n      <Read />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadPage;\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else {\n      this.#currentMutation?.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\nfunction noop() {}\n","export function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwError function to override throwing behavior on a per-error basis\n  if (typeof throwError === 'function') {\n    return throwError(...params)\n  }\n\n  return !!throwError\n}\n"],"names":["_ref","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","isSelectModal","setIsSelectModal","useState","isOpen","useNavigate","openSelectModal","confirmSelectModal","prev","cancelSelectModal","isEmptyModal","setIsEmptyModal","openEmptyModal","closeEmptyModal","useCustomHook","navigate","urlSearchParams","setUrlSearchPrams","useSearchParams","isModal","openModal","closeModal","moveToLogin","shutModal","useModal","isLogin","useCustomLoginTS","useSelectModal","useEmptyModal","page","get","parseInt","search","category","filter","defaultQueryString","createSearchParams","toString","refresh","setRefresh","MoveToFilter","FilterParam","queryStr","FilterNum","getNum","pathname","MoveToList","CategoryParam","categoryNum","moveToRead","ishop","concat","moveToSearch","SearchParam","SearchStr","console","log","moveToReser","MoveToPage","PageParam","PageNum","moveToReview","ireser","checkShop","name","moveToBReser","e","ibutcher","stopPropagation","moveToPayment","pk","amount","setIsModal","navgate","MoreBoxStyle","styled","div","_templateObject","_taggedTemplateLiteral","TitleBoxStyle","_templateObject2","FontSize","strong","ColorStyle","g500","MoreTitleStyle","_templateObject3","MoreStyle","_templateObject4","g600","WriterBoxStyle","_templateObject5","g700","default","PrnvContentStyle","_templateObject6","BtnBoxStyle","_templateObject7","ReviewBox","_templateObject8","secondary","primary","g900","host","API_SERVER_HOST","initState","iboard","iuser","writerPic","contents","createdAt","pics","be","af","comments","icomment","writerPk","writerName","comment","initComment","Read","_content$pics$","userState","isNickname","nickname","moveToList","moveToModify","useCustomMove","useParams","setContent","isName","setcontents","setComments","fetching","setFetching","selectedImg","setSlectedImg","pic","showCommentModal","setShowCommentModal","showCommentLengthModal","setShowCommentLengthModal","currentCommentId","setCurrentCommentId","showModal","setShowModal","currentReadId","setCurrentReadId","showReadModal","setShowReadModal","result","setResult","delReadResult","setDelReadResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","getOneData","getOne","successFn","failFn","errorFn","useEffect","length","successFnAdd","failFnAdd","errorFnAdd","successFnDel","failFnDel","errorFnDel","successFnReadDel","failFnReadDel","errorFnReadDel","favorite","setFavorite","favMutation","useMutation","mutationFn","fav","postFav","onSuccess","onError","reportInitState","ireport","reportData","setReportData","reported","setReported","reportMutation","postCommuReport","error","response","status","handleChangeBoardReport","selectedValue","target","value","prevValue","handleClickBoardReport","report","undefined","Number","mutate","reportCommentData","setReportCommentData","reportCommentMutation","postCommuCommentReport","handleChangeCommentReport","handleClickCommentReport","reportComment","WrapStyle","Fetching","SelectedModal","ResultModal","className","handleClickFav","src","process","alt","marginBottom","onChange","ImgStyle","LargeImgStyle","ThumbnailStyle","map","index","handleThumbnailClick","ContentInfoStyle","ContentStyle","UserStyle","NameStyle","handleDelRead","_Fragment","handleClickRCommentBtn","cols","type","newContents","handleChange","placeholder","addComment","postComment","confirmModal","deleteComment","cancelModal","confirmReadModal","deleteOne","cancelReadModal","closeDelReadModal","closeCommentBlank","closeCommnetLength","ReadPage","TitleHeader","timg","tname","tcontent","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_updateResult","WeakSet","_notify","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","this","setOptions","bindMethods","_classPrivateMethodGet","_updateResult2","call","bind","reset","prevOptions","_classPrivateFieldGet2","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","mutationKey","hashKey","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","action","_notify2","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","state","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","data","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","listeners","forEach","listener","queryClient","useQueryClient","React","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync","throwError","params"],"sourceRoot":""}