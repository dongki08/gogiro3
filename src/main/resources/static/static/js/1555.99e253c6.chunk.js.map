{"version":3,"file":"static/js/1555.99e253c6.chunk.js","mappings":"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","sources":["api/config.js","components/common/Fetching.js","components/common/ResultModal.js","components/meat/styles/GCardStyle.js","components/meat/TSCardComponent.tsx","pages/meat/styles/MeatListStyle.js","pages/meat/TSMeatListPage.tsx","pages/meat/styles/TS_Style.ts"],"sourcesContent":["export const API_SERVER_HOST = \"\";\r\n","import React from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst Fetching = () => {\r\n  const laodingCss = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <ClipLoader size={50} color={ColorStyle.primary} loading={true} />\r\n      <div\r\n        style={{\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        맛있게 굽고 있는 중...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fetching;\r\n","import Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\n// 고깃집 가게 카드 컴포넌트\r\nexport const CardWrapper = styled.div`\r\n  width: 1180px;\r\n  margin-top: 80px;\r\n`;\r\nexport const MeatStoreCard = styled.div`\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  display: inline-flex;\r\n  padding: 30px 0px;\r\n  align-items: flex-start;\r\n  /* margin-right: 50px; */\r\n  /* background: red; */\r\n`;\r\nexport const MeatStoreCardName = styled.div`\r\n  margin-left: 10px;\r\n  position: relative;\r\n  font-size: ${FontSize.title};\r\n  font-weight: 400;\r\n\r\n  /* margin-bottom: 20px; */\r\n`;\r\nexport const MeatStoreInfo = styled.div`\r\n  display: flex;\r\n  width: 200px;\r\n  height: 230px;\r\n  padding: 10px;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  align-content: flex-start;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const MeatStoreBox = styled.div`\r\n  display: flex;\r\n  width: 150px;\r\n  height: 210px;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  flex-shrink: 0;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MeatSotreCardImg = styled.div`\r\n  width: 380px;\r\n  height: 230px;\r\n  display: flex;\r\n  align-items: center;\r\n  /* background-color: blue; */\r\n  img {\r\n    width: 380px;\r\n    height: 210px;\r\n  }\r\n`;\r\n\r\nexport const MeatstoreTag = styled.div``;\r\n\r\nexport const MeatStoreTitle = styled.div`\r\n  cursor: pointer;\r\n  color: #111;\r\n  height: 64px;\r\n  /* font-family: DAEAM_LEE_TAE_JOON; */\r\n  font-size: ${FontSize.sub_title};\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 125%; /* 41.25px */\r\n`;\r\nexport const SubTitle = styled.span`\r\n  font-size: ${FontSize.sub_title};\r\n  font-weight: 400;\r\n  color: ${ColorStyle.g500};\r\n`;\r\n\r\nexport const ReserveBtn = styled.div`\r\n  cursor: pointer;\r\n  padding-top: 30px;\r\n  width: 73px;\r\n  height: 25px;\r\n  span {\r\n    color: #111;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 23.75px */\r\n    text-decoration-line: underline;\r\n  }\r\n`;\r\nexport const InfoTagWrap = styled.div`\r\n  display: flex;\r\n  width: 150px;\r\n  height: 60px;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n  button {\r\n    display: flex;\r\n    width: 70px;\r\n    height: 30px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex-shrink: 0;\r\n    border-radius: 20px;\r\n    border: 2px solid var(--sub, #066e52);\r\n    background: #fff;\r\n\r\n    span {\r\n      width: 70px;\r\n      flex-shrink: 0;\r\n      color: var(--primary, #d60117);\r\n      text-align: center;\r\n      font-family: DAEAM_LEE_TAE_JOON;\r\n      font-size: 11px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: 125%; /* 17.5px */\r\n    }\r\n  }\r\n  button {\r\n    border-radius: 20px;\r\n    border: 2px solid var(--sub, #066e52);\r\n    background: var(--gray-scale-0, #fff);\r\n  }\r\n`;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomHook from \"./hooks/useCustomHook\";\r\nimport useCustomLoginTS from \"./hooks/useCustomLoginTS\";\r\nimport {\r\n  CardWrapper,\r\n  InfoTagWrap,\r\n  MeatSotreCardImg,\r\n  MeatStoreBox,\r\n  MeatStoreCard,\r\n  MeatStoreInfo,\r\n  MeatStoreTitle,\r\n  ReserveBtn,\r\n} from \"./styles/GCardStyle\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport { PropsList } from \"../../pages/meat/Meat\";\r\n\r\nconst ListCard: React.FC<PropsList> = ({ serverData }) => {\r\n  const navigate = useNavigate();\r\n  console.log(serverData);\r\n  const { ishop } = useParams();\r\n  const { moveToRead, moveToReser, isModal, openModal, moveToLogin } =\r\n    useCustomHook();\r\n\r\n  const { isLogin } = useCustomLoginTS();\r\n  const baseApi = API_SERVER_HOST;\r\n  const host = `${baseApi}/pic/shop/`;\r\n  const handleReserClick = (\r\n    e: MouseEvent<HTMLDivElement>,\r\n    ishop: number,\r\n    name: string,\r\n  ) => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      // PATH랑 같이 보내야함 stireInfo.name\r\n      // console.log(\"가게이름 \",   name);\r\n      navigate(`/meat/reservation/${ishop}`, {\r\n        state: {\r\n          storeName: name,\r\n        },\r\n      });\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n  };\r\n  return (\r\n    <CardWrapper>\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      {serverData &&\r\n        serverData.map((item: any) => (\r\n          <MeatStoreCard\r\n            key={item.ishop}\r\n            onClick={() => moveToRead(item.ishop)}\r\n          >\r\n            <MeatStoreInfo>\r\n              <MeatStoreBox>\r\n                <MeatStoreTitle>{item.name}</MeatStoreTitle>\r\n                <InfoTagWrap>\r\n                  {item.facilities\r\n                    .slice(0, 4)\r\n                    .map((tag: string, index: number) => (\r\n                      <button key={index}>\r\n                        <span>{tag}</span>\r\n                      </button>\r\n                    ))}\r\n                </InfoTagWrap>\r\n                {/* 예약하기 */}\r\n                <ReserveBtn\r\n                  onClick={e => handleReserClick(e, item.ishop, item.name)}\r\n                >\r\n                  <span>예약하기</span>\r\n                </ReserveBtn>\r\n              </MeatStoreBox>\r\n            </MeatStoreInfo>\r\n            <MeatSotreCardImg>\r\n              <img\r\n                src={`${host}${item.ishop}/shop_pic/${item.pics[0]}`}\r\n                alt=\"고기 더미 이미지\"\r\n                loading=\"lazy\"\r\n              />\r\n            </MeatSotreCardImg>\r\n          </MeatStoreCard>\r\n        ))}\r\n    </CardWrapper>\r\n  );\r\n};\r\nexport default ListCard;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const ListWrap = styled.div`\r\n  width: 1180px;\r\n  margin: 0 auto;\r\n`;\r\nexport const KindOfMeatWrap = styled.div`\r\n  display: flex;\r\n  width: 1180px;\r\n  padding: 30px 0px;\r\n  align-items: flex-end;\r\n  gap: 100px;\r\n  margin: 30px 10px;\r\n`;\r\nexport const KindOfMeat = styled.div`\r\n  cursor: pointer;\r\n  width: 70px;\r\n  height: 50px;\r\n  flex-shrink: 0;\r\n  img {\r\n    width: 70px;\r\n    height: 50px;\r\n  }\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: ${FontSize.title};\r\n  }\r\n`;\r\nexport const SearchWrap = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  margin-right: 20px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 3px;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  display: flex;\r\n  height: 35px;\r\n  padding: 5px 20px;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border: 1px solid var(--gray-scale-400, #a8a8a8);\r\n  background: #fff;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  /* color: var(--gray-scale-500, #8f8f8f); */\r\n  /* Rugular 14 */\r\n  font-family: Pretendard;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 125%; /* 17.5px */\r\n  border: none;\r\n`;\r\nexport const SearchIconWrap = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  width: 35px;\r\n  height: 35px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: var(--gray-scale-400, #a8a8a8);\r\n  button {\r\n    width: 24px;\r\n    height: 24px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\nexport const ListFilter = styled.div`\r\n  float: right;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n`;\r\nexport const ListFilterItem = styled.button`\r\n  cursor: pointer;\r\n  display: flex;\r\n  border: none;\r\n  background: transparent;\r\n  width: 50px;\r\n  height: 30px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  span {\r\n    color: ${props => (props.active ? ColorStyle.g1000 : ColorStyle.g500)};\r\n    text-align: center;\r\n    font-feature-settings: \"clig\" off, \"liga\" off;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px; /* 84.211% */\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nexport const ListMoreViewBtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px;\r\n`;\r\nexport const ListMoreViewBtn = styled.button`\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 10px;\r\n  border: 2px solid var(--sub, #066e52);\r\n  background: #fff;\r\n  span {\r\n    color: var(--primary, #d60117);\r\n    text-align: center;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 23.75px */\r\n  }\r\n`;\r\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport React, { MouseEvent, useCallback, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { getGListTS } from \"../../api/typeApi\";\r\nimport Fetching from \"../../components/common/Fetching\";\r\nimport ResultModal from \"../../components/common/ResultModal\";\r\nimport ListCard from \"../../components/meat/TSCardComponent\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport { List, ListQuery } from \"./Meat\";\r\nimport {\r\n  KindOfMeat,\r\n  KindOfMeatWrap,\r\n  ListMoreViewBtn,\r\n  ListMoreViewBtnWrap,\r\n  ListWrap,\r\n  SearchBar,\r\n  SearchIconWrap,\r\n  SearchInput,\r\n  SearchWrap,\r\n} from \"./styles/MeatListStyle\";\r\nimport { FilterWrapper, SelectedFilter } from \"./styles/TS_Style\";\r\nimport { number } from \"prop-types\";\r\n// 고깃집 목록보기 페이지입니다.\r\n\r\nconst initState: List[] = [\r\n  {\r\n    ishop: 0,\r\n    name: \"\",\r\n    location: \"\",\r\n    count: 0,\r\n    pics: [\"\"],\r\n    facilities: [\"\"],\r\n  },\r\n];\r\nconst MeatListPage = () => {\r\n  const {\r\n    page,\r\n    search,\r\n    category,\r\n    filter,\r\n    MoveToList,\r\n    MoveToPage,\r\n    MoveToFilter,\r\n    moveToSearch,\r\n    refresh,\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n  } = useCustomHook();\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  // const [selectFilter, setSelectFilter] = useState(\"lastest\");\r\n  const [cateSearch, setCateSearch] = useState(\"\");\r\n\r\n  const params: ListQuery = { page, search, category, filter };\r\n\r\n  // @COMMENT React-query\r\n  const { data, isFetching, refetch } = useQuery({\r\n    queryKey: [\"meat/list\", params, refresh],\r\n    queryFn: () => getGListTS({ params }),\r\n    // staleTime: 1000 * 60,\r\n    // cacheTime: 1500 * 60,\r\n  });\r\n\r\n  const serverData = useMemo(() => data || initState, [data]);\r\n  // const [serverData, setServerData] = useState(data || initState);\r\n  console.log(\"serverData\", serverData);\r\n  const clinet = useQueryClient();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n  const handleFilterClick = (category: MouseEvent<HTMLDivElement> | string) => {\r\n    if (typeof category === \"string\") {\r\n      const params = { category: category };\r\n      if (category == \"6\") {\r\n        openModal(\"해산물\", \"해산물 메뉴는 준비중입니다.\", () => {\r\n          navigate(-1), closeModal();\r\n        });\r\n      }\r\n      // refetch();\r\n      setSelectedCategory(category);\r\n      MoveToList(params);\r\n      console.log(\"cate\", category);\r\n      console.log(\"scate\", selectedCategory);\r\n    }\r\n\r\n    console.log(\"category num\", category);\r\n  };\r\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCateSearch(e.target.value);\r\n  };\r\n  const handleSearchSubmit = (e: MouseEvent<HTMLDivElement>) => {\r\n    // setGlistData([]);\r\n    // serverData([]);\r\n    moveToSearch({ page: 1, search: cateSearch });\r\n    e.preventDefault();\r\n  };\r\n  const handleMoreView = () => {\r\n    MoveToPage({ page: page + 1 });\r\n  };\r\n\r\n  // @COMMENT FIlter\r\n  const handleClickFilter = (filter: MouseEvent<HTMLDivElement> | string) => {\r\n    if (typeof filter === \"string\") {\r\n      setFilterFlag(filter);\r\n      MoveToFilter({ filter });\r\n    }\r\n  };\r\n\r\n  // const Tscard = React.memo(ListCard);\r\n  const [filterFlag, setFilterFlag] = useState<string | null>(\"0\");\r\n\r\n  const handleClickCate = useCallback((index: string) => {\r\n    setFilterFlag(index);\r\n  }, []);\r\n  return (\r\n    <ListWrap>\r\n      {fetching ? <Fetching /> : null}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      {/* \r\n      // ! 고기 종류별 필터링\r\n      */}\r\n      <KindOfMeatWrap>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"0\")}>\r\n          <span>전체</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"1\")}>\r\n          <span>돼지</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"2\")}>\r\n          <span>소</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"3\")}>\r\n          <span>닭</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"4\")}>\r\n          <span>오리</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"5\")}>\r\n          <span>양</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat onClick={() => handleFilterClick(\"6\")}>\r\n          <span>해산물</span>\r\n        </KindOfMeat>\r\n      </KindOfMeatWrap>\r\n      {/* @COMMENT Filter Test */}\r\n      <FilterWrapper>\r\n        <SelectedFilter\r\n          onClick={() => handleClickFilter(\"0\")}\r\n          selected={filterFlag === \" 0\"}\r\n        >\r\n          <span>최신순</span>\r\n        </SelectedFilter>\r\n        <SelectedFilter\r\n          onClick={() => handleClickFilter(\"1\")}\r\n          selected={filterFlag === \"1\"}\r\n        >\r\n          <span>별점순</span>\r\n        </SelectedFilter>\r\n        <SelectedFilter\r\n          onClick={() => handleClickFilter(\"2\")}\r\n          selected={filterFlag === \"2\"}\r\n        >\r\n          <span>북마크순</span>\r\n        </SelectedFilter>\r\n      </FilterWrapper>\r\n      <form>\r\n        <SearchWrap>\r\n          <SearchBar>\r\n            <SearchInput\r\n              placeholder=\"고깃집을 검색해보세요\"\r\n              onChange={handleSearchChange}\r\n            />\r\n          </SearchBar>\r\n          <SearchIconWrap onClick={handleSearchSubmit}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + `/assets/images/search.svg`}\r\n              alt=\"\"\r\n            />\r\n          </SearchIconWrap>\r\n        </SearchWrap>\r\n      </form>\r\n\r\n      {/* <Tscard serverData={serverData} /> */}\r\n      <ListCard serverData={serverData} />\r\n\r\n      <ListMoreViewBtnWrap>\r\n        <ListMoreViewBtn onClick={handleMoreView}>\r\n          <span>더보기</span>\r\n        </ListMoreViewBtn>\r\n      </ListMoreViewBtnWrap>\r\n    </ListWrap>\r\n  );\r\n};\r\n\r\nexport default MeatListPage;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\nimport { ReserTimeBtnProps, StyledComponentProps } from \"../Meat\";\r\n\r\nexport const ReserTimeBtn = styled.button<ReserTimeBtnProps>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  width: 50px;\r\n  padding: 0px 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 20px;\r\n  border: 1px solid var(--sub, #066e52);\r\n  background: ${({ clicked }) =>\r\n    clicked ? `${ColorStyle.secondary}` : `${ColorStyle.grayScale}`};\r\n  span {\r\n    color: ${({ clicked }) =>\r\n      clicked ? `${ColorStyle.grayScale}` : `${ColorStyle.primary}`};\r\n    text-align: center;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 17.5px */\r\n  }\r\n  &:hover {\r\n    background-color: #dddd;\r\n  }\r\n  &:active {\r\n    background-color: #dddd;\r\n  }\r\n`;\r\n\r\nexport const SelectedCate = styled.div<StyledComponentProps>`\r\n  font-family: DAEAM_LEE_TAE_JOON;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 250px;\r\n  height: 50px;\r\n\r\n  cursor: pointer;\r\n  background: ${({ selected }) =>\r\n    selected ? \"var(--gray-scale-0, #fff)\" : \"var(--gray-scale-100, #f5f5f5)\"};\r\n  border-top: ${({ selected }) =>\r\n    selected ? \"5px solid var(--sub, #066e52)\" : \"none\"};\r\n  border-right: ${({ selected }) =>\r\n    selected ? \"1px solid var(--sub, #066e52)\" : \"none\"};\r\n  border-left: ${({ selected }) =>\r\n    selected ? \"1px solid var(--sub, #066e52)\" : \"none\"};\r\n\r\n  border-bottom: ${({ selected }) =>\r\n    selected ? \"none\" : \"1px solid var(--sub, #066e52)\"};\r\n  color: ${({ selected }) => (selected ? \"black\" : \"rgba(0,0,0,0.5)\")};\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    background: ${({ selected }) =>\r\n      selected\r\n        ? \"var(--gray-scale-0, #fff)\"\r\n        : \"var(--gray-scale-100, #f5f5f5)\"};\r\n  }\r\n`;\r\n\r\nexport const SelectedFilter = styled.div<StyledComponentProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  background: transparent;\r\n  font-size: 19px;\r\n  font-family: DAEAM_LEE_TAE_JOON;\r\n  cursor: pointer;\r\n  /* &:hover {\r\n    color: ${ColorStyle.g700};\r\n  } */\r\n  span {\r\n    color: ${({ selected }) => (selected ? ColorStyle.g1000 : ColorStyle.g500)};\r\n  }\r\n`;\r\n\r\nexport const FilterWrapper = styled.div`\r\n  display: inline-flex;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  button {\r\n    display: flex;\r\n    width: 70px;\r\n    height: 30px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    span {\r\n      color: #000;\r\n      text-align: center;\r\n      font-feature-settings: \"clig\" off, \"liga\" off;\r\n      font-family: DAEAM_LEE_TAE_JOON;\r\n      font-size: 19px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: 16px; /* 84.211% */\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n"],"names":["API_SERVER_HOST","Fetching","_jsxs","style","position","left","top","zIndex","width","height","background","display","flexDirection","gap","justifyContent","alignItems","children","_jsx","ClipLoader","size","color","ColorStyle","primary","loading","fontFamily","fontSize","_ref","title","content","callFn","textAlign","padding","borderRadius","paddingBottom","borderBottom","onClick","Button","bttext","CardWrapper","styled","div","_templateObject","_taggedTemplateLiteral","MeatStoreCard","_templateObject2","MeatStoreInfo","_templateObject3","FontSize","_templateObject4","MeatStoreBox","_templateObject5","MeatSotreCardImg","_templateObject6","MeatStoreTitle","_templateObject7","_templateObject8","sub_title","ReserveBtn","span","_templateObject9","g500","_templateObject10","InfoTagWrap","_templateObject11","serverData","navigate","useNavigate","console","log","ishop","useParams","moveToRead","moveToReser","isModal","openModal","moveToLogin","useCustomHook","isLogin","useCustomLoginTS","baseApi","host","concat","isOpen","ResultModal","map","item","name","facilities","slice","tag","index","e","handleReserClick","stopPropagation","state","storeName","src","pics","alt","ListWrap","KindOfMeatWrap","KindOfMeat","SearchWrap","SearchBar","SearchInput","input","SearchIconWrap","ListMoreViewBtnWrap","button","props","active","g1000","ListMoreViewBtn","initState","location","count","MeatListPage","page","search","category","filter","MoveToList","MoveToPage","MoveToFilter","moveToSearch","refresh","closeModal","fetching","setFetching","useState","cateSearch","setCateSearch","params","data","isFetching","refetch","useQuery","queryKey","queryFn","getGListTS","useMemo","useQueryClient","selectedCategory","setSelectedCategory","handleFilterClick","handleClickFilter","setFilterFlag","filterFlag","useCallback","FilterWrapper","SelectedFilter","selected","placeholder","onChange","target","value","preventDefault","ListCard","handleMoreView","ReserTimeBtn","clicked","secondary","grayScale","_ref2","SelectedCate","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","g700","_ref10"],"sourceRoot":""}