{"version":3,"file":"static/js/6317.f44d56d6.chunk.js","mappings":"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","sources":["pages/supervisor/SupervisorReportPage.js","api/reportApi.js","pages/supervisor/styles/SupervisorUserStyle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  SupervisorHeader,\r\n  SupervisorReportContents,\r\n  SupervisorReportHeader,\r\n  SupervisorReportWrapper,\r\n  SupervisorTable,\r\n} from \"./styles/SupervisorReportStyle\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport { getReport, patchReport, patchReportCancel } from \"../../api/reportApi\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { SupervisorOption } from \"./styles/SupervisorUserStyle\";\r\n\r\nconst SupervisorReportPage = () => {\r\n  const [reportData, setReportData] = useState([]);\r\n  const { page, check, moveToCheck } = useCustomHook();\r\n  // 신고글 가져오기 (API)\r\n  useEffect(() => {\r\n    const params = { page, check };\r\n    getReport({ params, successFn, failFn, errorFn });\r\n  }, [page, check]);\r\n\r\n  const successFn = res => {\r\n    setReportData(res);\r\n  };\r\n\r\n  const failFn = res => {\r\n    setReportData(res);\r\n  };\r\n\r\n  const errorFn = res => {\r\n    setReportData(res);\r\n  };\r\n\r\n  // 신고글 숨김\r\n  const handleClickHide = result => {\r\n    console.log(result);\r\n    const hideForm = {\r\n      check: Number(selectedCategory),\r\n      pk: result,\r\n    };\r\n    console.log(\"hideform test : \", hideForm);\r\n    patchReport({ hideForm, successHideFn, failHideFn, errorHideFn });\r\n  };\r\n  const successHideFn = res => {\r\n    console.log(res);\r\n  };\r\n  const failHideFn = res => {\r\n    console.log(res);\r\n  };\r\n  const errorHideFn = res => {\r\n    console.log(res);\r\n  };\r\n\r\n  // 신고 취소하기\r\n  const handleClickReportCancel = result => {\r\n    console.log(result);\r\n    const cancelForm = {\r\n      check: Number(selectedCategory),\r\n      pk: result,\r\n    };\r\n    console.log(\"cancelForm test : \", cancelForm);\r\n    // patchReport({ hideForm, successHideFn, failHideFn, errorHideFn });\r\n    patchReportCancel({\r\n      cancelForm,\r\n      successCancelFn,\r\n      failCancelFn,\r\n      errorCancelFn,\r\n    });\r\n  };\r\n  const successCancelFn = res => {\r\n    console.log(res);\r\n  };\r\n  const failCancelFn = res => {\r\n    console.log(res);\r\n  };\r\n  const errorCancelFn = res => {\r\n    console.log(res);\r\n  };\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(0);\r\n\r\n  const handleCategoryChange = event => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedCategory(selectedValue);\r\n    console.log(\"카테\", selectedValue);\r\n    moveToCheck({ check: selectedValue });\r\n  };\r\n\r\n  return (\r\n    <SupervisorReportWrapper>\r\n      <SupervisorHeader>\r\n        <div className=\"page-title\">신고 관리</div>\r\n        <div>\r\n          <Button bttext=\"저장\" />\r\n        </div>\r\n      </SupervisorHeader>\r\n      <SupervisorReportContents>\r\n        {/* <h1>테이블 예시입니다 맵포함</h1> */}\r\n        <SupervisorOption>\r\n          {/* <select  */}\r\n          <label htmlFor=\"category\"></label>\r\n          <select\r\n            id=\"category\"\r\n            name=\"category\"\r\n            onChange={handleCategoryChange}\r\n            value={selectedCategory}\r\n          >\r\n            <option value=\"0\">숨김</option>\r\n            <option value=\"1\">취소된 글</option>\r\n            \r\n          </select>\r\n        </SupervisorOption>\r\n        <SupervisorTable>\r\n          <table>\r\n            <thead>\r\n              <th>순번</th>\r\n              {/* <th>카테고리</th> */}\r\n              <th>내용</th>\r\n              <th>작성자</th>\r\n              <th>신고 수</th>\r\n              <th>상태</th>\r\n              <th>신고 취소</th>\r\n              <th>글 숨김</th>\r\n            </thead>\r\n            <tbody>\r\n              {/* 여기다가 맵을 돌리는거죠! */}\r\n              {/* 왜 data머시긴가요? useState 다시 설명읽기! */}\r\n              {/*\r\n                   데이터(data)를 반복할꺼야(map)\r\n                   data를 앞으로 item이라 부를꺼야\r\n                   순서를 index라 할꺼야\r\n                   */}\r\n              {reportData?.map((item, index) => (\r\n                // ? Key? 기준값!\r\n                // ? 기준값? 절대 중복될 수없는 유니크한 값! (a.k.a 주민등록번호)\r\n                // ? iuser 고유한 값이네?\r\n                <tr key={item?.pk}>\r\n                  {/* data 안에 있는 name, id , number, state */}\r\n                  <td>{index}</td>\r\n                  <td>{item?.contents}</td>\r\n                  <td>{item?.writerNm}</td>\r\n                  <td>{item?.count}</td>\r\n                  <td>{item?.state}</td>\r\n\r\n                  <td>\r\n                    <button onClick={() => handleClickReportCancel(item.pk)}>\r\n                      취소\r\n                    </button>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <button onClick={() => handleClickHide(item.pk)}>\r\n                      숨김\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </SupervisorTable>\r\n      </SupervisorReportContents>\r\n    </SupervisorReportWrapper>\r\n  );\r\n};\r\n\r\nexport default SupervisorReportPage;\r\n","import authAxios from \"../util/tokenUtil\";\r\nimport { API_SERVER_HOST } from \"./config\";\r\n\r\n// 신고글 가져오기\r\nexport const getReport = async ({ params, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const response = await authAxios.get(\r\n      `${API_SERVER_HOST}/api/admin/report`,\r\n      { params: params },\r\n      header,\r\n    );\r\n    const status = response.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"신고 관리 호출 성공\");\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"신고 관리 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"신고 관리 서버 오류\");\r\n  }\r\n};\r\n\r\n// 신고글 숨김\r\nexport const patchReport = async ({\r\n  hideForm,\r\n  successHideFn,\r\n  failHideFn,\r\n  errorHideFn,\r\n}) => {\r\n  console.log(\"hideform\", hideForm);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(\r\n      `${API_SERVER_HOST}/api/admin/hide`,\r\n      hideForm,\r\n      header,\r\n    );\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"신고글 숨김\");\r\n      successHideFn(res.reportData);\r\n    } else {\r\n      failHideFn(\"숨김 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorHideFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 신고 취소\r\nexport const patchReportCancel = async ({\r\n  cancelForm,\r\n  successCancelFn,\r\n  failCancelFn,\r\n  errorCancelFn,\r\n}) => {\r\n  console.log(\"cc form\", cancelForm);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(\r\n      `${API_SERVER_HOST}/api/admin/report`,\r\n      cancelForm,\r\n      header,\r\n    );\r\n    const status = res.status.toString();\r\n\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"신고 취소\");\r\n      successCancelFn(res.reportData);\r\n    } else {\r\n      failCancelFn(\"취소 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorCancelFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const SupervisorUserWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SupervisorUserContents = styled.div`\r\n  position: relative;\r\n  margin-top: 200px;\r\n  margin-bottom: 200px;\r\n  margin-left: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n`;\r\nexport const SupervisorOption = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  /* justify-content: center; */\r\n  /* align-items: center; */\r\n  select {\r\n    width: 300px;\r\n    height: 30px;\r\n    border-color: #dbdbdb;\r\n    color: #424242;\r\n    /* margin-right: 20px; */\r\n    padding-left: 10px;\r\n    option {\r\n      /* margin-left: 10px; */\r\n    }\r\n  }\r\n`;\r\nexport const SupervisorTable = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding-top: 40px;\r\n  flex-direction: column;\r\n  text-align: center;\r\n\r\n  table {\r\n    width: 100%; /* 테이블 100% 폭 설정 */\r\n    border-collapse: collapse; /* 셀 간의 경계를 병합함 */\r\n    color: #424242;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 17px 20px 17px 20px; /* 셀 안의 여백 설정 */\r\n    //padding: 17px;\r\n    text-align: center; /* 셀 안의 텍스트 가운데 정렬 */\r\n    border: 1px solid #dbdbdb; /* 테이블 테두리 스타일 */\r\n    border-left: none;\r\n    border-right: none;\r\n    font-style: bold;\r\n  }\r\n\r\n  th {\r\n    background-color: #f5f5f5; /* 헤더 배경색 설정 */\r\n    //background-color: #066e52; /* 헤더 배경색 설정 */\r\n  }\r\n\r\n  button {\r\n    width: 40px;\r\n    height: 30px;\r\n    border: none;\r\n    background-color: #066e52;\r\n    color: #fff;\r\n  }\r\n`;\r\n"],"names":["SupervisorReportPage","reportData","setReportData","useState","page","check","moveToCheck","useCustomHook","useEffect","async","params","successFn","failFn","errorFn","_ref","header","headers","response","authAxios","get","concat","API_SERVER_HOST","status","toString","charAt","console","log","data","error","getReport","res","handleClickHide","result","hideForm","Number","selectedCategory","pk","successHideFn","failHideFn","errorHideFn","_ref2","patch","patchReport","handleClickReportCancel","cancelForm","successCancelFn","failCancelFn","errorCancelFn","_ref3","patchReportCancel","setSelectedCategory","_jsxs","SupervisorReportWrapper","children","SupervisorHeader","_jsx","className","Button","bttext","SupervisorReportContents","SupervisorOption","htmlFor","id","name","onChange","event","selectedValue","target","value","SupervisorTable","map","item","index","contents","writerNm","count","state","onClick","SupervisorUserWrapper","styled","div","_templateObject","_taggedTemplateLiteral","SupervisorUserContents","_templateObject2","_templateObject3","_templateObject4"],"sourceRoot":""}