{"version":3,"file":"static/js/7479.47ee9485.chunk.js","mappings":"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","sources":["components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","layouts/Layout.js","pages/sign/in/TSSupervisorSigninPage.tsx","pages/sign/in/styles/LoginPageStyle.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 114px;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import React from \"react\";\r\nimport Header from \"../components/header/Header\";\r\nimport Footer from \"../components/footer/Footer\";\r\n\r\n// 각 page에는 BasicLayout을 이용하여 children을 쓰자\r\n// 객체구조분해할당 {children : children} = props.children\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useMutation } from \"@tanstack/react-query\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ChangeEvent, useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"../in/styles/UserSigninStyle.css\";\r\n\r\nimport ResultModal from \"../../../components/common/ResultModal\";\r\nimport useCustomHook from \"../../../components/meat/hooks/useCustomHook\";\r\n// import useCustomLogin from \"../../../components/meat/hooks/JS/useCustomLogin\";\r\nimport useCustomLoginTS from \"../../../components/meat/hooks/useCustomLoginTS\";\r\nimport TitleHeader from \"../../../components/titleheader/TitleHeader\";\r\nimport Layout from \"../../../layouts/Layout\";\r\nimport { SigninForm } from \"../TSJoin\";\r\nimport {\r\n  LoginCheckBox,\r\n  LoginPageBts,\r\n  LoginPageID,\r\n  LoginPageInfo,\r\n  LoginPageMain,\r\n  LoginPagePW,\r\n  LoginPageWrap,\r\n} from \"./styles/LoginPageStyle\";\r\n\r\nconst initState: SigninForm = {\r\n  email: \"\",\r\n  upw: \"\",\r\n};\r\nconst TSSupervisorSigninPage = () => {\r\n  const [authParam, setAuthParam] = useState(initState);\r\n  // const { moveToPath } = useCustomLogin();\r\n  const { doSupervisorLoginTS, moveToPath } = useCustomLoginTS();\r\n  const { isModal, openModal, closeModal } = useCustomHook();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setAuthParam(prevValue => ({\r\n      ...prevValue,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    console.log(\"reredering\");\r\n  }, []);\r\n\r\n  const SvisorMutation = useMutation({\r\n    mutationFn: (authParam: SigninForm) => doSupervisorLoginTS({ authParam }),\r\n    onSuccess: result => {\r\n      console.log(\"성공\", result);\r\n      moveToPath(\"/\");\r\n    },\r\n    onError: (error: AxiosError) => {\r\n      console.log(\"error log\", error.response);\r\n      if (error.response) {\r\n        const responseData = error.response.data as { code?: string };\r\n        if (responseData.code === \"INVALID_EXIST_USER_ID\") {\r\n          openModal(\"로그인 실패\", \"아이디가 존재하지 않습니다. \", closeModal);\r\n        } else if (responseData.code === \"INVALID_PASSWORD\") {\r\n          openModal(\"로그인 실패\", \"비밀번호를 확인해주세요.\", closeModal);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleClick = useCallback(async () => {\r\n    if (authParam.email === \"\" || authParam.upw === \"\") {\r\n      console.log(\"id\", authParam.email);\r\n      console.log(\"pw\", authParam.upw);\r\n      openModal(\r\n        \"로그인 실패\",\r\n        \"이메일 또는 비밀번호를 입력하지 않으셨습니다.\",\r\n        closeModal,\r\n      );\r\n      return;\r\n    }\r\n    SvisorMutation.mutate(authParam);\r\n  }, [authParam.email, authParam.upw, openModal]);\r\n\r\n  // 회원가입 페이지 이동\r\n\r\n  // 이메일 자동 입력 기능\r\n  const [email, setEmail] = useState(\"\");\r\n  const [rememberEmail, setRememberEmail] = useState(false);\r\n\r\n  const handleCheckboxChange = () => {\r\n    setRememberEmail(!rememberEmail);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // 여기에서 로그인 로직을 추가할 수 있어.\r\n    // 로그인이 성공하면, rememberEmail 상태에 따라 이메일을 저장하거나 삭제할 수 있어.\r\n    if (rememberEmail) {\r\n      // 이메일 저장 로직 추가 (브라우저의 로컬 스토리지 또는 쿠키를 사용할 수 있음)\r\n      localStorage.setItem(\"rememberedEmail\", rememberEmail ? email : \"\");\r\n    } else {\r\n      // 이메일 삭제 로직 추가\r\n      localStorage.removeItem(\"rememberedEmail\");\r\n    }\r\n    // 로그인이 성공하면 다음 페이지로 이동하도록 설정할 수 있어.\r\n  };\r\n\r\n  // 페이지 로딩 시 저장된 이메일이 있는지 확인하고 있다면 불러옴\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem(\"rememberedEmail\");\r\n    if (storedEmail) {\r\n      setEmail(storedEmail);\r\n      setRememberEmail(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <LoginPageWrap>\r\n        <TitleHeader\r\n          timg={process.env.PUBLIC_URL + `/assets/images/login_header.png`}\r\n          tname=\"관리자 로그인\"\r\n          tcontent=\"우울할 땐 고기 앞으로\"\r\n        ></TitleHeader>\r\n        <LoginPageMain>\r\n          <LoginPageInfo>\r\n            {/* 적는 란 */}\r\n            <LoginPageID\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={authParam.email}\r\n              placeholder=\"이메일\"\r\n              onChange={e => handleChange(e)}\r\n            />\r\n\r\n            <LoginPagePW\r\n              type=\"password\"\r\n              name=\"upw\"\r\n              value={authParam.upw}\r\n              placeholder=\"비밀번호\"\r\n              onChange={e => handleChange(e)}\r\n              maxLength={8}\r\n              minLength={4}\r\n            />\r\n          </LoginPageInfo>\r\n          <LoginCheckBox>\r\n            <div>\r\n              <label className=\"RememberEmail\">\r\n                <input\r\n                  className=\"CheckBox\"\r\n                  type=\"checkbox\"\r\n                  checked={rememberEmail}\r\n                  onChange={handleCheckboxChange}\r\n                />\r\n                이메일 기억하기\r\n              </label>\r\n            </div>\r\n          </LoginCheckBox>\r\n          <LoginPageBts>\r\n            <button\r\n              type=\"button\"\r\n              className=\"Loginbutton\"\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n            >\r\n              로그인\r\n            </button>\r\n          </LoginPageBts>\r\n        </LoginPageMain>\r\n      </LoginPageWrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TSSupervisorSigninPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginPageWrap = styled.div`\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nexport const LoginPageMain = styled.div`\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap; /* 아이템을 여러 줄에 걸쳐 배치 */\r\n  justify-content: center; /* 가로 방향 중앙 정렬 */\r\n  align-items: center;\r\n  padding-top: 140px;\r\n  padding-bottom: 180px;\r\n`;\r\n\r\nexport const LoginPageInfo = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 20px;\r\n  gap: 35px;\r\n`;\r\n\r\nexport const LoginPageID = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginPagePW = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginCheckBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 500px;\r\n  padding-left: 8px;\r\n\r\n  .RememberEmail {\r\n    display: flex;\r\n    font-size: 19px;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n  }\r\n  .CheckBox {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const LoginPageBts = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  padding-top: 40px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n\r\n  .Loginbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    color: #d60117;\r\n    border-radius: 20px;\r\n    background-color: #ffffff;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  .Joinbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    border-radius: 20px;\r\n    color: #ffffff;\r\n    background-color: #066e52;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else {\n      this.#currentMutation?.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\nfunction noop() {}\n","export function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwError function to override throwing behavior on a per-error basis\n  if (typeof throwError === 'function') {\n    return throwError(...params)\n  }\n\n  return !!throwError\n}\n"],"names":["TitleHeaderWrapper","styled","div","_templateObject","_taggedTemplateLiteral","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","ColorStyle","grayScale","TitleContent","_templateObject4","sub_title","props","timg","tname","tcontent","_jsxs","children","_jsx","src","alt","_ref","Header","Footer","initState","email","upw","TSSupervisorSigninPage","authParam","setAuthParam","useState","doSupervisorLoginTS","moveToPath","useCustomLoginTS","isModal","openModal","closeModal","useCustomHook","handleChange","useNavigate","useCallback","e","prevValue","target","name","value","console","log","SvisorMutation","useMutation","mutationFn","onSuccess","result","onError","error","response","responseData","data","code","handleClick","async","mutate","setEmail","rememberEmail","setRememberEmail","useEffect","storedEmail","localStorage","getItem","Layout","isOpen","ResultModal","title","content","callFn","LoginPageWrap","TitleHeader","LoginPageMain","LoginPageInfo","LoginPageID","type","placeholder","onChange","LoginPagePW","maxLength","minLength","LoginCheckBox","className","checked","handleCheckboxChange","LoginPageBts","onClick","input","_templateObject5","_templateObject6","_templateObject7","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_updateResult","WeakSet","_notify","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","this","setOptions","bindMethods","_classPrivateMethodGet","_updateResult2","call","bind","reset","prevOptions","_classPrivateFieldGet2","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","mutationKey","hashKey","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","action","_notify2","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","state","getDefaultState","isPending","status","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","listeners","forEach","listener","queryClient","useQueryClient","React","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync","throwError","params"],"sourceRoot":""}