{"version":3,"file":"static/js/4116.a050adb6.chunk.js","mappings":"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","sources":["pages/supervisor/SupervisorUserPage.js","api/userApi.js","pages/supervisor/styles/SupervisorUserStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getUser, patchUser } from \"../../api/userApi\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport {\r\n  SupervisorHeader,\r\n  SupervisorReportHeader,\r\n} from \"./styles/SupervisorReportStyle\";\r\nimport {\r\n  SupervisorOption,\r\n  SupervisorTable,\r\n  SupervisorUserContents,\r\n  SupervisorUserWrapper,\r\n} from \"./styles/SupervisorUserStyle\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nconst SupervisorUserPage = () => {\r\n  // GET API\r\n  const [data, setData] = useState([]);\r\n  // const [refresh, setRefresh] = useState(false);\r\n  const { page, moveToCheck } = useCustomHook();\r\n  useEffect(() => {\r\n    const params = { page };\r\n    getUser({ params, successFn, failFn, errorFn });\r\n  }, [page]);\r\n\r\n  const successFn = response => {\r\n    setData(response);\r\n  };\r\n\r\n  const failFn = response => {\r\n    setData(response);\r\n  };\r\n\r\n  const errorFn = response => {\r\n    setData(response);\r\n  };\r\n\r\n  // PATCH API\r\n  const handleClickLock = result => {\r\n    // alert(\"클릭됨\");\r\n    // iuser  필요\r\n    // alert(result);\r\n    patchUser({ result, successLockFn, failLockFn, errorLockFn });\r\n  };\r\n\r\n  const successLockFn = response => {\r\n    console.log(response);\r\n    // setRefresh(true);\r\n    // setData(response);\r\n  };\r\n\r\n  const failLockFn = response => {\r\n    console.log(response);\r\n    // setData(response);\r\n  };\r\n\r\n  const errorLockFn = response => {\r\n    console.log(response);\r\n    // setData(response);\r\n  };\r\n\r\n  // const handleClickUnlock = result => {\r\n  //   alert(\"클릭됨\");\r\n  //   alert(result);\r\n  // };\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(0);\r\n\r\n  const handleCategoryChange = event => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedCategory(selectedValue);\r\n    console.log(\"카테\", selectedValue);\r\n    moveToCheck({ check: selectedValue });\r\n  };\r\n\r\n  return (\r\n    <SupervisorUserWrapper>\r\n      <SupervisorHeader>\r\n        <div className=\"page-title\">유저 분석</div>\r\n        <div>\r\n          <Button bttext=\"저장\" />\r\n        </div>\r\n      </SupervisorHeader>\r\n      <SupervisorUserContents>\r\n        {/* <h1>테이블 예시입니다 맵포함</h1> */}\r\n        <SupervisorOption>\r\n          {/* <select  */}\r\n          <label htmlFor=\"category\"> </label>\r\n          <select\r\n            id=\"category\"\r\n            name=\"category\"\r\n            onChange={handleCategoryChange}\r\n            value={selectedCategory}\r\n          >\r\n            <option value=\"0\">고기잡담 글</option>\r\n            <option value=\"1\">고기잡담 댓글</option>\r\n            <option value=\"2\">고기집 후기</option>\r\n            <option value=\"3\">정육점 후기</option>\r\n          </select>\r\n        </SupervisorOption>\r\n        <SupervisorTable>\r\n          <table>\r\n            <thead style={{ marginBottom: \"20px\" }}>\r\n              <th>순번</th>\r\n              <th>작성자</th>\r\n              <th>ID</th>\r\n              <th>사업자등록번호</th>\r\n              <th>상태</th>\r\n              <th>계정잠금</th>\r\n            </thead>\r\n            <tbody>\r\n              {/* 여기다가 맵을 돌리는거죠! */}\r\n              {/* 왜 data머시긴가요? useState 다시 설명읽기! */}\r\n              {/*\r\n               데이터(data)를 반복할꺼야(map)\r\n               data를 앞으로 item이라 부를꺼야\r\n               순서를 index라 할꺼야\r\n               */}\r\n              {data?.map((item, index) => (\r\n                // ? Key? 기준값!\r\n                // ? 기준값? 절대 중복될 수없는 유니크한 값! (a.k.a 주민등록번호)\r\n                // ? iuser 고유한 값이네?\r\n                <tr key={item?.iuser}>\r\n                  {/* data 안에 있는 name, id , number, state */}\r\n                  <td>{index}</td>\r\n                  <td>{item?.name}</td>\r\n                  <td>{item?.id}</td>\r\n                  <td>{item?.number}</td>\r\n                  <td>{item?.state}</td>\r\n                  {item?.state === 0 ? (\r\n                    <td>\r\n                      <button onClick={() => handleClickLock(item.iuser)}>\r\n                        잠금\r\n                      </button>\r\n                    </td>\r\n                  ) : (\r\n                    <td>\r\n                      <button onClick={() => handleClickLock(item.iuser)}>\r\n                        해제\r\n                      </button>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </SupervisorTable>\r\n      </SupervisorUserContents>\r\n    </SupervisorUserWrapper>\r\n  );\r\n};\r\n\r\nexport default SupervisorUserPage;\r\n","import authAxios from \"../util/tokenUtil\";\r\nimport { API_SERVER_HOST } from \"./config\";\r\n\r\nexport const getUser = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const response = await authAxios.get(\r\n      `${API_SERVER_HOST}/api/admin/black?page=1`,\r\n      header,\r\n    );\r\n\r\n    const status = response.status.toString();\r\n    // return response.data;\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 관리 호출 성공\");\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"유저 관리 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"유저 관리 서버 오류\");\r\n  }\r\n};\r\n\r\nexport const patchUser = async ({\r\n  result,\r\n  successLockFn,\r\n  failLockFn,\r\n  errorLockFn,\r\n}) => {\r\n  console.log(result);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(\r\n      `${API_SERVER_HOST}/api/admin?iuser=${result}`,\r\n      header,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"잠금!\");\r\n      successLockFn(res.data);\r\n    } else {\r\n      failLockFn(\"실패\");\r\n    }\r\n  } catch (error) {\r\n    errorLockFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const SupervisorUserWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SupervisorUserContents = styled.div`\r\n  position: relative;\r\n  margin-top: 200px;\r\n  margin-bottom: 200px;\r\n  margin-left: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n`;\r\nexport const SupervisorOption = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  /* justify-content: center; */\r\n  /* align-items: center; */\r\n  select {\r\n    width: 300px;\r\n    height: 30px;\r\n    border-color: #dbdbdb;\r\n    color: #424242;\r\n    /* margin-right: 20px; */\r\n    padding-left: 10px;\r\n    option {\r\n      /* margin-left: 10px; */\r\n    }\r\n  }\r\n`;\r\nexport const SupervisorTable = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding-top: 40px;\r\n  flex-direction: column;\r\n  text-align: center;\r\n\r\n  table {\r\n    width: 100%; /* 테이블 100% 폭 설정 */\r\n    border-collapse: collapse; /* 셀 간의 경계를 병합함 */\r\n    color: #424242;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 17px 20px 17px 20px; /* 셀 안의 여백 설정 */\r\n    //padding: 17px;\r\n    text-align: center; /* 셀 안의 텍스트 가운데 정렬 */\r\n    border: 1px solid #dbdbdb; /* 테이블 테두리 스타일 */\r\n    border-left: none;\r\n    border-right: none;\r\n    font-style: bold;\r\n  }\r\n\r\n  th {\r\n    background-color: #f5f5f5; /* 헤더 배경색 설정 */\r\n    //background-color: #066e52; /* 헤더 배경색 설정 */\r\n  }\r\n\r\n  button {\r\n    width: 40px;\r\n    height: 30px;\r\n    border: none;\r\n    background-color: #066e52;\r\n    color: #fff;\r\n  }\r\n`;\r\n"],"names":["SupervisorUserPage","data","setData","useState","page","moveToCheck","useCustomHook","useEffect","async","successFn","failFn","errorFn","_ref","header","headers","response","authAxios","get","concat","API_SERVER_HOST","status","toString","charAt","console","log","error","getUser","params","handleClickLock","result","successLockFn","failLockFn","errorLockFn","_ref2","res","patch","patchUser","selectedCategory","setSelectedCategory","_jsxs","SupervisorUserWrapper","children","SupervisorHeader","_jsx","className","Button","bttext","SupervisorUserContents","SupervisorOption","htmlFor","id","name","onChange","event","selectedValue","target","value","check","SupervisorTable","style","marginBottom","map","item","index","number","state","onClick","iuser","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4"],"sourceRoot":""}