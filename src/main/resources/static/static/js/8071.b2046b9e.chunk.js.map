{"version":3,"file":"static/js/8071.b2046b9e.chunk.js","mappings":"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","sources":["components/adminInfo/styles/TSModifyStyle.ts","pages/admin/styles/TSReviewAdminCard.tsx","pages/admin/TSAdminReviewPage.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TSAdminInfoWrapStyle = styled.form`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 17px;\r\n  font-family: Pretendard;\r\n`;\r\nexport const TSNavStyle = styled.div`\r\n  position: fixed;\r\n  height: 68px;\r\n  top: 114px;\r\n  left: 210px;\r\n  display: flex;\r\n  width: calc(100% - 210px);\r\n  padding: 11px 36px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: #fff;\r\n  z-index: 997;\r\n  /* Shadow */\r\n  box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.1),\r\n    0px 1px 3px 0px rgba(0, 0, 0, 0.1);\r\n\r\n  .page-title {\r\n    display: flex;\r\n    width: 136px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n    color: var(--grayscale-90, #1c1c1e);\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const TSWrapInnerStyle = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding-left: 20px;\r\n  // topNavBar 고정 시 적용\r\n  margin-top: 85px;\r\n  margin-bottom: 50px;\r\n  margin-left: 210px;\r\n  /* z-index: -999; */\r\n  gap: 20px;\r\n`;\r\nexport const TSPreviewWrapStyle = styled.div`\r\n  position: fixed;\r\n  left: 810px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  z-index: 997;\r\n`;\r\n\r\nexport const TSShopStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n`;\r\nexport const TSBackgroundBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 560px;\r\n  padding: 20px 30px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  /* shadow */\r\n  box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.1),\r\n    0px 1px 3px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const OnClickBoxStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const TSBoxInnerStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 8px;\r\n  form {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    color: var(--gray-900, #111827);\r\n    font-family: Pretendard;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 22px; /* 157.143% */\r\n  }\r\n\r\n  .big-title {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 2px;\r\n    color: var(--gray-900, #111827);\r\n    /* background-color: ${ColorStyle.g200}; */\r\n    /* 16/semibold */\r\n    font-family: Pretendard;\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    line-height: 150%; /* 24px */\r\n  }\r\n  .title {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 2px;\r\n    color: var(--gray-900, #111827);\r\n    /* 16/semibold */\r\n    font-family: Pretendard;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    line-height: 150%; /* 24px */\r\n  }\r\n  .essential {\r\n    color: var(--red-500, #ef4444);\r\n    /* 16/semibold */\r\n    font-family: Pretendard;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    line-height: 150%; /* 24px */\r\n  }\r\n  .text-guide {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    color: var(--gray-500, #6b7280);\r\n    /* 12/regular */\r\n    font-family: Pretendard;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 150%; /* 18px */\r\n  }\r\n  .text-length {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n    flex: 1 0 0;\r\n    color: var(--gray-500, #6b7280);\r\n    text-align: right;\r\n    /* 12/regular */\r\n    font-family: Pretendard;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 150%; /* 18px */\r\n  }\r\n  .pics-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n  .pics-thumb {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .name-guide {\r\n    display: flex;\r\n    width: 500px;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n  }\r\n  .tel {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n  }\r\n  .open {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n  }\r\n  .location-box {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 6px;\r\n  }\r\n  .location-input-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n  }\r\n  .menu-pics {\r\n    display: flex;\r\n    width: 500px;\r\n    align-items: flex-start;\r\n    align-content: flex-start;\r\n    gap: 10px;\r\n    flex-wrap: wrap;\r\n  }\r\n  .check-box-wrap {\r\n    display: flex;\r\n    width: 500px;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n  .radio-wrap {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n\r\n  .preview-img {\r\n    width: 500px;\r\n    height: 340px;\r\n    object-fit: cover;\r\n    /* overflow: hidden; */\r\n  }\r\n  .shop-info-box {\r\n    display: flex;\r\n    width: 500px;\r\n    height: 109px;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    background: rgba(17, 17, 17, 0.35);\r\n  }\r\n  .shop-info {\r\n    display: flex;\r\n    height: 109px;\r\n    padding: 10px 30px;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 5px;\r\n    flex-shrink: 0;\r\n  }\r\n  .shop-name {\r\n    width: 50px;\r\n    height: 18px;\r\n    flex-shrink: 0;\r\n    color: #fff;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 20px */\r\n  }\r\n  .shop-info-detail-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 5px;\r\n  }\r\n  .shop-info-text-wrap {\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n  .shop-info-cate {\r\n    width: 45px;\r\n    color: var(--gray-scale-100, #f5f5f5);\r\n    font-family: Pretendard;\r\n    font-size: 10px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 125%; /* 12.5px */\r\n  }\r\n  .shop-info-detail {\r\n    color: var(--gray-scale-100, #f5f5f5);\r\n    font-family: Pretendard;\r\n    font-size: 10px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 12.5px */\r\n  }\r\n`;\r\nexport const TSMenuAddPicInnerStyle = styled(TSBoxInnerStyle)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 500px;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  flex-shrink: 0;\r\n  .menu-add-pic {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n  }\r\n  .btn-wrap {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n  }\r\n`;\r\n","import { ChangeEvent, useEffect, useState } from \"react\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/thumbs\";\r\nimport { FreeMode, Navigation, Thumbs } from \"swiper/modules\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport CountingStar from \"../../../components/common/CountingStar\";\r\nimport {\r\n  ContentWrap,\r\n  ReviewContentWrap,\r\n  ReviewDateWrap,\r\n  ReviewInfoWrap,\r\n  ReviewProfileItem,\r\n  ReviewUserInfoWrap,\r\n  SwiperWrap,\r\n} from \"./AdminPageStyle\";\r\nimport {\r\n  MiniBtn,\r\n  ReviewCardWrap,\r\n  ReviewContent,\r\n  ReviewDate,\r\n  ReviewInput,\r\n  ReviewReplyBtnWrap,\r\n  ReviewShowTop,\r\n  ReviewShowWrap,\r\n  ReviewWrtier,\r\n} from \"./AdminReviewStyle\";\r\nimport \"./swiper.css\";\r\n\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { API_SERVER_HOST } from \"../../../api/config\";\r\nimport { putReplyTS } from \"../../../api/typeApi\";\r\nimport useCustomHook from \"../../../components/meat/hooks/useCustomHook\";\r\nimport useCustomLoginTS from \"../../../components/meat/hooks/useCustomLoginTS\";\r\nimport { SwiperStyle, replayForm } from \"../../meat/Meat\";\r\nimport { ReviewForm } from \"../TSAdminReviewPage\";\r\nimport ResultModal from \"../../../components/common/ResultModal\";\r\n\r\nconst baseApi = API_SERVER_HOST;\r\n\r\nconst ReviewAdminCard = (\r\n  { reviewData }: { reviewData: ReviewForm },\r\n  { refresh }: { refresh: boolean },\r\n) => {\r\n  const { adminState } = useCustomLoginTS();\r\n  console.log(\"value\", reviewData);\r\n  const [thumbsSwiper, setThumbsSwiper] = useState<any>(null);\r\n\r\n  const ishop = adminState.ishop;\r\n  // const checkshop = adminState.checkshop;\r\n\r\n  const swiperStyle: SwiperStyle = {\r\n    \"--swiper-navigation-color\": \"#fff\",\r\n    \"--swiper-pagination-color\": \"#fff\",\r\n  };\r\n\r\n  const [inputVisual, setInpuVisual] = useState(false);\r\n  const handleClickInput = () => {\r\n    setInpuVisual(true);\r\n  };\r\n\r\n  const replayInitData: replayForm = {\r\n    ireview: 0,\r\n    checkShop: 0,\r\n    comment: \"\",\r\n  };\r\n\r\n  const { isModal, openModal, closeModal } = useCustomHook();\r\n  const replyMutation = useMutation({\r\n    mutationFn: (replyData: replayForm) => putReplyTS({ replyData }),\r\n    onSuccess: (result: AxiosResponse) => {\r\n      if (result) {\r\n        openModal(\"등록 성공\", \"답글 등록을 성공하였습니다.\", () => {\r\n          closeModal(), window.location.reload();\r\n        });\r\n      }\r\n    },\r\n    onError: () => {},\r\n  });\r\n\r\n  const [replyData, setReplyData] = useState(replayInitData);\r\n  const handleClickReply = async (ireview: number, checkShop: number) => {\r\n    // console.log(ireview, checkShop);\r\n    // console.log(\"작성이 완료되었습니다.\");\r\n    setReplyData(prevData => ({ ...prevData, ireview, checkShop }));\r\n    // console.log(\"총 데이터 \", replyData);\r\n    await replyMutation.mutate({ ...replyData, ireview, checkShop });\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setReplyData({ ...replyData, [e.target.name]: e.target.value });\r\n    console.log(\"change\", replyData);\r\n  };\r\n\r\n  return (\r\n    <ReviewCardWrap>\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        <div>\r\n          <ContentWrap>\r\n            <SwiperWrap>\r\n              <Swiper\r\n                style={swiperStyle}\r\n                loop={true}\r\n                spaceBetween={10}\r\n                navigation={true}\r\n                thumbs={{ swiper: thumbsSwiper }}\r\n                modules={[FreeMode, Navigation, Thumbs]}\r\n                className=\"mySwiper2\"\r\n              >\r\n                {reviewData?.pics.map((pic: string, index: number) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img\r\n                      src={`${baseApi}/pic/shop/${ishop}/review/${reviewData.ireview}/${pic}`}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Swiper>\r\n              <Swiper\r\n                onSwiper={setThumbsSwiper}\r\n                loop={true}\r\n                spaceBetween={10}\r\n                slidesPerView={5}\r\n                freeMode={true}\r\n                watchSlidesProgress={true}\r\n                modules={[FreeMode, Navigation, Thumbs]}\r\n                className=\"mySwiper\"\r\n              >\r\n                {reviewData?.pics.map((pic: string, index: number) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img\r\n                      src={`${baseApi}/pic/shop/${ishop}/review/${reviewData.ireview}/${pic}`}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Swiper>\r\n            </SwiperWrap>\r\n            <ReviewInfoWrap>\r\n              <ReviewUserInfoWrap>\r\n                <ReviewProfileItem>\r\n                  <div>\r\n                    <img\r\n                      src={\r\n                        process.env.PUBLIC_URL + \"/assets/images/favicon.png\"\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span>{reviewData?.nickname}</span>\r\n                  </div>\r\n                </ReviewProfileItem>\r\n                <ReviewDateWrap>\r\n                  <span>2024.02.19</span>\r\n                </ReviewDateWrap>\r\n                <div>\r\n                  <CountingStar star={reviewData?.star} />\r\n                </div>\r\n              </ReviewUserInfoWrap>\r\n              <ReviewContentWrap>\r\n                <span>{reviewData?.review}</span>\r\n              </ReviewContentWrap>\r\n            </ReviewInfoWrap>\r\n          </ContentWrap>\r\n        </div>\r\n      </div>\r\n      {/* 제스쳐를 취하지 않았을 경우 */}\r\n      <div></div>\r\n      {/* 답글 입력이 완료되었다면 */}\r\n      {reviewData?.exist === 1 ? (\r\n        <div>\r\n          <ReviewShowWrap>\r\n            <ReviewShowTop>\r\n              <ReviewWrtier>\r\n                <span>사장님</span>\r\n              </ReviewWrtier>\r\n              <ReviewDate>\r\n                <span>{reviewData?.updatedAt}</span>\r\n              </ReviewDate>\r\n            </ReviewShowTop>\r\n            <ReviewContent>\r\n              <span>{reviewData?.comment}</span>\r\n            </ReviewContent>\r\n          </ReviewShowWrap>\r\n        </div>\r\n      ) : (\r\n        // <div>\r\n        //   <MiniBtn onClick={handleClickInput}>\r\n        //     <span>답글작성</span>\r\n        //   </MiniBtn>\r\n        // </div>\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <ReviewInput\r\n            placeholder=\"답글을 남겨주세요.\"\r\n            name=\"comment\"\r\n            value={replyData.comment}\r\n            maxLength={30}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n\r\n          <ReviewReplyBtnWrap>\r\n            <MiniBtn\r\n              onClick={() =>\r\n                handleClickReply(reviewData?.ireview, reviewData?.checkShop)\r\n              }\r\n            >\r\n              <span>작성완료</span>\r\n            </MiniBtn>\r\n          </ReviewReplyBtnWrap>\r\n        </div>\r\n      )}\r\n    </ReviewCardWrap>\r\n  );\r\n};\r\n\r\nexport default ReviewAdminCard;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/thumbs\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\n\r\nimport \"./styles.css\";\r\n\r\n// import required modules\r\n\r\nimport { getReview } from \"../../api/meatApi\";\r\nimport { TSNavStyle } from \"../../components/adminInfo/styles/TSModifyStyle\";\r\nimport { DefaultBt } from \"../../components/button/styles/ButtonStyle\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport \"./styles.css\";\r\nimport { ReviewWrap } from \"./styles/AdminReviewStyle\";\r\nimport ReviewAdminCard from \"./styles/TSReviewAdminCard\";\r\n// import { Swiper } from \"swiper/react\";\r\n\r\nconst initState: ReviewForm[] = [\r\n  {\r\n    checkShop: 0,\r\n    ireview: 0,\r\n    ishop: 0,\r\n    iuser: 0,\r\n    star: 0,\r\n    nickname: \"\",\r\n    comment: \"\",\r\n    exist: 0,\r\n    review: \"\",\r\n    createdAt: \"\",\r\n    updatedAt: \"\",\r\n    pics: [\"\"],\r\n  },\r\n];\r\nexport interface ReviewForm {\r\n  checkShop: number;\r\n  ireview: number;\r\n  nickname: string;\r\n  ishop: number;\r\n  iuser: number;\r\n  star: number;\r\n  comment: string;\r\n  exist: number;\r\n  review: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  pics: string[];\r\n}\r\n\r\nconst AdminReviewPage = () => {\r\n  // const { adminState } = useCustomLoginTS();\r\n\r\n  const { page, size, moveToSize } = useCustomHook();\r\n\r\n  interface ParamForm {\r\n    page: number;\r\n    size: number;\r\n  }\r\n  const params: ParamForm = { page, size };\r\n  const [refresh, setRefresh] = useState<boolean>(false);\r\n  const { data } = useQuery({\r\n    queryKey: [\"reviewData\", params, refresh],\r\n    queryFn: () => getReview({ params }),\r\n  });\r\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\r\n\r\n  const reviewData = data || initState;\r\n  console.log(\"데이터\", reviewData);\r\n\r\n  const handleMoreView = () => {\r\n    moveToSize({ size: size + 3 });\r\n  };\r\n  return (\r\n    <ReviewWrap>\r\n      <TSNavStyle>\r\n        <div className=\"page-title\">매장 리뷰 관리</div>\r\n      </TSNavStyle>\r\n      {/* \r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        {reviewData?.map((item: ReviewForm, index: number) => (\r\n          <div key={item?.ireview}>\r\n            <ReviewAdminCard reviewData={reviewData[index]} />\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n      <div\r\n        style={{\r\n          width: \"1080px\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-around\",\r\n          margin: \"50px\",\r\n        }}\r\n      >\r\n        {reviewData?.map((item: ReviewForm, index: number) => (\r\n          <div\r\n            key={item?.ireview}\r\n            style={{\r\n              // width: \"100%\",\r\n              flex: \"1 0 30%\",\r\n              maxWidth: \"30%\",\r\n            }}\r\n          >\r\n            <ReviewAdminCard reviewData={reviewData[index]} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"1080px\",\r\n          justifyContent: \"center\",\r\n          paddingBottom: \"30px\",\r\n        }}\r\n      >\r\n        <DefaultBt onClick={handleMoreView}>\r\n          <span>더보기</span>\r\n        </DefaultBt>\r\n      </div>\r\n    </ReviewWrap>\r\n  );\r\n};\r\n\r\nexport default AdminReviewPage;\r\n"],"names":["TSAdminInfoWrapStyle","styled","form","_templateObject","_taggedTemplateLiteral","TSNavStyle","div","_templateObject2","TSWrapInnerStyle","_templateObject3","TSPreviewWrapStyle","_templateObject4","TSShopStyle","_templateObject5","TSBackgroundBoxStyle","_templateObject6","OnClickBoxStyle","_templateObject7","TSBoxInnerStyle","_templateObject8","ColorStyle","g200","_templateObject9","baseApi","API_SERVER_HOST","ReviewAdminCard","_ref","_ref2","reviewData","refresh","adminState","useCustomLoginTS","console","log","thumbsSwiper","setThumbsSwiper","useState","ishop","inputVisual","setInpuVisual","isModal","openModal","closeModal","useCustomHook","replyMutation","useMutation","mutationFn","replyData","putReplyTS","onSuccess","result","window","location","reload","onError","setReplyData","ireview","checkShop","comment","_jsxs","ReviewCardWrap","children","isOpen","_jsx","ResultModal","title","content","callFn","style","width","display","ContentWrap","SwiperWrap","Swiper","loop","spaceBetween","navigation","thumbs","swiper","modules","FreeMode","Navigation","Thumbs","className","pics","map","pic","index","SwiperSlide","src","concat","onSwiper","slidesPerView","freeMode","watchSlidesProgress","ReviewInfoWrap","ReviewUserInfoWrap","ReviewProfileItem","alt","nickname","ReviewDateWrap","CountingStar","star","ReviewContentWrap","review","exist","ReviewShowWrap","ReviewShowTop","ReviewWrtier","ReviewDate","updatedAt","ReviewContent","marginTop","ReviewInput","placeholder","name","value","maxLength","onChange","e","target","handleChange","ReviewReplyBtnWrap","MiniBtn","onClick","async","prevData","mutate","handleClickReply","initState","iuser","createdAt","AdminReviewPage","page","size","moveToSize","params","setRefresh","data","useQuery","queryKey","queryFn","getReview","ReviewWrap","flexWrap","justifyContent","margin","item","flex","maxWidth","paddingBottom","DefaultBt","handleMoreView"],"sourceRoot":""}