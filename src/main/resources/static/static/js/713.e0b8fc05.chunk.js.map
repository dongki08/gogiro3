{"version":3,"file":"static/js/713.e0b8fc05.chunk.js","mappings":"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","sources":["components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","pages/login/styles/LoginPageStyle.js","pages/login/LoginPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginPageWrap = styled.div`\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nexport const LoginPageMain = styled.div`\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap; /* 아이템을 여러 줄에 걸쳐 배치 */\r\n  justify-content: center; /* 가로 방향 중앙 정렬 */\r\n  align-items: center;\r\n  padding-top: 140px;\r\n  padding-bottom: 180px;\r\n`;\r\n\r\nexport const LoginPageInfo = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 20px;\r\n  gap: 35px;\r\n`;\r\n\r\nexport const LoginPageID = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginPagePW = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginCheckBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 500px;\r\n  padding-left: 8px;\r\n\r\n  .RememberEmail {\r\n    display: flex;\r\n    font-size: 19px;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n  }\r\n  .CheckBox {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const LoginPageBts = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  padding-top: 40px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n\r\n  .Loginbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    color: #d60117;\r\n    border-radius: 20px;\r\n    background-color: #ffffff;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  .Joinbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    border-radius: 20px;\r\n    color: #ffffff;\r\n    background-color: #066e52;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ResultModal from \"../../components/common/ResultModal\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport useCustomLogin from \"../../components/meat/hooks/useCustomLogin\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport \"../login/LoginPage.css\";\r\nimport {\r\n  LoginCheckBox,\r\n  LoginPageBts,\r\n  LoginPageID,\r\n  LoginPageInfo,\r\n  LoginPageMain,\r\n  LoginPagePW,\r\n  LoginPageWrap,\r\n} from \"./styles/LoginPageStyle\";\r\n\r\n// 로그인 페이지입니다.\r\n\r\n// const initState = {\r\n//   id: \"\",\r\n//   password: \"\",\r\n// };\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  upw: \"\",\r\n};\r\nconst LoginPage = () => {\r\n  const [authParam, setAuthParam] = useState(initState);\r\n  const { doLogin, moveToPath, loginComplete } = useCustomLogin();\r\n  const { isModal, openModal, closeModal } = useCustomHook();\r\n  const navigate = useNavigate();\r\n  const handleChange = e => {\r\n    authParam[e.target.name] = e.target.value;\r\n    setAuthParam({ ...authParam });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const handleClick = async () => {\r\n    if (authParam.email === \"\" || authParam.upw === \"\") {\r\n      console.log(\"id\", authParam.email);\r\n      console.log(\"pw\", authParam.upw);\r\n      openModal(\r\n        \"로그인 실패\",\r\n        \"이메일 또는 비밀번호를 입력하지 않으셨습니다.\",\r\n        closeModal,\r\n      );\r\n      return; // 추가된 부분: 조건을 만족하면 함수 종료\r\n    }\r\n    try {\r\n      await doLogin({ authParam, successFn, failFn, errorFn });\r\n      loginComplete();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // 회원가입 페이지 이동\r\n  const handleJaddClick = () => {\r\n    navigate(\"/join/add\"); // '/JaddPage'로 이동\r\n  };\r\n\r\n  const successFn = result => {\r\n    console.log(\"성공\", result);\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  const failFn = result => {\r\n    openModal(\"비밀번호 에러\", \"비밀번호를 확인해주세요.\", closeModal);\r\n    console.log(\"실패\", result);\r\n    // alert(\"이메일 및 비밀번호 확인하세요.\");\r\n  };\r\n\r\n  const errorFn = error => {\r\n    // console.log(\"서버 에러\", result);\r\n    if (error.response && error.response.status === 404) {\r\n      openModal(\r\n        \"로그인 실패\",\r\n        \"이메일 또는 비밀번호를 확인해주세요.\",\r\n        closeModal,\r\n      );\r\n    } else if (error.response && error.response.status === 400) {\r\n      openModal(\r\n        \"로그인 실패\",\r\n        \"이메일 또는 비밀번호를 확인해주세요.\",\r\n        closeModal,\r\n      );\r\n    }\r\n  };\r\n\r\n  // 이메일 자동 입력 기능\r\n  const [email, setEmail] = useState(\"\");\r\n  const [rememberEmail, setRememberEmail] = useState(false);\r\n\r\n  const handleEmailChange = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleCheckboxChange = () => {\r\n    setRememberEmail(!rememberEmail);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // 여기에서 로그인 로직을 추가할 수 있어.\r\n    // 로그인이 성공하면, rememberEmail 상태에 따라 이메일을 저장하거나 삭제할 수 있어.\r\n    if (rememberEmail) {\r\n      // 이메일 저장 로직 추가 (브라우저의 로컬 스토리지 또는 쿠키를 사용할 수 있음)\r\n      localStorage.setItem(\"rememberedEmail\", rememberEmail ? email : \"\");\r\n    } else {\r\n      // 이메일 삭제 로직 추가\r\n      localStorage.removeItem(\"rememberedEmail\");\r\n    }\r\n    // 로그인이 성공하면 다음 페이지로 이동하도록 설정할 수 있어.\r\n  };\r\n\r\n  // 페이지 로딩 시 저장된 이메일이 있는지 확인하고 있다면 불러옴\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem(\"rememberedEmail\");\r\n    if (storedEmail) {\r\n      setEmail(storedEmail);\r\n      setRememberEmail(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <LoginPageWrap>\r\n        <TitleHeader\r\n          timg={process.env.PUBLIC_URL + `/assets/images/login_header.png`}\r\n          tname=\"로그인\"\r\n          tcontent=\"우울할 땐 고기 앞으로\"\r\n        ></TitleHeader>\r\n        <LoginPageMain>\r\n          <LoginPageInfo>\r\n            {/* 적는 란 */}\r\n            <LoginPageID\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={authParam.email}\r\n              placeholder=\"이메일\"\r\n              onChange={e => handleChange(e)}\r\n            />\r\n\r\n            <LoginPagePW\r\n              type=\"password\"\r\n              name=\"upw\"\r\n              value={authParam.upw}\r\n              placeholder=\"비밀번호\"\r\n              onChange={e => handleChange(e)}\r\n              maxLength=\"8\"\r\n              minLength=\"4\"\r\n            />\r\n          </LoginPageInfo>\r\n          <LoginCheckBox>\r\n            <div>\r\n              <label className=\"RememberEmail\">\r\n                <input\r\n                  className=\"CheckBox\"\r\n                  type=\"checkbox\"\r\n                  checked={rememberEmail}\r\n                  onChange={handleCheckboxChange}\r\n                />\r\n                이메일 기억하기\r\n              </label>\r\n            </div>\r\n          </LoginCheckBox>\r\n          <LoginPageBts>\r\n            <button\r\n              type=\"button\"\r\n              className=\"Loginbutton\"\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n            >\r\n              로그인\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"Joinbutton\"\r\n              onClick={() => {\r\n                handleJaddClick();\r\n              }}\r\n            >\r\n              회원가입\r\n            </button>\r\n          </LoginPageBts>\r\n        </LoginPageMain>\r\n      </LoginPageWrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["TitleHeaderWrapper","styled","div","_templateObject","_taggedTemplateLiteral","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","ColorStyle","grayScale","TitleContent","_templateObject4","sub_title","props","timg","tname","tcontent","_jsxs","children","_jsx","src","alt","LoginPageWrap","LoginPageMain","LoginPageInfo","LoginPageID","input","LoginPagePW","_templateObject5","LoginCheckBox","_templateObject6","LoginPageBts","_templateObject7","initState","email","upw","LoginPage","authParam","setAuthParam","useState","doLogin","moveToPath","loginComplete","useCustomLogin","isModal","openModal","closeModal","useCustomHook","navigate","useNavigate","handleChange","e","target","name","value","successFn","useDispatch","result","console","log","failFn","errorFn","error","response","status","setEmail","rememberEmail","setRememberEmail","useEffect","storedEmail","localStorage","getItem","Layout","isOpen","ResultModal","title","content","callFn","TitleHeader","type","placeholder","onChange","maxLength","minLength","className","checked","handleCheckboxChange","onClick","async","handleClick"],"sourceRoot":""}