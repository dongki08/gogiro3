{"version":3,"file":"static/js/3488.ab456ce3.chunk.js","mappings":"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","sources":["components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","hooks/useCustomMove.js","layouts/Layout.js","api/joinApi.js","pages/sign/up/UserSignUpPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 114px;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum, getSearch } from \"../util/utils\";\r\nimport useCustomLoginTS from \"../components/meat/hooks/useCustomLoginTS\";\r\n\r\nconst useCustomMove = () => {\r\n  // 로그인 훅\r\n  const { isLogin, moveToLogin, isSupervisorLogin, isAdminLogin } =\r\n    useCustomLoginTS();\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  // to add\r\n  const moveToAdd = () => {\r\n    if (isLogin || isSupervisorLogin || isAdminLogin) {\r\n      navigate(\"/community/add\");\r\n    } else {\r\n      moveToLogin();\r\n    }\r\n  };\r\n\r\n  // to search\r\n  const moveToSearch = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    moveToList,\r\n    moveToModify,\r\n    moveToRead,\r\n    moveToAdd,\r\n    moveToSearch,\r\n    page,\r\n    search,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import React from \"react\";\r\nimport Header from \"../components/header/Header\";\r\nimport Footer from \"../components/footer/Footer\";\r\n\r\n// 각 page에는 BasicLayout을 이용하여 children을 쓰자\r\n// 객체구조분해할당 {children : children} = props.children\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst signHost = `${API_SERVER_HOST}/api/user`;\r\n\r\nexport const postJadd = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"회원정보임\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await axios.post(`${signHost}/signup`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\nexport const nickNameCheck = async ({\r\n  iNickCheck,\r\n  successNickFn,\r\n  failNickFn,\r\n  errorNickFn,\r\n}) => {\r\n  console.log(\"닉네임중복체크\", iNickCheck);\r\n  const nickname = iNickCheck;\r\n  try {\r\n    const response = await axios.post(`${signHost}/signup/${nickname}`);\r\n    if (response.status === 200) {\r\n      successNickFn(response.data);\r\n    } else if (response.status === 400) {\r\n      console.log(\"dddd\");\r\n      failNickFn(\"에러다.\");\r\n    }\r\n  } catch (error) {\r\n    errorNickFn(error);\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nimport \"../up/styles/UserSignUpStyles.css\";\r\n\r\nimport { nickNameCheck, postJadd } from \"../../../api/joinApi\";\r\nimport Fetching from \"../../../components/common/Fetching\";\r\nimport ResultModal from \"../../../components/common/ResultModal\";\r\nimport SelectedModal from \"../../../components/common/SelectedModal\";\r\nimport useCustomHook from \"../../../components/meat/hooks/useCustomHook\";\r\nimport TitleHeader from \"../../../components/titleheader/TitleHeader\";\r\nimport useCustomMove from \"../../../hooks/useCustomMove\";\r\nimport {\r\n  DefaultBt,\r\n  GenderBtWrap,\r\n  JaddAddressBts,\r\n  JaddAddressWrap,\r\n  JaddBirthWrap,\r\n  JaddGenderWrap,\r\n  JaddMailWrap,\r\n  JaddMorePwWrap,\r\n  JaddNameWrap,\r\n  JaddNickNameInner,\r\n  JaddNickNameWrap,\r\n  JaddNumberWrap,\r\n  JaddPageImage,\r\n  JaddPageInfo,\r\n  JaddPageMain,\r\n  JaddPageWrap,\r\n  JaddPwWrap,\r\n  NicknameCheck,\r\n} from \"./styles/UserSignUpStyles\";\r\nimport Layout from \"../../../layouts/Layout\";\r\n\r\nconst initState = {\r\n  pic: \"\",\r\n  email: \"\",\r\n  upw: \"\",\r\n  checkUpw: \"\",\r\n  name: \"\",\r\n  nickname: \"\",\r\n  birth: \"\",\r\n  gender: \"\",\r\n  address: \"\",\r\n  tel: \"\",\r\n};\r\n// 회원가입 작성 페이지입니다.\r\nconst UserSignUpPage = () => {\r\n  // const [todo, setTodo] = useState({});\r\n\r\n  const [product, setProduct] = useState(initState);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n    setMessage(\"\"); // (비밀번호 확인 메시지) 사용자가 다시 입력할 때 메시지 초기화\r\n  };\r\n\r\n  const [image, setImage] = useState(null); // 단일 이미지를 저장하는 상태를 사용합니다.\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const {\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useCustomHook();\r\n\r\n  const uploadRef = useRef();\r\n  const handleClickImg = () => {\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = e => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const previewUrl = URL.createObjectURL(file);\r\n      setImage(previewUrl);\r\n      setSelectedImage(file);\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    setImage(null);\r\n  };\r\n\r\n  // console.log(\"이1\", product.email);\r\n  // console.log(\"이2\", product.upw);\r\n  // console.log(\"이3\", product.checkUpw);\r\n  // console.log(\"이4\", product.name);\r\n  // console.log(\"이5\", product.nickname);\r\n  // console.log(\"이6\", product.birth);\r\n  // console.log(\"이7\", product.gender);\r\n  // console.log(\"이8\", product.address);\r\n  // console.log(\"이9\", product.tel);\r\n\r\n  const handleClick = async product => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          email: product?.email,\r\n          upw: product?.upw,\r\n          checkUpw: product?.checkUpw,\r\n          name: product?.name,\r\n          nickname: product?.nickname,\r\n          birth: product?.birth,\r\n          gender: product?.gender,\r\n          address: product?.address,\r\n          tel: product?.tel,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n    formData.append(\"pic\", selectedImage);\r\n\r\n    postJadd({ product: formData, successFn, failFn, errorFn });\r\n  };\r\n\r\n  // 모달창\r\n  // 회원 가입 시 예외처리 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n  // 회원가입 시 모달창 관련\r\n  const [addResult, setAddResult] = useState(false);\r\n  // resultModal 관련\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(false);\r\n  // 페이지 이동 관련\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n  // selectedModal 띄우기 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 등록 로직 실행\r\n    if (product.email === \"\") {\r\n      openModal(\"이메일 필수 입력\", \"이메일을 입력해주세요.\", closeModal);\r\n    } else if (product.upw === null) {\r\n      openModal(\"비밀번호 4~8자 이내\", \"비밀번호를 입력해주세요.\", closeModal); // c,k\r\n    } else if (product.checkUpw === null) {\r\n      openModal(\r\n        \"비밀번호 확인 필수 입력\",\r\n        \"비밀번호를 확인해주세요.\",\r\n        closeModal,\r\n      ); // ck\r\n    } else if (product.name === \"\") {\r\n      openModal(\"이름 필수 입력\", \"이름을 입력해주세요.\", closeModal);\r\n    } else if (product.nickname === \"\") {\r\n      openModal(\"닉네임 3~6 이내\", \"닉네임을 입력해주세요.\", closeModal);\r\n    } else if (product.birth === \"\") {\r\n      openModal(\"생년월일 필수 입력\", \"생년월일 입력해주세요.\", closeModal);\r\n    } else if (product.gender === \"\") {\r\n      openModal(\"성별 필수 선택\", \"성별을 선택해주세요.\", closeModal);\r\n    } else if (product.address === \"\") {\r\n      openModal(\"주소 필수 입력\", \"주소를 입력해주세요.\", closeModal);\r\n    } else if (product.tel === \"\") {\r\n      openModal(\r\n        \"휴대폰 번호 필수 입력\",\r\n        \"휴대폰 번호를 입력해주세요.\",\r\n        closeModal,\r\n      );\r\n    } else {\r\n      handleClick(product);\r\n    }\r\n  };\r\n\r\n  const { moveToModify } = useCustomMove();\r\n\r\n  // 회원가입 등록 시 resultModal 닫기 callFn\r\n  const closeJaddModal = () => {\r\n    // 모달창 닫기\r\n    setAddResult(false);\r\n    if (popRedirect === true) {\r\n      // 메인 페이지로 가기\r\n      moveToModify({});\r\n    }\r\n  };\r\n  // 회원가입 등록 시 예외처리용 resultModal 닫기 callFn\r\n  const closeException = () => {\r\n    setResult(false);\r\n  };\r\n  // selectedModal 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    openSelectModal(\r\n      \"회원가입\",\r\n      \"회원가입을 하시겠습니까?\",\r\n      () => {\r\n        handleConfirm(product), confirmSelectModal();\r\n      },\r\n      cancelSelectModal,\r\n    );\r\n  };\r\n\r\n  const successFn = addResult => {\r\n    console.log(\"글 등록 성공\", addResult);\r\n    openModal(\"회원가입 완료\", \"회원가입이 완료 되었습니다.\", () => {\r\n      closeModal, navigate(\"/\");\r\n    });\r\n  };\r\n  const failFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(false);\r\n    setPopTitle(\"글 등록 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  // 비밀번호 확인 메시지\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageColor, setMessageColor] = useState(\"\");\r\n\r\n  const handleValiation = () => {\r\n    if (product.upw === product.checkUpw) {\r\n      setMessage(\"비밀번호가 일치합니다.\");\r\n      setMessageColor(\"green\");\r\n    } else {\r\n      setMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      setMessageColor(\"red\");\r\n    }\r\n  };\r\n\r\n  // 성별 선택\r\n  const genderChoice = () => {\r\n    console.log(\"성별\");\r\n  };\r\n  const [genderSelect, setGenderSelect] = useState(0);\r\n  const handleGenderClick = e => {\r\n    product.gender;\r\n    if (e == 1) {\r\n      product.gender = \"남\";\r\n      setGenderSelect(1);\r\n\r\n      console.log(\"남\");\r\n    } else if (e == 2) {\r\n      product.gender = \"여\";\r\n      console.log(\"여\");\r\n      setGenderSelect(2);\r\n    }\r\n  };\r\n\r\n  // 닉네임 중복확인\r\n  // 닉네임 중복확인\r\n  const [nickname, setNickname] = useState();\r\n  const [isAvailable, setIsAvailable] = useState(null);\r\n\r\n  // 이거는 나름 규칙으로 하면되죠\r\n  // setIsAvailable(nickname.length >= 3);\r\n  // console.log(\"테스트\", product.nickname);\r\n  const handleCheckAvailability = iNickCheck => {\r\n    // const iNickCheck = nickname;\r\n    console.log(\"니크네임\", product.nickname);\r\n    nickNameCheck({\r\n      iNickCheck: product.nickname,\r\n      successNickFn,\r\n      failNickFn,\r\n      errorNickFn,\r\n    });\r\n  };\r\n\r\n  const successNickFn = () => {\r\n    openModal(\"닉네임 중복확인\", \"사용가능한 닉네임 입니다.\", closeModal);\r\n  };\r\n  const failNickFn = () => {\r\n    console.log(\"페일\");\r\n  };\r\n  const errorNickFn = error => {\r\n    if (error.response && error.response.status === 400) {\r\n      openModal(\"닉네임 중복확인\", \"중복된 닉네임입니다.\", closeModal);\r\n    }\r\n    // console.log(\"에러임 ㄹㅇㅋㅋ\");\r\n  };\r\n  // 휴대폰번호 하이픈 자동입력\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const handleInputChange = e => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = e.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 전화번호 형식에 맞게 하이픈 추가\r\n    const formattedPhoneNumber = formatPhoneNumber(inputValue);\r\n\r\n    // 상태 업데이트\r\n    setPhoneNumber(formattedPhoneNumber);\r\n  };\r\n\r\n  const formatPhoneNumber = value => {\r\n    // 000-0000-0000 형식으로 포맷팅\r\n    const regex = /^(\\d{3})(\\d{0,4})(\\d{0,4})$/;\r\n    const matches = value.match(regex);\r\n\r\n    if (matches) {\r\n      return `${matches[1]}${matches[2] ? \"-\" + matches[2] : \"\"}${\r\n        matches[3] ? \"-\" + matches[3] : \"\"\r\n      }`;\r\n    }\r\n    // 일치하지 않는 경우 그대로 반환\r\n    return value;\r\n  };\r\n\r\n  // 생년월일 형식\r\n  const [birthday, setBirthday] = useState(\"\");\r\n\r\n  const handleBirthChange = event => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = event.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 생년월일 형식으로 변환\r\n    const formattedBirthday = inputValue.replace(\r\n      /(\\d{4})(\\d{0,2})(\\d{0,2})/,\r\n      (match, p1, p2, p3) => {\r\n        let result = p1;\r\n        if (p2) {\r\n          result += `/${p2}`;\r\n        }\r\n        if (p3) {\r\n          result += `/${p3}`;\r\n        }\r\n        return result;\r\n      },\r\n    );\r\n\r\n    // 상태 업데이트\r\n    setBirthday(formattedBirthday);\r\n  };\r\n\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickCancel = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const callModal = () => {\r\n    openModal(\"테스트\", \"테스트입니다\", closeModal);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <JaddPageWrap>\r\n        {fetching ? <Fetching /> : null}\r\n        {isModal.isOpen && (\r\n          <ResultModal\r\n            title={isModal.title}\r\n            content={isModal.content}\r\n            callFn={isModal.callFn}\r\n          />\r\n        )}\r\n        {isSelectModal.isOpen && (\r\n          <SelectedModal\r\n            title={isSelectModal.title}\r\n            content={isSelectModal.content}\r\n            confirmFn={isSelectModal.confirmFn}\r\n            cancelFn={isSelectModal.cancelFn}\r\n          />\r\n        )}\r\n        <TitleHeader\r\n          timg={`${process.env.PUBLIC_URL}/assets/images/join_header.png`}\r\n          tname=\"회원가입\"\r\n          tcontent=\"오늘도 맛있는 고기와 함께하세요\"\r\n        />\r\n        <JaddPageMain>\r\n          <JaddPageImage>\r\n            {/* 프로필 사진 미리 보기 */}\r\n            <div className=\"previewBox\">\r\n              {image ? (\r\n                <img src={image} alt=\"프로필미리보기\" />\r\n              ) : (\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                  alt={`미리보기`}\r\n                  onClick={deleteImage}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* 파일 업로드 버튼 */}\r\n            <div className=\"uploadBox\" onClick={handleClickImg}>\r\n              <div>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/profile_camera.svg`}\r\n                  alt=\"업로드 버튼\"\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  ref={uploadRef}\r\n                  style={{ display: \"none\" }}\r\n                  onChange={handleFileChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* 커스텀 스타일이 적용된 버튼 */}\r\n            {/* <button\r\n            className=\"JaddPage-img-button \"\r\n\r\n          ></button> */}\r\n          </JaddPageImage>\r\n          <JaddPageInfo>\r\n            <div className=\"JaddMailInfo\">\r\n              <JaddMailWrap>\r\n                <label>이메일</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={product.email}\r\n                  className=\"JoinMail\"\r\n                  placeholder=\"@까지 정확하게 입력하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                ></input>\r\n              </JaddMailWrap>\r\n              <br />\r\n              <JaddNameWrap>\r\n                <label>이름</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={product.name}\r\n                  className=\"JaddName\"\r\n                  placeholder=\"본인 이름을 입력하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                ></input>\r\n              </JaddNameWrap>\r\n              <br />\r\n              <form action=\"\" method=\"post\" onSubmit=\"return passCheckForm()\">\r\n                <JaddPwWrap>\r\n                  <label>비밀번호</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"upw\"\r\n                    value={product.upw}\r\n                    className=\"JaddPw\"\r\n                    placeholder=\"비밀번호를 입력하세요.(특수문자 포함 4-8자)\"\r\n                    onChange={e => handleChange(e)}\r\n                    maxLength=\"8\"\r\n                    minLength=\"4\"\r\n                  />\r\n                </JaddPwWrap>\r\n                <br />\r\n                <JaddMorePwWrap>\r\n                  <label>비밀번호 확인</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"checkUpw\"\r\n                    value={product.checkUpw}\r\n                    className=\"JaddMorePw\"\r\n                    placeholder=\"입력한 비밀번호를 한번 더 확인하세요.\"\r\n                    onChange={e => handleChange(e)}\r\n                    maxLength=\"8\"\r\n                    minLength=\"4\"\r\n                    onBlur={handleValiation}\r\n                  />\r\n                  {message !== \"\" &&\r\n                    product.upw !== \"\" &&\r\n                    product.checkUpw !== \"\" && (\r\n                      <div\r\n                        style={{\r\n                          color: messageColor,\r\n                          fontSize: \"14px\",\r\n                          paddingTop: \"5px\",\r\n                        }}\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    )}\r\n                </JaddMorePwWrap>\r\n              </form>\r\n              <br />\r\n              <JaddGenderWrap>\r\n                <div className=\"JaddGender\">\r\n                  성별\r\n                  <GenderBtWrap>\r\n                    <DefaultBt\r\n                      type=\"button\"\r\n                      name=\"gender\"\r\n                      className=\"gender-bt-man\"\r\n                      onClick={e => handleGenderClick(1)}\r\n                      clicked={product.gender === \"남\"}\r\n                      // 성별={1}\r\n                    >\r\n                      <span>남성</span>\r\n                    </DefaultBt>\r\n                    <DefaultBt\r\n                      type=\"button\"\r\n                      name=\"gender\"\r\n                      className=\"gender-bt-woman\"\r\n                      onClick={e => handleGenderClick(2)}\r\n                      clicked={product.gender === \"여\"}\r\n                    >\r\n                      <span>여성</span>\r\n                    </DefaultBt>\r\n                  </GenderBtWrap>\r\n                </div>\r\n              </JaddGenderWrap>\r\n              <br />\r\n              <JaddNickNameWrap>\r\n                <label>닉네임</label>\r\n                <JaddNickNameInner>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nickname\"\r\n                    value={product.nickname}\r\n                    className=\"JaddNickName\"\r\n                    placeholder=\"사용할 닉네임을 입력하세요.\"\r\n                    onChange={e => handleChange(e)}\r\n                    maxLength=\"6\"\r\n                    minLength=\"1\"\r\n                  ></input>\r\n\r\n                  <DefaultBt\r\n                    className=\"JaddNickName-Bt\"\r\n                    onClick={handleCheckAvailability}\r\n                  >\r\n                    중복확인\r\n                  </DefaultBt>\r\n                </JaddNickNameInner>\r\n                <NicknameCheck>\r\n                  {isAvailable === 1 && (\r\n                    <p style={{ color: \"green\", paddingTop: \"5px\" }}>\r\n                      사용 가능한 닉네임입니다.\r\n                    </p>\r\n                  )}\r\n                  {isAvailable === 0 && (\r\n                    <p style={{ color: \"red\", paddingTop: \"5px\" }}>\r\n                      이미 사용 중인 닉네임입니다.\r\n                    </p>\r\n                  )}\r\n                </NicknameCheck>\r\n              </JaddNickNameWrap>\r\n              <br />\r\n\r\n              <JaddNumberWrap>\r\n                <label>휴대폰 번호</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"tel\"\r\n                  value={product.tel.replace(\r\n                    /(\\d{3})(\\d{4})(\\d{3})/,\r\n                    \"$1-$2-$3\",\r\n                  )}\r\n                  className=\"JaddNumber\"\r\n                  placeholder=\"휴대폰 번호를 입력하세요.\"\r\n                  onChange={e => {\r\n                    let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                    let event = {\r\n                      target: {\r\n                        name: e.target.name,\r\n                        value: input,\r\n                      },\r\n                    };\r\n                    handleChange(event);\r\n                  }}\r\n                  maxLength=\"13\"\r\n                />\r\n              </JaddNumberWrap>\r\n              <br />\r\n              <JaddBirthWrap>\r\n                <label>생년월일</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"birth\"\r\n                  value={product.birth.replace(\r\n                    /(\\d{4})(\\d{2})(\\d{2})/,\r\n                    \"$1/$2/$3\",\r\n                  )}\r\n                  className=\"JaddBirth\"\r\n                  placeholder=\"YYYY/MM/DD\"\r\n                  onChange={e => {\r\n                    let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                    let event = {\r\n                      target: {\r\n                        name: e.target.name,\r\n                        value: input,\r\n                      },\r\n                    };\r\n                    handleChange(event);\r\n                  }}\r\n                  maxLength=\"10\"\r\n                />\r\n              </JaddBirthWrap>\r\n              <br />\r\n              <JaddAddressWrap>\r\n                <label>주소</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  value={product.address}\r\n                  className=\"JaddAddress\"\r\n                  placeholder=\"거주 중인 주소를 입력하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                ></input>\r\n              </JaddAddressWrap>\r\n              <JaddAddressBts>\r\n                <DefaultBt\r\n                  type=\"button\"\r\n                  className=\"join-button\"\r\n                  onClick={handleAddClick}\r\n                >\r\n                  회원가입\r\n                </DefaultBt>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-button\"\r\n                  onClick={() => {\r\n                    handleClickCancel();\r\n                  }}\r\n                >\r\n                  취소하기\r\n                </button>\r\n              </JaddAddressBts>\r\n            </div>\r\n          </JaddPageInfo>\r\n\r\n          <div>\r\n            <Outlet />\r\n          </div>\r\n        </JaddPageMain>\r\n      </JaddPageWrap>\r\n    </Layout>\r\n  );\r\n};\r\nexport default UserSignUpPage;\r\n"],"names":["TitleHeaderWrapper","styled","div","_templateObject","_taggedTemplateLiteral","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","ColorStyle","grayScale","TitleContent","_templateObject4","sub_title","props","timg","tname","tcontent","_jsxs","children","_jsx","src","alt","useCustomMove","isLogin","moveToLogin","isSupervisorLogin","isAdminLogin","useCustomLoginTS","navigate","useNavigate","urlSearchParams","setUrlSearchPrams","useSearchParams","page","get","parseInt","search","queryStrDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","getNum","searchStr","getSearch","pathname","moveToModify","num","concat","moveToRead","moveToAdd","moveToSearch","_ref","Header","Footer","signHost","initState","pic","email","upw","checkUpw","name","nickname","birth","gender","address","tel","UserSignUpPage","product","setProduct","useState","fetching","setFetching","handleChange","e","target","value","setMessage","image","setImage","selectedImage","setSelectedImage","isModal","openModal","closeModal","isSelectModal","openSelectModal","confirmSelectModal","cancelSelectModal","useCustomHook","uploadRef","useRef","handleClick","async","formData","FormData","dto","Blob","JSON","stringify","type","append","successFn","failFn","errorFn","console","log","header","headers","response","axios","post","status","charAt","data","statusText","error","postJadd","result","setResult","addResult","setAddResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","showModal","setShowModal","message","messageColor","setMessageColor","genderSelect","setGenderSelect","handleGenderClick","setNickname","isAvailable","setIsAvailable","successNickFn","failNickFn","errorNickFn","phoneNumber","setPhoneNumber","birthday","setBirthday","Layout","JaddPageWrap","Fetching","isOpen","ResultModal","title","content","callFn","SelectedModal","confirmFn","cancelFn","TitleHeader","process","JaddPageMain","JaddPageImage","className","onClick","deleteImage","handleClickImg","current","click","ref","style","display","onChange","file","files","previewUrl","URL","createObjectURL","JaddPageInfo","JaddMailWrap","placeholder","JaddNameWrap","action","method","onSubmit","JaddPwWrap","maxLength","minLength","JaddMorePwWrap","onBlur","handleValiation","color","fontSize","paddingTop","JaddGenderWrap","GenderBtWrap","DefaultBt","clicked","JaddNickNameWrap","JaddNickNameInner","iNickCheck","_ref2","nickNameCheck","NicknameCheck","JaddNumberWrap","replace","input","event","JaddBirthWrap","JaddAddressWrap","JaddAddressBts","handleAddClick","handleConfirm","Outlet"],"sourceRoot":""}