{"version":3,"file":"static/js/838.1cd96d65.chunk.js","mappings":"4JAGA,MAUA,EAVeA,IACb,MAAM,OAAEC,GAAWD,EAEnB,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAAA,QAAAE,SAAOH,KACG,C,oECNT,MAAME,EAAYE,EAAAA,EAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0aAkBzBC,EAAAA,EAAWC,Q,2ECjBxB,MA8BA,EA9BiBC,KAgBbC,EAAAA,EAAAA,MAAA,OAAKC,MAfY,CACjBC,SAAU,QACVC,KAAM,EACNC,IAAK,EACLC,OAAQ,IACRC,MAAO,OACPC,OAAQ,OACRC,WAAY,wBACZC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,eAAgB,SAChBC,WAAY,UAGWrB,SAAA,EACrBF,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACC,KAAM,GAAIC,MAAOnB,EAAAA,EAAWC,QAASmB,SAAS,KAC1D3B,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACLiB,WAAY,qBACZC,SAAU,QACV3B,SACH,6D,gECvBP,MA2DA,EA3DoB4B,IAAiC,IAAhC,MAAEC,EAAK,QAAEC,EAAO,OAAEC,GAAQH,EAc7C,OACE9B,EAAAA,EAAAA,KAAA,OAAKW,MAdU,CACfC,SAAU,QACVO,QAAS,OACTI,WAAY,SACZD,eAAgB,SAChBT,KAAM,EACNC,IAAK,EACLE,MAAO,OACPC,OAAQ,OACRC,WAAY,kBACZH,OAAQ,KAIab,UACnBQ,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLO,WAAY,OACZgB,UAAW,SACXf,QAAS,OACTC,cAAe,SACfC,IAAK,OACLE,WAAY,SACZY,QAAS,OACTnB,MAAO,QACPoB,aAAc,OACdR,WAAY,qBACZC,SAAU,QACV3B,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACL0B,cAAe,MACfC,aAAc,sBACdpC,SAED6B,KAEH/B,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACL0B,cAAe,MACfC,aAAc,sBACdpC,SAED8B,KAEHhC,EAAAA,EAAAA,KAAA,OACEuC,QAASA,KACPN,GAAQ,EACR/B,UAEFF,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACzC,OAAO,uBAGf,C,gECvDV,MAgEA,EAhEsB+B,IAA8C,IAA7C,MAAEC,EAAK,QAAEC,EAAO,UAAES,EAAS,SAAEC,GAAUZ,EAa5D,OACE9B,EAAAA,EAAAA,KAAA,OAAKW,MAbU,CACfC,SAAU,QACVO,QAAS,OACTI,WAAY,SACZD,eAAgB,SAChBT,KAAM,EACNC,IAAK,EACLE,MAAO,OACPC,OAAQ,OACRC,WAAY,kBACZH,OAAQ,KAGab,UACnBQ,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLO,WAAY,OACZgB,UAAW,SACXf,QAAS,OACTC,cAAe,SACfC,IAAK,OACLE,WAAY,SACZY,QAAS,OACTnB,MAAO,QACPoB,aAAc,OACdR,WAAY,qBACZC,SAAU,QACV3B,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACL0B,cAAe,MACfC,aAAc,sBACdpC,SAED6B,KAEH/B,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACL0B,cAAe,MACfC,aAAc,sBACdpC,SAED8B,KAEHtB,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLQ,QAAS,OACTE,IAAK,QACLnB,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKuC,QAASE,EAAUvC,UACtBF,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACzC,OAAO,oBAEjBC,EAAAA,EAAAA,KAAA,OAAKuC,QAASG,EAASxC,UACrBF,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACzC,OAAO,0BAIjB,C,qFC/BV,QA9BA,WACE,MAAO4C,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CACjDC,QAAQ,EACRf,MAAO,GACPC,QAAS,GACTS,UAAW,KACXC,SAAU,OAgBZ,OAdgBK,EAAAA,EAAAA,MAcT,CACLJ,gBACAK,gBAdsBA,CAACjB,EAAOC,EAASS,EAAWC,KAClDE,EAAiB,CAAEE,QAAQ,EAAMf,QAAOC,UAASS,YAAWC,YAAW,EAcvEO,mBAXyBA,KACzBL,GAAiBM,IAAI,IAAUA,EAAMJ,QAAQ,KAAS,EAWtDK,kBARwBA,KACxBP,GAAiBM,IAAI,IAAUA,EAAMJ,QAAQ,KAAS,EAS1D,E,cCrBA,MA8HA,EA9HsBM,KACpB,MAAMC,GAAWN,EAAAA,EAAAA,OACVO,EAAiBC,IAAqBC,EAAAA,EAAAA,OACvC,QAAEC,EAAO,UAAEC,EAAS,WAAEC,EAAU,YAAEC,IAAgBC,EAAAA,EAAAA,MAClD,QAAEC,IAAYC,EAAAA,EAAAA,MACd,cACJpB,EAAa,gBACbK,EAAe,mBACfC,EAAkB,kBAClBE,GACEa,IAEEC,EAAOX,EAAgBY,IAAI,QAC7BC,SAASb,EAAgBY,IAAI,SAC7B,EACEE,EAASd,EAAgBY,IAAI,WAAa,GAC1CG,EAAWf,EAAgBY,IAAI,YACjCC,SAASb,EAAgBY,IAAI,aAC7B,EACEI,GAAqBC,EAAAA,EAAAA,IAAmB,CAC5CN,OACAG,SACAC,aACCG,YAgEIC,EAASC,IAAc7B,EAAAA,EAAAA,WAAS,GAiBvC,MAAO,CACLoB,OACAG,SACAC,WACAM,WArEiBC,IACjB,IAAIC,EAAW,GACf,GAAID,EAAe,CACjB,MAAME,GAAcC,EAAAA,EAAAA,GAAOH,EAAcP,SAAUA,GACnDQ,GAAWN,EAAAA,EAAAA,IAAmB,CAC5BF,SAAUS,IACTN,UACL,MACEK,EAAWP,EAGbjB,EAAS,CAAE2B,SAAU,UAAWZ,OAAQS,GAAW,EA2DnDI,WAxDiBC,IACjB7B,EAAS,CAAE2B,SAAS,aAADG,OAAeD,GAASd,OAAQE,GAAqB,EAwDxEc,aArBmBC,IACnB,IAAIR,EAAW,GACf,GAAIQ,EAAa,CACf,MAAMC,GAAYP,EAAAA,EAAAA,GAAOM,EAAYjB,OAAQA,GAC7CS,GAAWN,EAAAA,EAAAA,IAAmB,CAC5BH,OAAQkB,IACPd,WACHe,QAAQC,IAAI,YAAaX,GACzBH,GAAYD,EACd,MACEI,EAAWP,EAEbjB,EAAS,CAAE2B,SAAU,UAAWZ,OAAQS,GAAW,EAUnDJ,UACAhB,UACAC,YACAC,aACAC,cACA6B,YA1DkBP,IAClB7B,EAAS,CACP2B,SAAS,kBAADG,OAAoBD,GAC5Bd,OAAQE,GACR,EAuDFoB,WA5FiBC,IACjB,IAAId,EAAW,GACf,GAAIc,EAAW,CACb,MAAMC,GAAUb,EAAAA,EAAAA,GAAOY,EAAU1B,KAAMA,GACvCY,GAAWN,EAAAA,EAAAA,IAAmB,CAC5BN,KAAM2B,IACLpB,UACL,MACEK,EAAWP,EAGbjB,EAAS,CAAE2B,SAAU,UAAWZ,OAAQS,GAAW,EAkFnDgB,aAvCmBA,CAACC,EAAQC,EAAWC,EAAMd,KAC7CK,QAAQC,IAAIQ,GACZ3C,EAAS,CACP2B,SAAS,qBAADG,OAAuBW,GAC/B1B,OAAO,QAADe,OAAUa,EAAI,eAAAb,OAAcY,EAAS,WAAAZ,OAAUD,EAAK,KAAAC,OAAIb,IAC9D,EAmCF3B,gBACAK,kBACAC,qBACAE,oBACA8C,aA1DmBA,CAACC,EAAGC,EAAUH,KACjCE,EAAEE,kBACEtC,EACFT,EAAS,CACP2B,SAAS,wBAADG,OAA0BgB,GAClC/B,OAAO,QAADe,OAAUa,EAAI,KAAAb,OAAIb,KAI1BZ,EAAU,kCAAU,oFAAoBE,GAE1C2B,QAAQC,IAAIQ,EAAK,EAgDlB,C,8ECjIH,MAgEA,EAhEuBjC,KACrB,MAAMV,GAAWN,EAAAA,EAAAA,MACXsD,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAEvCC,EAAI,GAAAxB,OADc,GACO,aAgD/B,MAAO,CACLoB,YACAzC,QA/CkC,GAApByC,EAAUK,OAgDxBC,QA7CcC,UAAsD,IAA/C,UAAEC,EAAS,UAAEC,EAAS,OAAEC,EAAM,QAAEC,GAASpF,EAO9D,aAJqBuE,GACnBc,EAAAA,EAAAA,IAAe,CAAEJ,YAAWC,YAAWC,SAAQC,cAGnCE,OAAO,EAuCrBC,SAnCeP,UACfT,GAASiB,EAAAA,EAAAA,OACT,IACE,MAAMC,EAAS,CAAEC,QAAS,CAAE,eAAgB,qBAEzB,aADDC,EAAAA,EAAMC,KAAK,GAADvC,OAAIwB,EAAI,YAAYY,IACxCI,QACNpC,QAAQC,IAAI,yBAIhB,CAAE,MAAOoC,GACP,GAyBFC,WApBiBC,IAGjBzE,EAAS,CAAE2B,SAAU8C,GAAQ,CAAEC,SAAS,GAAO,EAkB/CnE,YAdkBA,KAElBP,EAAS,SAAS,EAalB2E,cAXoBA,KACpB3E,EAAS,IAAI,EAWd,C,0DCvCH,QAxBA,WACE,MAAOI,EAASwE,IAAcpF,EAAAA,EAAAA,UAAS,CACrCC,QAAQ,EACRf,MAAO,GACPC,QAAS,GACTC,OAAQ,OAEJiG,GAAUnF,EAAAA,EAAAA,MAchB,MAAO,CAAEU,UAASC,UAZAA,CAAC3B,EAAOC,EAASC,KACjCgG,EAAW,CAAEnF,QAAQ,EAAMf,QAAOC,UAASC,UAAS,EAWzB0B,WARVA,KACjBsE,GAAW/E,IAAI,IAAUA,EAAMJ,QAAQ,KAAS,EAOTc,YALrBA,KAClBqE,GAAW/E,IAAI,IAAUA,EAAMJ,QAAQ,MACvCoF,EAAQ,SAAS,EAIrB,C,kFCtBO,MAAMC,EAAqBhI,EAAAA,EAAOiI,IAAG/H,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oIAU/B+H,EAAkBlI,EAAAA,EAAOiI,IAAGE,IAAAA,GAAAhI,EAAAA,EAAAA,GAAA,kMAW5BiI,EAAYpI,EAAAA,EAAOqI,KAAIC,IAAAA,GAAAnI,EAAAA,EAAAA,GAAA,gIAGrBoI,EAAAA,EAASC,WACbpI,EAAAA,EAAWqI,WAITC,EAAe1I,EAAAA,EAAOqI,KAAIM,IAAAA,GAAAxI,EAAAA,EAAAA,GAAA,wGAGxBoI,EAAAA,EAASK,UACbxI,EAAAA,EAAWqI,W,aC5BtB,MAcA,EAdoB9I,IAClB,MAAM,KAAEkJ,EAAI,MAAEC,EAAK,SAAEC,GAAapJ,EAElC,OACEY,EAAAA,EAAAA,MAACyH,EAAkB,CAAAjI,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKmJ,IAAKH,EAAMI,IAAI,wDACpB1I,EAAAA,EAAAA,MAAC2H,EAAe,CAAAnI,SAAA,EACdF,EAAAA,EAAAA,KAACuI,EAAS,CAAArI,SAAE+I,KACZjJ,EAAAA,EAAAA,KAAC6I,EAAY,CAAA3I,SAAEgJ,SAEE,C,8ECVzB,MA4EA,EA5EsBG,KAEpB,MAAM,QAAEvF,EAAO,YAAEF,IAAgBG,EAAAA,EAAAA,KAE3BV,GAAWN,EAAAA,EAAAA,OAEVO,EAAiBC,IAAqBC,EAAAA,EAAAA,MAEvCS,EAAOX,EAAgBY,IAAI,QAC7BC,SAASb,EAAgBY,IAAI,SAC7B,EAEEE,EAASd,EAAgBY,IAAI,WAAa,GAE1CoF,GAAkB/E,EAAAA,EAAAA,IAAmB,CAAEN,OAAMG,WAAUI,WAmD7D,MAAO,CACL+E,WAlDiBC,IACjB,IAAI3E,EAAW,GACf,GAAI2E,EAAW,CACb,MAAMC,GAAU1E,EAAAA,EAAAA,GAAOyE,EAAUvF,KAAMA,GACjCyF,GAAYC,EAAAA,EAAAA,GAAUH,EAAUpF,OAAQA,GAE9CS,GAAWN,EAAAA,EAAAA,IAAmB,CAC5BN,KAAMwF,EACNrF,OAAQsF,IACPlF,UACL,MACEK,EAAWyE,EAEbjG,EAAS,CAAE2B,SAAU,UAAWZ,OAAQS,GAAW,EAsCnD+E,aAnCmBC,IACnBxG,EAAS,CAAE2B,SAAS,aAADG,OAAe0E,GAAOzF,OAAQkF,GAAkB,EAmCnErE,WAhCiB4E,IACjBxG,EAAS,CAAE2B,SAAS,WAADG,OAAa0E,GAAOzF,OAAQkF,GAAkB,EAgCjEQ,UA7BgBA,KACZhG,EACFT,EAAS,kBAETO,GACF,EAyBAwB,aArBmBoE,IACnB,IAAI3E,EAAW,GACf,GAAI2E,EAAW,CACb,MAAMC,GAAU1E,EAAAA,EAAAA,GAAOyE,EAAUvF,KAAMA,GACjCyF,GAAYC,EAAAA,EAAAA,GAAUH,EAAUpF,OAAQA,GAE9CS,GAAWN,EAAAA,EAAAA,IAAmB,CAC5BN,KAAMwF,EACNrF,OAAQsF,IACPlF,UACL,MACEK,EAAWyE,EAEbjG,EAAS,CAAE2B,SAAU,UAAWZ,OAAQS,GAAW,EASnDZ,OACAG,SACD,C,kFChFI,MACD2F,EAAQ,GAAA5E,OADiB,GACI,a,6HCC5B,MAAM6E,EAAe7J,EAAAA,EAAOiI,IAAG/H,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAKzB2J,EAAe9J,EAAAA,EAAOiI,IAAGE,IAAAA,GAAAhI,EAAAA,EAAAA,GAAA,uTASzB4J,EAAgB/J,EAAAA,EAAOiI,IAAGK,IAAAA,GAAAnI,EAAAA,EAAAA,GAAA,kvBAsC1B6J,EAAehK,EAAAA,EAAOiI,IAAGU,IAAAA,GAAAxI,EAAAA,EAAAA,GAAA,yJASzB8J,EAAejK,EAAAA,EAAOiI,IAAGiC,IAAAA,GAAA/J,EAAAA,EAAAA,GAAA,sLAUzBgK,EAAenK,EAAAA,EAAOiI,IAAGmC,IAAAA,GAAAjK,EAAAA,EAAAA,GAAA,sLAWzBkK,EAAarK,EAAAA,EAAOiI,IAAGqC,IAAAA,GAAAnK,EAAAA,EAAAA,GAAA,oLAUvBoK,EAAiBvK,EAAAA,EAAOiI,IAAGuC,IAAAA,GAAArK,EAAAA,EAAAA,GAAA,gRAe3BsK,EAAiBzK,EAAAA,EAAOiI,IAAGyC,IAAAA,GAAAvK,EAAAA,EAAAA,GAAA,oRAa3BwK,EAAe3K,EAAAA,EAAOiI,IAAG2C,IAAAA,GAAAzK,EAAAA,EAAAA,GAAA,+NAezB0K,EAAmB7K,EAAAA,EAAOiI,IAAG6C,IAAAA,GAAA3K,EAAAA,EAAAA,GAAA,mLAY7B4K,EAAoB/K,EAAAA,EAAOiI,IAAG+C,IAAAA,GAAA7K,EAAAA,EAAAA,GAAA,qaAsB9B8K,EAAgBjL,EAAAA,EAAOiI,IAAGiD,IAAAA,GAAA/K,EAAAA,EAAAA,GAAA,8BAI1BgL,EAAgBnL,EAAAA,EAAOiI,IAAGmD,IAAAA,GAAAjL,EAAAA,EAAAA,GAAA,uLAW1BkL,EAAiBrL,EAAAA,EAAOiI,IAAGqD,IAAAA,GAAAnL,EAAAA,EAAAA,GAAA,wLAW3BoL,EAAkBvL,EAAAA,EAAOiI,IAAGuD,IAAAA,GAAArL,EAAAA,EAAAA,GAAA,yLAW5BsL,EAAiBzL,EAAAA,EAAOiI,IAAGyD,IAAAA,GAAAvL,EAAAA,EAAAA,GAAA,0bAuB3BL,EAAYE,EAAAA,EAAOC,OAAM0L,IAAAA,GAAAxL,EAAAA,EAAAA,GAAA,qcAWhBwB,IAAA,IAAC,QAAEiK,GAASjK,EAAA,OAC9BiK,EAAUxL,EAAAA,EAAWyL,UAAYzL,EAAAA,EAAWqI,SAAS,IAQ5CqD,IAAA,IAAC,QAAEF,GAASE,EAAA,OACnBF,EAAUxL,EAAAA,EAAWqI,UAAYrI,EAAAA,EAAWC,OAAO,I,aC9NzD,MAAM0L,EAAY,CAChBC,IAAK,GACLC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVtG,KAAM,GACNuG,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAK,IA6kBP,GA1kBiBC,KAGf,MAAOC,EAASC,IAAcjK,EAAAA,EAAAA,UAASqJ,IAChCa,EAAUC,IAAenK,EAAAA,EAAAA,WAAS,GAEnCoK,EAAe/G,IACnB4G,EAAW,IAAKD,EAAS,CAAC3G,EAAEgH,OAAOlH,MAAOE,EAAEgH,OAAOC,QACnDC,GAAW,GAAG,GAGTC,EAAOC,IAAYzK,EAAAA,EAAAA,UAAS,OAC5B0K,EAAeC,IAAoB3K,EAAAA,EAAAA,UAAS,OAC7C,QACJY,EAAO,UACPC,EAAS,WACTC,EAAU,cACVhB,EAAa,gBACbK,EAAe,mBACfC,EAAkB,kBAClBE,IACEC,EAAAA,EAAAA,KAEEqK,GAAYC,EAAAA,EAAAA,UAkBlBnI,QAAQC,IAAI,UAAMqH,EAAQT,OAC1B7G,QAAQC,IAAI,UAAMqH,EAAQR,KAC1B9G,QAAQC,IAAI,UAAMqH,EAAQP,UAC1B/G,QAAQC,IAAI,UAAMqH,EAAQ7G,MAC1BT,QAAQC,IAAI,UAAMqH,EAAQN,UAC1BhH,QAAQC,IAAI,UAAMqH,EAAQL,OAC1BjH,QAAQC,IAAI,UAAMqH,EAAQJ,QAC1BlH,QAAQC,IAAI,UAAMqH,EAAQH,SAC1BnH,QAAQC,IAAI,UAAMqH,EAAQF,KAE1B,MAAMgB,EAAc7G,UAClB,MAAM8G,EAAW,IAAIC,SACfC,EAAM,IAAIC,KACd,CACEC,KAAKC,UAAU,CACb7B,MAAc,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAAST,MAChBC,IAAY,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAASR,IACdC,SAAiB,OAAPO,QAAO,IAAPA,OAAO,EAAPA,EAASP,SACnBtG,KAAa,OAAP6G,QAAO,IAAPA,OAAO,EAAPA,EAAS7G,KACfuG,SAAiB,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAASN,SACnBC,MAAc,OAAPK,QAAO,IAAPA,OAAO,EAAPA,EAASL,MAChBC,OAAe,OAAPI,QAAO,IAAPA,OAAO,EAAPA,EAASJ,OACjBC,QAAgB,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAASH,QAClBC,IAAY,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASF,OAIlB,CAAEuB,KAAM,qBAEVN,EAASO,OAAO,MAAOL,GACvBF,EAASO,OAAO,MAAOZ,GF/GHzG,WAAoD,IAA7C,QAAE+F,EAAO,UAAE7F,EAAS,OAAEC,EAAM,QAAEC,GAASpF,EACpEyD,QAAQC,IAAI,iCAASqH,GACrB,IACE,MAAMtF,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBACtC4G,QAAiB3G,EAAAA,EAAMC,KAAK,GAADvC,OAAI4E,EAAQ,WAAW8C,EAAStF,GAExC,MADV6G,EAASzG,OAAOnD,WACpB6J,OAAO,GAChBrH,EAAUoH,EAASE,MAEnBrH,EAAO,mCAAWmH,EAASG,WAE/B,CAAE,MAAO3G,GACPrC,QAAQC,IAAI,+CAAaoC,EAAMwG,SAASE,MACxCpH,EAAQ,+CAAaU,EAAMwG,SAASE,KACtC,GEmGEE,CAAS,CAAE3B,QAASe,EAAU5G,aAAWC,UAAQC,YAAU,GAKtDN,EAAQ6H,IAAa5L,EAAAA,EAAAA,WAAS,IAE9B6L,EAAWC,IAAgB9L,EAAAA,EAAAA,WAAS,IAEpC+L,EAAUC,IAAehM,EAAAA,EAAAA,UAAS,KAClCiM,GAAYC,KAAiBlM,EAAAA,EAAAA,WAAS,IAEtCmM,GAAaC,KAAkBpM,EAAAA,EAAAA,WAAS,IAExCqM,GAAWC,KAAgBtM,EAAAA,EAAAA,WAAS,IAoCrC,aAAE+G,KAAiBP,EAAAA,EAAAA,KAgCnBrC,GAAY0H,IAChBnJ,QAAQC,IAAI,mCAAWkJ,GACvBhL,EAAU,wCAAW,+EAAmB,KAC1BL,GAAS,IAAI,GACzB,EAEE4D,GAASyH,IACbnJ,QAAQC,IAAI,mCAAWkJ,GACvB1B,GAAY,GACZ2B,GAAa,GACbE,EAAY,oCACZE,GAAc,wIACdE,IAAe,EAAM,EAEjB/H,GAAUwH,IACdnJ,QAAQC,IAAI,mCAAWkJ,GACvB1B,GAAY,GACZ2B,GAAa,GACbE,EAAY,6BACZE,GAAc,iIACdE,IAAe,EAAM,GAIhBG,GAAShC,KAAcvK,EAAAA,EAAAA,UAAS,KAChCwM,GAAcC,KAAmBzM,EAAAA,EAAAA,UAAS,KAgB1C0M,GAAcC,KAAmB3M,EAAAA,EAAAA,UAAS,GAC3C4M,GAAoBvJ,IACxB2G,EAAQJ,OACC,GAALvG,GACF2G,EAAQJ,OAAS,SACjB+C,GAAgB,GAEhBjK,QAAQC,IAAI,WACE,GAALU,IACT2G,EAAQJ,OAAS,SACjBlH,QAAQC,IAAI,UACZgK,GAAgB,GAClB,GAKKjD,GAAUmD,KAAe7M,EAAAA,EAAAA,aACzB8M,GAAaC,KAAkB/M,EAAAA,EAAAA,UAAS,MAgBzCgN,GAAgBA,KACpBnM,EAAU,8CAAY,wEAAkBC,EAAW,EAE/CmM,GAAaA,KACjBvK,QAAQC,IAAI,eAAK,EAEbuK,GAAcnI,IACdA,EAAMwG,UAAsC,MAA1BxG,EAAMwG,SAASzG,QACnCjE,EAAU,8CAAY,2DAAeC,EACvC,GAIKqM,GAAaC,KAAkBpN,EAAAA,EAAAA,UAAS,KA4BxCqN,GAAUC,KAAetN,EAAAA,EAAAA,UAAS,IA0BnCQ,IAAWN,EAAAA,EAAAA,MAUjB,OACErC,EAAAA,EAAAA,MAACsJ,EAAY,CAAA9J,SAAA,CACV6M,GAAW/M,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,IAAM,KAC1BgD,EAAQX,SACP9C,EAAAA,EAAAA,KAACoQ,EAAAA,EAAW,CACVrO,MAAO0B,EAAQ1B,MACfC,QAASyB,EAAQzB,QACjBC,OAAQwB,EAAQxB,SAGnBU,EAAcG,SACb9C,EAAAA,EAAAA,KAACqQ,EAAAA,EAAa,CACZtO,MAAOY,EAAcZ,MACrBC,QAASW,EAAcX,QACvBS,UAAWE,EAAcF,UACzBC,SAAUC,EAAcD,YAG5B1C,EAAAA,EAAAA,KAACsQ,EAAAA,EAAW,CACVtH,KAAI,GAAA7D,OAAKoL,GAAsB,kCAC/BtH,MAAM,2BACNC,SAAS,6FAEXxI,EAAAA,EAAAA,MAACuJ,EAAY,CAAA/J,SAAA,EACXQ,EAAAA,EAAAA,MAACwJ,EAAa,CAAAhK,SAAA,EAEZF,EAAAA,EAAAA,KAAA,OAAKwQ,UAAU,aAAYtQ,SACxBmN,GACCrN,EAAAA,EAAAA,KAAA,OAAKmJ,IAAKkE,EAAOjE,IAAI,gDAErBpJ,EAAAA,EAAAA,KAAA,OACEmJ,IAAG,GAAAhE,OAAKoL,GAAsB,mCAC9BnH,IAAG,2BACH7G,QA/SMkO,KAClBnD,EAAS,KAAK,OAoTRtN,EAAAA,EAAAA,KAAA,OAAKwQ,UAAU,YAAYjO,QAlUZmO,KACrBjD,EAAUkD,QAAQC,OAAO,EAiUgC1Q,UACjDQ,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEmJ,IAAG,GAAAhE,OAAKoL,GAAsB,qCAC9BnH,IAAI,qCAENpJ,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACL2C,IAAKpD,EACL9M,MAAO,CAAEQ,QAAS,QAClB2P,SAxUW5K,IACvB,MAAM6K,EAAO7K,EAAEgH,OAAO8D,MAAM,GAC5B,GAAID,EAAM,CACR,MAAME,EAAaC,IAAIC,gBAAgBJ,GACvCzD,EAAS2D,GACTzD,EAAiBuD,EACnB,cA6UI/Q,EAAAA,EAAAA,KAACmK,EAAY,CAAAjK,UACXQ,EAAAA,EAAAA,MAAA,OAAK8P,UAAU,eAActQ,SAAA,EAC3BQ,EAAAA,EAAAA,MAAC0J,EAAY,CAAAlK,SAAA,EACXF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,QACLmH,MAAON,EAAQT,MACfoE,UAAU,WACVY,YAAY,yEACZN,SAAU5K,GAAK+G,EAAa/G,SAGhClG,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAC4J,EAAY,CAAApK,SAAA,EACXF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,OACLmH,MAAON,EAAQ7G,KACfwK,UAAU,WACVY,YAAY,kEACZN,SAAU5K,GAAK+G,EAAa/G,SAGhClG,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAA,QAAM2Q,OAAO,GAAGC,OAAO,OAAOC,SAAS,yBAAwBrR,SAAA,EAC7DQ,EAAAA,EAAAA,MAAC8J,EAAU,CAAAtK,SAAA,EACTF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,8BACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,WACLlI,KAAK,MACLmH,MAAON,EAAQR,IACfmE,UAAU,SACVY,YAAY,kHACZN,SAAU5K,GAAK+G,EAAa/G,GAC5BsL,UAAU,IACVC,UAAU,UAGdzR,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAACgK,EAAc,CAAAxK,SAAA,EACbF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,2CACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,WACLlI,KAAK,WACLmH,MAAON,EAAQP,SACfkE,UAAU,aACVY,YAAY,wGACZN,SAAU5K,GAAK+G,EAAa/G,GAC5BsL,UAAU,IACVC,UAAU,IACVC,OA7OQC,KAClB9E,EAAQR,MAAQQ,EAAQP,UAC1Bc,GAAW,kEACXkC,GAAgB,WAEhBlC,GAAW,qFACXkC,GAAgB,OAClB,IAwOyB,KAAZF,IACiB,KAAhBvC,EAAQR,KACa,KAArBQ,EAAQP,WACNtM,EAAAA,EAAAA,KAAA,OACEW,MAAO,CACLe,MAAO2N,GACPxN,SAAU,OACV+P,WAAY,OACZ1R,SAEDkP,YAKXpP,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC4K,EAAc,CAAA1K,UACbQ,EAAAA,EAAAA,MAAA,OAAK8P,UAAU,aAAYtQ,SAAA,CAAC,gBAE1BQ,EAAAA,EAAAA,MAACoK,EAAY,CAAA5K,SAAA,EACXF,EAAAA,EAAAA,KAACC,EAAS,CACRiO,KAAK,SACLlI,KAAK,SACLwK,UAAU,gBACVjO,QAAS2D,GAAKuJ,GAAkB,GAChC1D,QAA4B,WAAnBc,EAAQJ,OACjBvM,UAEAF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBAERF,EAAAA,EAAAA,KAACC,EAAS,CACRiO,KAAK,SACLlI,KAAK,SACLwK,UAAU,kBACVjO,QAAS2D,GAAKuJ,GAAkB,GAChC1D,QAA4B,WAAnBc,EAAQJ,OAAevM,UAEhCF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAKdF,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAACsK,EAAgB,CAAA9K,SAAA,EACfF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPQ,EAAAA,EAAAA,MAACwK,EAAiB,CAAAhL,SAAA,EAChBF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,WACLmH,MAAON,EAAQN,SACfiE,UAAU,eACVY,YAAY,8EACZN,SAAU5K,GAAK+G,EAAa/G,GAC5BsL,UAAU,IACVC,UAAU,OAGZzR,EAAAA,EAAAA,KAACC,EAAS,CACRuQ,UAAU,kBACVjO,QArQgBsP,IAE9BtM,QAAQC,IAAI,2BAAQqH,EAAQN,UFpPHzF,WAKtB,IAL6B,WAClC+K,EAAU,cACVhC,EAAa,WACbC,EAAU,YACVC,GACD9D,EACC1G,QAAQC,IAAI,6CAAWqM,GACvB,MAAMtF,EAAWsF,EACjB,IACE,MAAMzD,QAAiB3G,EAAAA,EAAMC,KAAK,GAADvC,OAAI4E,EAAQ,YAAA5E,OAAWoH,IAChC,MAApB6B,EAASzG,OACXkI,EAAczB,EAASE,MACM,MAApBF,EAASzG,SAClBpC,QAAQC,IAAI,QACZsK,EAAW,uBAEf,CAAE,MAAOlI,GACPmI,EAAYnI,EACd,GEmOEkK,CAAc,CACZD,WAAYhF,EAAQN,SACpBsD,iBACAC,cACAC,gBACA,EA6P6C7P,SAClC,iCAIHQ,EAAAA,EAAAA,MAAC0K,EAAa,CAAAlL,SAAA,CACK,IAAhByP,KACC3P,EAAAA,EAAAA,KAAA,KAAGW,MAAO,CAAEe,MAAO,QAASkQ,WAAY,OAAQ1R,SAAC,0EAIlC,IAAhByP,KACC3P,EAAAA,EAAAA,KAAA,KAAGW,MAAO,CAAEe,MAAO,MAAOkQ,WAAY,OAAQ1R,SAAC,wFAMrDF,EAAAA,EAAAA,KAAA,UAEAU,EAAAA,EAAAA,MAAC8K,EAAc,CAAAtL,SAAA,EACbF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,qCACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,MACLmH,MAAON,EAAQF,IAAI5E,QAAQ,wBAAyB,YACpDyI,UAAU,aACVY,YAAY,wEACZN,SAAU5K,IACR,IAAI6L,EAAQ7L,EAAEgH,OAAOC,MAAMpF,QAAQ,UAAW,IAC1CiK,EAAQ,CACV9E,OAAQ,CACNlH,KAAME,EAAEgH,OAAOlH,KACfmH,MAAO4E,IAGX9E,EAAa+E,EAAM,EAErBR,UAAU,WAGdxR,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAC4K,EAAa,CAAApL,SAAA,EACZF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,8BACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,QACLmH,MAAON,EAAQL,MAAMzE,QACnB,wBACA,YAEFyI,UAAU,YACVY,YAAY,aACZN,SAAU5K,IACR,IAAI6L,EAAQ7L,EAAEgH,OAAOC,MAAMpF,QAAQ,UAAW,IAC1CiK,EAAQ,CACV9E,OAAQ,CACNlH,KAAME,EAAEgH,OAAOlH,KACfmH,MAAO4E,IAGX9E,EAAa+E,EAAM,EAErBR,UAAU,WAGdxR,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAACgL,EAAe,CAAAxL,SAAA,EACdF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAA,SACEkO,KAAK,OACLlI,KAAK,UACLmH,MAAON,EAAQH,QACf8D,UAAU,cACVY,YAAY,+EACZN,SAAU5K,GAAK+G,EAAa/G,SAGhCxF,EAAAA,EAAAA,MAACkL,EAAc,CAAA1L,SAAA,EACbF,EAAAA,EAAAA,KAACC,EAAS,CACRiO,KAAK,SACLsC,UAAU,cACVjO,QAlaS0P,KACrBjP,EACE,2BACA,wEACA,KA1DkB6J,KAEE,KAAlBA,EAAQT,MACV1I,EAAU,+CAAa,iEAAgBC,GACd,OAAhBkJ,EAAQR,IACjB3I,EAAU,kDAAgB,uEAAiBC,GACb,OAArBkJ,EAAQP,SACjB5I,EACE,kEACA,uEACAC,GAEwB,KAAjBkJ,EAAQ7G,KACjBtC,EAAU,yCAAY,2DAAeC,GACP,KAArBkJ,EAAQN,SACjB7I,EAAU,sCAAc,iEAAgBC,GACb,KAAlBkJ,EAAQL,MACjB9I,EAAU,qDAAc,iEAAgBC,GACZ,KAAnBkJ,EAAQJ,OACjB/I,EAAU,yCAAY,2DAAeC,GACR,KAApBkJ,EAAQH,QACjBhJ,EAAU,yCAAY,2DAAeC,GACZ,KAAhBkJ,EAAQF,IACjBjJ,EACE,4DACA,8EACAC,GAGFgK,EAAYd,EACd,EA6BIqF,CAAcrF,GAAU5J,GAAoB,GAE9CE,EACD,EA0ZmCjD,SACzB,8BAGDF,EAAAA,EAAAA,KAAA,UACEkO,KAAK,SACLsC,UAAU,gBACVjO,QAASA,KA7QrBc,GAAS,IA8QwB,EACnBnD,SACH,sCAOPF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACmS,EAAAA,GAAM,WAGE,C,0CCnnBZ,MAAMpN,EAASA,CAACqN,EAAOC,IACvBD,GACIC,EAKE1I,EAAYA,CAACyI,EAAOC,IAC1BD,GACIC,C","sources":["components/button/Button.js","components/button/styles/ButtonStyle.js","components/common/Fetching.js","components/common/ResultModal.js","components/common/SelectedModal.js","components/meat/hooks/useSelectModal.js","components/meat/hooks/useCustomHook.js","components/meat/hooks/useCustomLogin.js","components/meat/hooks/useModal.js","components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","hooks/useCustomMove.js","api/joinApi.js","pages/join/styles/JaddPageStyle.js","pages/join/JaddPage.js","util/utils.js"],"sourcesContent":["import React from \"react\";\r\nimport { DefaultBt } from \"./styles/ButtonStyle\";\r\n\r\nconst Button = props => {\r\n  const { bttext } = props;\r\n\r\n  return (\r\n    <DefaultBt>\r\n      <span>{bttext}</span>\r\n    </DefaultBt>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${ColorStyle.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst Fetching = () => {\r\n  const laodingCss = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <ClipLoader size={50} color={ColorStyle.primary} loading={true} />\r\n      <div\r\n        style={{\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        맛있게 굽고 있는 중...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fetching;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useSelectModal() {\r\n  const [isSelectModal, setIsSelectModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmFn: null,\r\n    cancelFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openSelectModal = (title, content, confirmFn, cancelFn) => {\r\n    setIsSelectModal({ isOpen: true, title, content, confirmFn, cancelFn });\r\n  };\r\n\r\n  const confirmSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  const cancelSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  };\r\n}\r\n\r\nexport default useSelectModal;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../../../util/utils\";\r\nimport useModal from \"./useModal\";\r\nimport useSelectModal from \"./useSelectModal\";\r\nimport useCustomLogin from \"./useCustomLogin\";\r\nconst useCustomHook = () => {\r\n  const navigate = useNavigate();\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  const { isModal, openModal, closeModal, moveToLogin } = useModal();\r\n  const { isLogin } = useCustomLogin();\r\n  const {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useSelectModal();\r\n\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n  const category = urlSearchParams.get(\"category\")\r\n    ? parseInt(urlSearchParams.get(\"category\"))\r\n    : 0;\r\n  const defaultQueryString = createSearchParams({\r\n    page,\r\n    search,\r\n    category,\r\n  }).toString();\r\n\r\n  const MoveToPage = PageParam => {\r\n    let queryStr = \"\";\r\n    if (PageParam) {\r\n      const PageNum = getNum(PageParam.page, page);\r\n      queryStr = createSearchParams({\r\n        page: PageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  const MoveToList = CategoryParam => {\r\n    let queryStr = \"\";\r\n    if (CategoryParam) {\r\n      const categoryNum = getNum(CategoryParam.category, category);\r\n      queryStr = createSearchParams({\r\n        category: categoryNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // ! Read Page hook\r\n  const moveToRead = ishop => {\r\n    navigate({ pathname: `../detail/${ishop}`, search: defaultQueryString });\r\n  };\r\n\r\n  // ! Read Page hook\r\n  const moveToReser = ishop => {\r\n    navigate({\r\n      pathname: `../reservation/${ishop}`,\r\n      search: defaultQueryString,\r\n    });\r\n  };\r\n  // ! GO B ReserPage\r\n  const moveToBReser = (e, ibutcher, name) => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      navigate({\r\n        pathname: `../../butcher/pickup/${ibutcher}`,\r\n        search: `name=${name}&${defaultQueryString}`,\r\n      });\r\n      // console.log(\"넘어간드아\", menuList, name, ibutcher);\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n    console.log(name);\r\n  };\r\n\r\n  const moveToReview = (ireser, checkShop, name, ishop) => {\r\n    console.log(name);\r\n    navigate({\r\n      pathname: `../../meat/review/${ireser}`,\r\n      search: `name=${name}&checkShop=${checkShop}&ishop=${ishop}&${defaultQueryString}`,\r\n    });\r\n  };\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const moveToSearch = SearchParam => {\r\n    let queryStr = \"\";\r\n    if (SearchParam) {\r\n      const SearchStr = getNum(SearchParam.search, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    page,\r\n    search,\r\n    category,\r\n    MoveToList,\r\n    moveToRead,\r\n    moveToSearch,\r\n    refresh,\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    moveToLogin,\r\n    moveToReser,\r\n    MoveToPage,\r\n    moveToReview,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n    moveToBReser,\r\n  };\r\n};\r\nexport default useCustomHook;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync, logout } from \"../../../redux/authSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const authState = useSelector(state => state.authSlice);\r\n  const API_SERVER_HOST = \"\";\r\n  const host = `${API_SERVER_HOST}/api/user`;\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = authState.result == 1 ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = async ({ authParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = await dispatch(\r\n      loginPostAsync({ authParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = async () => {\r\n    dispatch(logout());\r\n    try {\r\n      const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n      const res = await axios.post(`${host}/signout`, header);\r\n      if (res.status === 200) {\r\n        console.log(\"rt cookie 삭제\"); // successFn(res.data);\r\n      } else {\r\n        // failFn(\"\");\r\n      }\r\n    } catch (error) {\r\n      // errorFn(\"\");\r\n    }\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지 이동 기능\r\n  const moveToLogin = () => {\r\n    // return <Navigate replace to=\"/login\" />;\r\n    navigate(\"/login\");\r\n  };\r\n  const loginComplete = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return {\r\n    authState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    loginComplete,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useModal() {\r\n  const [isModal, setIsModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openModal = (title, content, callFn) => {\r\n    setIsModal({ isOpen: true, title, content, callFn });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const moveToLogin = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n    navgate(\"/login\");\r\n  };\r\n\r\n  return { isModal, openModal, closeModal, moveToLogin };\r\n}\r\n\r\nexport default useModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum, getSearch } from \"../util/utils\";\r\nimport useCustomLogin from \"../components/meat/hooks/useCustomLogin\";\r\n\r\nconst useCustomMove = () => {\r\n  // 로그인 훅\r\n  const { isLogin, moveToLogin } = useCustomLogin();\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  // to add\r\n  const moveToAdd = () => {\r\n    if (isLogin) {\r\n      navigate(\"/community/add\");\r\n    } else {\r\n      moveToLogin();\r\n    }\r\n  };\r\n\r\n  // to search\r\n  const moveToSearch = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    moveToList,\r\n    moveToModify,\r\n    moveToRead,\r\n    moveToAdd,\r\n    moveToSearch,\r\n    page,\r\n    search,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import axios from \"axios\";\r\nexport const API_SERVER_HOST = \"\";\r\nconst signHost = `${API_SERVER_HOST}/api/user`;\r\n\r\nexport const postJadd = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"회원정보임\", product);\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await axios.post(`${signHost}/signup`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\nexport const nickNameCheck = async ({\r\n  iNickCheck,\r\n  successNickFn,\r\n  failNickFn,\r\n  errorNickFn,\r\n}) => {\r\n  console.log(\"닉네임중복체크\", iNickCheck);\r\n  const nickname = iNickCheck;\r\n  try {\r\n    const response = await axios.post(`${signHost}/signup/${nickname}`);\r\n    if (response.status === 200) {\r\n      successNickFn(response.data);\r\n    } else if (response.status === 400) {\r\n      console.log(\"dddd\");\r\n      failNickFn(\"에러다.\");\r\n    }\r\n  } catch (error) {\r\n    errorNickFn(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const JaddPageWrap = styled.div`\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nexport const JaddPageMain = styled.div`\r\n  display: flex;\r\n  font-size: 19px;\r\n  flex-direction: column;\r\n  flex-wrap: wrap; /* 아이템을 여러 줄에 걸쳐 배치 */\r\n  justify-content: center; /* 가로 방향 중앙 정렬 */\r\n  align-items: center;\r\n  padding-top: 140px;\r\n`;\r\nexport const JaddPageImage = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .previewBox {\r\n    position: relative;\r\n    /* display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-end; */\r\n    img {\r\n      width: 280px;\r\n      height: 280px;\r\n      border-radius: 250px;\r\n    }\r\n  }\r\n  .uploadBox {\r\n    position: absolute;\r\n    left: 77%;\r\n    top: 77%;\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    border: none;\r\n    border-radius: 250px;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n    box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.25);\r\n    img {\r\n      width: 100%;\r\n      height: 30px;\r\n      object-fit: contain;\r\n      margin-top: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JaddPageInfo = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding-top: 121px;\r\n  padding-bottom: 180px;\r\n  display: block;\r\n  border: none;\r\n  width: 500px;\r\n`;\r\nexport const JaddMailWrap = styled.div`\r\n  .JoinMail {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    width: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\nexport const JaddNameWrap = styled.div`\r\n  .JaddName {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    width: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\n\r\nexport const JaddPwWrap = styled.div`\r\n  .JaddPw {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    border: none;\r\n    width: 100%;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\nexport const JaddMorePwWrap = styled.div`\r\n  .JaddMorePw {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    border: none;\r\n    width: 100%;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n  .passCheck {\r\n    padding-top: 10px;\r\n    font-size: 14px;\r\n    color: #d60117;\r\n  }\r\n`;\r\nexport const JaddGenderWrap = styled.div`\r\n  .JaddGender {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0px 0 19px 0;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: #ffffff;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\nexport const GenderBtWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  right: 0;\r\n\r\n  .gender-bt-man {\r\n    color: #d60117;\r\n    margin-right: 10px;\r\n  }\r\n  .gender-bt-woman {\r\n    color: #d60117;\r\n  }\r\n`;\r\n\r\nexport const JaddNickNameWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n\r\n  .nicknameCheck {\r\n    padding-top: 10px;\r\n    font-size: 14px;\r\n    color: #d60117;\r\n  }\r\n`;\r\n\r\nexport const JaddNickNameInner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid #000000;\r\n\r\n  .JaddNickName {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    border: none;\r\n    width: 100%;\r\n  }\r\n  .JaddNickName-Bt {\r\n    position: absolute;\r\n    font-family: \"DAEAM_LEE_TAE_JOON\";\r\n    color: #d60117;\r\n    right: 0;\r\n    bottom: 0;\r\n    margin-bottom: 19px;\r\n  }\r\n`;\r\nexport const NicknameCheck = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const JaddBirthWrap = styled.div`\r\n  .JaddBirth {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    width: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\n\r\nexport const JaddNumberWrap = styled.div`\r\n  .JaddNumber {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    border: none;\r\n    width: 100%;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\n\r\nexport const JaddAddressWrap = styled.div`\r\n  .JaddAddress {\r\n    position: relative;\r\n    font-size: 14px;\r\n    padding: 20px 0 19px 0;\r\n    border: none;\r\n    width: 100%;\r\n    border-bottom: 1px solid #000000;\r\n  }\r\n`;\r\n\r\nexport const JaddAddressBts = styled.div`\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  position: relative;\r\n  display: block;\r\n  padding-top: 97px;\r\n\r\n  .join-button {\r\n    width: 100%;\r\n    height: 55px;\r\n    color: #d60117;\r\n    margin-bottom: 20px;\r\n  }\r\n  .cancel-button {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    border-radius: 10px;\r\n    color: #ffffff;\r\n    background-color: #066e52;\r\n    width: 500px;\r\n    height: 55px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  background-color: ${({ clicked }) =>\r\n    clicked ? ColorStyle.secondary : ColorStyle.grayScale};\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${({ clicked }) =>\r\n      clicked ? ColorStyle.grayScale : ColorStyle.primary};\r\n  }\r\n`;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { nickNameCheck, postJadd } from \"../../api/joinApi\";\r\nimport Fetching from \"../../components/common/Fetching\";\r\nimport ResultModal from \"../../components/common/ResultModal\";\r\nimport SelectedModal from \"../../components/common/SelectedModal\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport \"../join/JaddPage.css\";\r\nimport {\r\n  DefaultBt,\r\n  GenderBtWrap,\r\n  JaddAddressBts,\r\n  JaddAddressWrap,\r\n  JaddBirthWrap,\r\n  JaddGenderWrap,\r\n  JaddMailWrap,\r\n  JaddMorePwWrap,\r\n  JaddNameWrap,\r\n  JaddNickNameInner,\r\n  JaddNickNameWrap,\r\n  JaddNumberWrap,\r\n  JaddPageImage,\r\n  JaddPageInfo,\r\n  JaddPageMain,\r\n  JaddPageWrap,\r\n  JaddPwWrap,\r\n  NicknameCheck,\r\n} from \"./styles/JaddPageStyle\";\r\n\r\nconst initState = {\r\n  pic: \"\",\r\n  email: \"\",\r\n  upw: \"\",\r\n  checkUpw: \"\",\r\n  name: \"\",\r\n  nickname: \"\",\r\n  birth: \"\",\r\n  gender: \"\",\r\n  address: \"\",\r\n  tel: \"\",\r\n};\r\n// 회원가입 작성 페이지입니다.\r\nconst JaddPage = () => {\r\n  // const [todo, setTodo] = useState({});\r\n\r\n  const [product, setProduct] = useState(initState);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n    setMessage(\"\"); // (비밀번호 확인 메시지) 사용자가 다시 입력할 때 메시지 초기화\r\n  };\r\n\r\n  const [image, setImage] = useState(null); // 단일 이미지를 저장하는 상태를 사용합니다.\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const {\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useCustomHook();\r\n\r\n  const uploadRef = useRef();\r\n  const handleClickImg = () => {\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = e => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const previewUrl = URL.createObjectURL(file);\r\n      setImage(previewUrl);\r\n      setSelectedImage(file);\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    setImage(null);\r\n  };\r\n\r\n  console.log(\"이1\", product.email);\r\n  console.log(\"이2\", product.upw);\r\n  console.log(\"이3\", product.checkUpw);\r\n  console.log(\"이4\", product.name);\r\n  console.log(\"이5\", product.nickname);\r\n  console.log(\"이6\", product.birth);\r\n  console.log(\"이7\", product.gender);\r\n  console.log(\"이8\", product.address);\r\n  console.log(\"이9\", product.tel);\r\n\r\n  const handleClick = async product => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          email: product?.email,\r\n          upw: product?.upw,\r\n          checkUpw: product?.checkUpw,\r\n          name: product?.name,\r\n          nickname: product?.nickname,\r\n          birth: product?.birth,\r\n          gender: product?.gender,\r\n          address: product?.address,\r\n          tel: product?.tel,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n    formData.append(\"pic\", selectedImage);\r\n\r\n    postJadd({ product: formData, successFn, failFn, errorFn });\r\n  };\r\n\r\n  // 모달창\r\n  // 회원 가입 시 예외처리 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n  // 회원가입 시 모달창 관련\r\n  const [addResult, setAddResult] = useState(false);\r\n  // resultModal 관련\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(false);\r\n  // 페이지 이동 관련\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n  // selectedModal 띄우기 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 등록 로직 실행\r\n    if (product.email === \"\") {\r\n      openModal(\"이메일 필수 입력\", \"이메일을 입력해주세요.\", closeModal);\r\n    } else if (product.upw === null) {\r\n      openModal(\"비밀번호 4~8자 이내\", \"비밀번호를 입력해주세요.\", closeModal); // c,k\r\n    } else if (product.checkUpw === null) {\r\n      openModal(\r\n        \"비밀번호 확인 필수 입력\",\r\n        \"비밀번호를 확인해주세요.\",\r\n        closeModal,\r\n      ); // ck\r\n    } else if (product.name === \"\") {\r\n      openModal(\"이름 필수 입력\", \"이름을 입력해주세요.\", closeModal);\r\n    } else if (product.nickname === \"\") {\r\n      openModal(\"닉네임 3~6 이내\", \"닉네임을 입력해주세요.\", closeModal);\r\n    } else if (product.birth === \"\") {\r\n      openModal(\"생년월일 필수 입력\", \"생년월일 입력해주세요.\", closeModal);\r\n    } else if (product.gender === \"\") {\r\n      openModal(\"성별 필수 선택\", \"성별을 선택해주세요.\", closeModal);\r\n    } else if (product.address === \"\") {\r\n      openModal(\"주소 필수 입력\", \"주소를 입력해주세요.\", closeModal);\r\n    } else if (product.tel === \"\") {\r\n      openModal(\r\n        \"휴대폰 번호 필수 입력\",\r\n        \"휴대폰 번호를 입력해주세요.\",\r\n        closeModal,\r\n      );\r\n    } else {\r\n      handleClick(product);\r\n    }\r\n  };\r\n\r\n  const { moveToModify } = useCustomMove();\r\n\r\n  // 회원가입 등록 시 resultModal 닫기 callFn\r\n  const closeJaddModal = () => {\r\n    // 모달창 닫기\r\n    setAddResult(false);\r\n    if (popRedirect === true) {\r\n      // 메인 페이지로 가기\r\n      moveToModify({});\r\n    }\r\n  };\r\n  // 회원가입 등록 시 예외처리용 resultModal 닫기 callFn\r\n  const closeException = () => {\r\n    setResult(false);\r\n  };\r\n  // selectedModal 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    openSelectModal(\r\n      \"회원가입\",\r\n      \"회원가입을 하시겠습니까?\",\r\n      () => {\r\n        handleConfirm(product), confirmSelectModal();\r\n      },\r\n      cancelSelectModal,\r\n    );\r\n  };\r\n\r\n  const successFn = addResult => {\r\n    console.log(\"글 등록 성공\", addResult);\r\n    openModal(\"회원가입 완료\", \"회원가입이 완료 되었습니다.\", () => {\r\n      closeModal, navigate(\"/\");\r\n    });\r\n  };\r\n  const failFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(false);\r\n    setPopTitle(\"글 등록 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  // 비밀번호 확인 메시지\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageColor, setMessageColor] = useState(\"\");\r\n\r\n  const handleValiation = () => {\r\n    if (product.upw === product.checkUpw) {\r\n      setMessage(\"비밀번호가 일치합니다.\");\r\n      setMessageColor(\"green\");\r\n    } else {\r\n      setMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      setMessageColor(\"red\");\r\n    }\r\n  };\r\n\r\n  // 성별 선택\r\n  const genderChoice = () => {\r\n    console.log(\"성별\");\r\n  };\r\n  const [genderSelect, setGenderSelect] = useState(0);\r\n  const handleGenderClick = e => {\r\n    product.gender;\r\n    if (e == 1) {\r\n      product.gender = \"남\";\r\n      setGenderSelect(1);\r\n\r\n      console.log(\"남\");\r\n    } else if (e == 2) {\r\n      product.gender = \"여\";\r\n      console.log(\"여\");\r\n      setGenderSelect(2);\r\n    }\r\n  };\r\n\r\n  // 닉네임 중복확인\r\n  // 닉네임 중복확인\r\n  const [nickname, setNickname] = useState();\r\n  const [isAvailable, setIsAvailable] = useState(null);\r\n\r\n  // 이거는 나름 규칙으로 하면되죠\r\n  // setIsAvailable(nickname.length >= 3);\r\n  // console.log(\"테스트\", product.nickname);\r\n  const handleCheckAvailability = iNickCheck => {\r\n    // const iNickCheck = nickname;\r\n    console.log(\"니크네임\", product.nickname);\r\n    nickNameCheck({\r\n      iNickCheck: product.nickname,\r\n      successNickFn,\r\n      failNickFn,\r\n      errorNickFn,\r\n    });\r\n  };\r\n\r\n  const successNickFn = () => {\r\n    openModal(\"닉네임 중복확인\", \"사용가능한 닉네임 입니다.\", closeModal);\r\n  };\r\n  const failNickFn = () => {\r\n    console.log(\"페일\");\r\n  };\r\n  const errorNickFn = error => {\r\n    if (error.response && error.response.status === 400) {\r\n      openModal(\"닉네임 중복확인\", \"중복된 닉네임입니다.\", closeModal);\r\n    }\r\n    // console.log(\"에러임 ㄹㅇㅋㅋ\");\r\n  };\r\n  // 휴대폰번호 하이픈 자동입력\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const handleInputChange = e => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = e.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 전화번호 형식에 맞게 하이픈 추가\r\n    const formattedPhoneNumber = formatPhoneNumber(inputValue);\r\n\r\n    // 상태 업데이트\r\n    setPhoneNumber(formattedPhoneNumber);\r\n  };\r\n\r\n  const formatPhoneNumber = value => {\r\n    // 000-0000-0000 형식으로 포맷팅\r\n    const regex = /^(\\d{3})(\\d{0,4})(\\d{0,4})$/;\r\n    const matches = value.match(regex);\r\n\r\n    if (matches) {\r\n      return `${matches[1]}${matches[2] ? \"-\" + matches[2] : \"\"}${\r\n        matches[3] ? \"-\" + matches[3] : \"\"\r\n      }`;\r\n    }\r\n    // 일치하지 않는 경우 그대로 반환\r\n    return value;\r\n  };\r\n\r\n  // 생년월일 형식\r\n  const [birthday, setBirthday] = useState(\"\");\r\n\r\n  const handleBirthChange = event => {\r\n    // 입력값에서 숫자만 추출\r\n    const inputValue = event.target.value.replace(/\\D/g, \"\");\r\n\r\n    // 생년월일 형식으로 변환\r\n    const formattedBirthday = inputValue.replace(\r\n      /(\\d{4})(\\d{0,2})(\\d{0,2})/,\r\n      (match, p1, p2, p3) => {\r\n        let result = p1;\r\n        if (p2) {\r\n          result += `/${p2}`;\r\n        }\r\n        if (p3) {\r\n          result += `/${p3}`;\r\n        }\r\n        return result;\r\n      },\r\n    );\r\n\r\n    // 상태 업데이트\r\n    setBirthday(formattedBirthday);\r\n  };\r\n\r\n  // 패스 이동하기\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickCancel = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const callModal = () => {\r\n    openModal(\"테스트\", \"테스트입니다\", closeModal);\r\n  };\r\n\r\n  return (\r\n    <JaddPageWrap>\r\n      {fetching ? <Fetching /> : null}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      {isSelectModal.isOpen && (\r\n        <SelectedModal\r\n          title={isSelectModal.title}\r\n          content={isSelectModal.content}\r\n          confirmFn={isSelectModal.confirmFn}\r\n          cancelFn={isSelectModal.cancelFn}\r\n        />\r\n      )}\r\n      <TitleHeader\r\n        timg={`${process.env.PUBLIC_URL}/assets/images/join_header.png`}\r\n        tname=\"회원가입\"\r\n        tcontent=\"오늘도 맛있는 고기와 함께하세요\"\r\n      ></TitleHeader>\r\n      <JaddPageMain>\r\n        <JaddPageImage>\r\n          {/* 프로필 사진 미리 보기 */}\r\n          <div className=\"previewBox\">\r\n            {image ? (\r\n              <img src={image} alt=\"프로필미리보기\" />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                alt={`미리보기`}\r\n                onClick={deleteImage}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* 파일 업로드 버튼 */}\r\n          <div className=\"uploadBox\" onClick={handleClickImg}>\r\n            <div>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/profile_camera.svg`}\r\n                alt=\"업로드 버튼\"\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                ref={uploadRef}\r\n                style={{ display: \"none\" }}\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 커스텀 스타일이 적용된 버튼 */}\r\n          {/* <button\r\n            className=\"JaddPage-img-button \"\r\n\r\n          ></button> */}\r\n        </JaddPageImage>\r\n        <JaddPageInfo>\r\n          <div className=\"JaddMailInfo\">\r\n            <JaddMailWrap>\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={product.email}\r\n                className=\"JoinMail\"\r\n                placeholder=\"@까지 정확하게 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddMailWrap>\r\n            <br />\r\n            <JaddNameWrap>\r\n              <label>이름</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={product.name}\r\n                className=\"JaddName\"\r\n                placeholder=\"본인 이름을 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddNameWrap>\r\n            <br />\r\n            <form action=\"\" method=\"post\" onSubmit=\"return passCheckForm()\">\r\n              <JaddPwWrap>\r\n                <label>비밀번호</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"upw\"\r\n                  value={product.upw}\r\n                  className=\"JaddPw\"\r\n                  placeholder=\"비밀번호를 입력하세요.(특수문자 포함 4-8자)\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"8\"\r\n                  minLength=\"4\"\r\n                />\r\n              </JaddPwWrap>\r\n              <br />\r\n              <JaddMorePwWrap>\r\n                <label>비밀번호 확인</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"checkUpw\"\r\n                  value={product.checkUpw}\r\n                  className=\"JaddMorePw\"\r\n                  placeholder=\"입력한 비밀번호를 한번 더 확인하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"8\"\r\n                  minLength=\"4\"\r\n                  onBlur={handleValiation}\r\n                />\r\n                {message !== \"\" &&\r\n                  product.upw !== \"\" &&\r\n                  product.checkUpw !== \"\" && (\r\n                    <div\r\n                      style={{\r\n                        color: messageColor,\r\n                        fontSize: \"14px\",\r\n                        paddingTop: \"5px\",\r\n                      }}\r\n                    >\r\n                      {message}\r\n                    </div>\r\n                  )}\r\n              </JaddMorePwWrap>\r\n            </form>\r\n            <br />\r\n            <JaddGenderWrap>\r\n              <div className=\"JaddGender\">\r\n                성별\r\n                <GenderBtWrap>\r\n                  <DefaultBt\r\n                    type=\"button\"\r\n                    name=\"gender\"\r\n                    className=\"gender-bt-man\"\r\n                    onClick={e => handleGenderClick(1)}\r\n                    clicked={product.gender === \"남\"}\r\n                    // 성별={1}\r\n                  >\r\n                    <span>남성</span>\r\n                  </DefaultBt>\r\n                  <DefaultBt\r\n                    type=\"button\"\r\n                    name=\"gender\"\r\n                    className=\"gender-bt-woman\"\r\n                    onClick={e => handleGenderClick(2)}\r\n                    clicked={product.gender === \"여\"}\r\n                  >\r\n                    <span>여성</span>\r\n                  </DefaultBt>\r\n                </GenderBtWrap>\r\n              </div>\r\n            </JaddGenderWrap>\r\n            <br />\r\n            <JaddNickNameWrap>\r\n              <label>닉네임</label>\r\n              <JaddNickNameInner>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nickname\"\r\n                  value={product.nickname}\r\n                  className=\"JaddNickName\"\r\n                  placeholder=\"사용할 닉네임을 입력하세요.\"\r\n                  onChange={e => handleChange(e)}\r\n                  maxLength=\"6\"\r\n                  minLength=\"1\"\r\n                ></input>\r\n\r\n                <DefaultBt\r\n                  className=\"JaddNickName-Bt\"\r\n                  onClick={handleCheckAvailability}\r\n                >\r\n                  중복확인\r\n                </DefaultBt>\r\n              </JaddNickNameInner>\r\n              <NicknameCheck>\r\n                {isAvailable === 1 && (\r\n                  <p style={{ color: \"green\", paddingTop: \"5px\" }}>\r\n                    사용 가능한 닉네임입니다.\r\n                  </p>\r\n                )}\r\n                {isAvailable === 0 && (\r\n                  <p style={{ color: \"red\", paddingTop: \"5px\" }}>\r\n                    이미 사용 중인 닉네임입니다.\r\n                  </p>\r\n                )}\r\n              </NicknameCheck>\r\n            </JaddNickNameWrap>\r\n            <br />\r\n\r\n            <JaddNumberWrap>\r\n              <label>휴대폰 번호</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"tel\"\r\n                value={product.tel.replace(/(\\d{3})(\\d{4})(\\d{3})/, \"$1-$2-$3\")}\r\n                className=\"JaddNumber\"\r\n                placeholder=\"휴대폰 번호를 입력하세요.\"\r\n                onChange={e => {\r\n                  let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                  let event = {\r\n                    target: {\r\n                      name: e.target.name,\r\n                      value: input,\r\n                    },\r\n                  };\r\n                  handleChange(event);\r\n                }}\r\n                maxLength=\"13\"\r\n              />\r\n            </JaddNumberWrap>\r\n            <br />\r\n            <JaddBirthWrap>\r\n              <label>생년월일</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"birth\"\r\n                value={product.birth.replace(\r\n                  /(\\d{4})(\\d{2})(\\d{2})/,\r\n                  \"$1/$2/$3\",\r\n                )}\r\n                className=\"JaddBirth\"\r\n                placeholder=\"YYYY/MM/DD\"\r\n                onChange={e => {\r\n                  let input = e.target.value.replace(/[^0-9]/g, \"\");\r\n                  let event = {\r\n                    target: {\r\n                      name: e.target.name,\r\n                      value: input,\r\n                    },\r\n                  };\r\n                  handleChange(event);\r\n                }}\r\n                maxLength=\"10\"\r\n              />\r\n            </JaddBirthWrap>\r\n            <br />\r\n            <JaddAddressWrap>\r\n              <label>주소</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={product.address}\r\n                className=\"JaddAddress\"\r\n                placeholder=\"거주 중인 주소를 입력하세요.\"\r\n                onChange={e => handleChange(e)}\r\n              ></input>\r\n            </JaddAddressWrap>\r\n            <JaddAddressBts>\r\n              <DefaultBt\r\n                type=\"button\"\r\n                className=\"join-button\"\r\n                onClick={handleAddClick}\r\n              >\r\n                회원가입\r\n              </DefaultBt>\r\n              <button\r\n                type=\"button\"\r\n                className=\"cancel-button\"\r\n                onClick={() => {\r\n                  handleClickCancel();\r\n                }}\r\n              >\r\n                취소하기\r\n              </button>\r\n            </JaddAddressBts>\r\n          </div>\r\n        </JaddPageInfo>\r\n\r\n        <div>\r\n          <Outlet />\r\n        </div>\r\n      </JaddPageMain>\r\n    </JaddPageWrap>\r\n  );\r\n};\r\nexport default JaddPage;\r\n","export const getNum = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n\r\nexport const getSearch = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n"],"names":["props","bttext","_jsx","DefaultBt","children","styled","button","_templateObject","_taggedTemplateLiteral","ColorStyle","primary","Fetching","_jsxs","style","position","left","top","zIndex","width","height","background","display","flexDirection","gap","justifyContent","alignItems","ClipLoader","size","color","loading","fontFamily","fontSize","_ref","title","content","callFn","textAlign","padding","borderRadius","paddingBottom","borderBottom","onClick","Button","confirmFn","cancelFn","isSelectModal","setIsSelectModal","useState","isOpen","useNavigate","openSelectModal","confirmSelectModal","prev","cancelSelectModal","useCustomHook","navigate","urlSearchParams","setUrlSearchPrams","useSearchParams","isModal","openModal","closeModal","moveToLogin","useModal","isLogin","useCustomLogin","useSelectModal","page","get","parseInt","search","category","defaultQueryString","createSearchParams","toString","refresh","setRefresh","MoveToList","CategoryParam","queryStr","categoryNum","getNum","pathname","moveToRead","ishop","concat","moveToSearch","SearchParam","SearchStr","console","log","moveToReser","MoveToPage","PageParam","PageNum","moveToReview","ireser","checkShop","name","moveToBReser","e","ibutcher","stopPropagation","dispatch","useDispatch","authState","useSelector","state","authSlice","host","result","doLogin","async","authParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","header","headers","axios","post","status","error","moveToPath","path","replace","loginComplete","setIsModal","navgate","TitleHeaderWrapper","div","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","grayScale","TitleContent","_templateObject4","sub_title","timg","tname","tcontent","src","alt","useCustomMove","queryStrDefault","moveToList","pageParam","pageNum","searchStr","getSearch","moveToModify","num","moveToAdd","signHost","JaddPageWrap","JaddPageMain","JaddPageImage","JaddPageInfo","JaddMailWrap","_templateObject5","JaddNameWrap","_templateObject6","JaddPwWrap","_templateObject7","JaddMorePwWrap","_templateObject8","JaddGenderWrap","_templateObject9","GenderBtWrap","_templateObject10","JaddNickNameWrap","_templateObject11","JaddNickNameInner","_templateObject12","NicknameCheck","_templateObject13","JaddBirthWrap","_templateObject14","JaddNumberWrap","_templateObject15","JaddAddressWrap","_templateObject16","JaddAddressBts","_templateObject17","_templateObject18","clicked","secondary","_ref2","initState","pic","email","upw","checkUpw","nickname","birth","gender","address","tel","JaddPage","product","setProduct","fetching","setFetching","handleChange","target","value","setMessage","image","setImage","selectedImage","setSelectedImage","uploadRef","useRef","handleClick","formData","FormData","dto","Blob","JSON","stringify","type","append","response","charAt","data","statusText","postJadd","setResult","addResult","setAddResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","showModal","setShowModal","message","messageColor","setMessageColor","genderSelect","setGenderSelect","handleGenderClick","setNickname","isAvailable","setIsAvailable","successNickFn","failNickFn","errorNickFn","phoneNumber","setPhoneNumber","birthday","setBirthday","ResultModal","SelectedModal","TitleHeader","process","className","deleteImage","handleClickImg","current","click","ref","onChange","file","files","previewUrl","URL","createObjectURL","placeholder","action","method","onSubmit","maxLength","minLength","onBlur","handleValiation","paddingTop","iNickCheck","nickNameCheck","input","event","handleAddClick","handleConfirm","Outlet","check","init"],"sourceRoot":""}