{"version":3,"file":"static/js/7300.a2f5aad4.chunk.js","mappings":"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","sources":["components/common/ResultModal.js","components/common/SelectedModal.js","components/image-optimization/OptiPlaceholder.js","components/image-optimization/OptiWireframe.js","components/meat/hooks/useSelectModal.js","components/meat/hooks/useEmptyModal.js","components/meat/hooks/useCustomHook.js","components/meat/hooks/useModal.js","components/community/styles/ReadStyle.js","components/community/Read.js","pages/community/ReadPage.js","../node_modules/react-spinners/esm/FadeLoader.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import { useState } from \"react\";\r\n\r\nconst OptiPlaceholder = ({\r\n  src,\r\n  alt,\r\n  placeholder,\r\n  width,\r\n  height,\r\n  ...props\r\n}) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {!loaded && (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {/* 여기에 와이어프레임 또는 placeholder 컴포넌트를 렌더링 */}\r\n          {placeholder}\r\n        </div>\r\n      )}\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        style={{\r\n          width: `${width}px`,\r\n          height: `${height}px`,\r\n          cursor: \"pointer\",\r\n          borderRadius: \"4px\",\r\n          display: loaded ? \"block\" : \"none\",\r\n        }}\r\n        onLoad={() => setLoaded(true)}\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptiPlaceholder;\r\n","import { FadeLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst OptiWireframe = ({ width, height }) => {\r\n  const laodingCss = {\r\n    position: \"relative\",\r\n    width: `${width}px`,\r\n    height: `${height}px`,\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \" 4px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <FadeLoader color={ColorStyle.g200} loading={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptiWireframe;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useSelectModal() {\r\n  const [isSelectModal, setIsSelectModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmFn: null,\r\n    cancelFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openSelectModal = (title, content, confirmFn, cancelFn) => {\r\n    setIsSelectModal({ isOpen: true, title, content, confirmFn, cancelFn });\r\n  };\r\n\r\n  const confirmSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  const cancelSelectModal = () => {\r\n    setIsSelectModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  };\r\n}\r\n\r\nexport default useSelectModal;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useEmptyModal() {\r\n  const [isEmptyModal, setIsEmptyModal] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openEmptyModal = (content, callFn) => {\r\n    setIsEmptyModal({ isOpen: true, content, callFn });\r\n  };\r\n\r\n  const closeEmptyModal = () => {\r\n    setIsEmptyModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  return { isEmptyModal, openEmptyModal, closeEmptyModal };\r\n}\r\n\r\nexport default useEmptyModal;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../../../util/utils\";\r\nimport useModal from \"./useModal\";\r\nimport useSelectModal from \"./useSelectModal\";\r\nimport useCustomLoginTS from \"./useCustomLoginTS\";\r\nimport useEmptyModal from \"./useEmptyModal\";\r\nconst useCustomHook = () => {\r\n  const navigate = useNavigate();\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  const { isModal, openModal, closeModal, moveToLogin, shutModal } = useModal();\r\n  const { isLogin } = useCustomLoginTS();\r\n  const {\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n  } = useSelectModal();\r\n  const { isEmptyModal, openEmptyModal, closeEmptyModal } = useEmptyModal();\r\n\r\n  // @COMMENT SearchParams (page,category,search,filter)\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n\r\n  const category = urlSearchParams.get(\"category\")\r\n    ? parseInt(urlSearchParams.get(\"category\"))\r\n    : 0;\r\n\r\n  const size = urlSearchParams.get(\"size\")\r\n    ? parseInt(urlSearchParams.get(\"size\"))\r\n    : 3;\r\n\r\n  const filter = urlSearchParams.get(\"filter\")\r\n    ? parseInt(urlSearchParams.get(\"filter\"))\r\n    : 0;\r\n\r\n  const check = urlSearchParams.get(\"check\")\r\n    ? parseInt(urlSearchParams.get(\"check\"))\r\n    : 0;\r\n\r\n  const defaultQueryString = createSearchParams({\r\n    page,\r\n    search,\r\n    category,\r\n    filter,\r\n    size,\r\n  }).toString();\r\n\r\n  // @COMMENT Page Query\r\n  const MoveToPage = PageParam => {\r\n    let queryStr = \"\";\r\n    if (PageParam) {\r\n      const PageNum = getNum(PageParam.page, page);\r\n      queryStr = createSearchParams({\r\n        page: PageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  // @COMMENT Filter Query\r\n  const MoveToFilter = FilterParam => {\r\n    let queryStr = \"\";\r\n    if (FilterParam) {\r\n      const FilterNum = getNum(FilterParam.filter, filter);\r\n      queryStr = createSearchParams({\r\n        filter: FilterNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // @COMMENT Category Query\r\n  const MoveToList = CategoryParam => {\r\n    let queryStr = \"\";\r\n    if (CategoryParam) {\r\n      const categoryNum = getNum(CategoryParam.category, category);\r\n      queryStr = createSearchParams({\r\n        category: categoryNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    // ! category\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // ! Read Page hook\r\n  const moveToRead = ishop => {\r\n    navigate({ pathname: `../detail/${ishop}`, search: defaultQueryString });\r\n  };\r\n\r\n  // ! Read Page hook\r\n  const moveToReser = ishop => {\r\n    navigate({\r\n      pathname: `../reservation/${ishop}`,\r\n      search: defaultQueryString,\r\n    });\r\n  };\r\n  // ! GO B ReserPage\r\n  const moveToBReser = (e, ibutcher, name) => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      navigate({\r\n        pathname: `../../butcher/pickup/${ibutcher}`,\r\n        search: `name=${name}&${defaultQueryString}`,\r\n      });\r\n      // console.log(\"넘어간드아\", menuList, name, ibutcher);\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n    console.log(name);\r\n  };\r\n\r\n  const moveToReview = (ireser, checkShop, name, ishop) => {\r\n    console.log(name);\r\n    navigate({\r\n      pathname: `../../meat/review/${ireser}`,\r\n      search: `name=${name}&checkShop=${checkShop}&ishop=${ishop}&${defaultQueryString}`,\r\n    });\r\n  };\r\n  // @COMMENT Payment\r\n  const moveToPayment = (pk, amount, checkShop) => {\r\n    console.log(\r\n      \"payment, pk :\",\r\n      pk,\r\n      \"amount :\",\r\n      amount,\r\n      \"checkShop:\",\r\n      checkShop,\r\n    );\r\n    navigate({\r\n      pathname: `/payment/checkout`,\r\n      search: `pk=${pk}&amount=${amount}&checkShop=${checkShop}`,\r\n    });\r\n  };\r\n\r\n  const moveToSize = SizeParam => {\r\n    let queryStr = \"\";\r\n    if (SizeParam) {\r\n      const SizeStr = getNum(SizeParam.size, size);\r\n      queryStr = createSearchParams({\r\n        size: SizeStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../review\", search: queryStr });\r\n  };\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const moveToSearch = SearchParam => {\r\n    let queryStr = \"\";\r\n    if (SearchParam) {\r\n      const SearchStr = getNum(SearchParam.search, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  const moveToSVSearch = SearchParam => {\r\n    let queryStr = \"\";\r\n    if (SearchParam) {\r\n      const SearchStr = getNum(SearchParam.search, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchStr,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../shop\", search: queryStr });\r\n  };\r\n\r\n  const moveToCheck = CheckParam => {\r\n    let queryStr = \"\";\r\n    if (CheckParam) {\r\n      const checkNum = getNum(CheckParam.check, check);\r\n      queryStr = createSearchParams({\r\n        check: checkNum,\r\n      }).toString();\r\n      console.log(\"queryStr:\", queryStr);\r\n      setRefresh(!refresh);\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../report\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    page,\r\n    search,\r\n    category,\r\n    check,\r\n    filter,\r\n    MoveToFilter,\r\n    MoveToList,\r\n    moveToRead,\r\n    moveToSearch,\r\n    refresh,\r\n    isModal,\r\n    openModal,\r\n    closeModal,\r\n    moveToLogin,\r\n    moveToReser,\r\n    MoveToPage,\r\n    moveToReview,\r\n    isSelectModal,\r\n    openSelectModal,\r\n    confirmSelectModal,\r\n    cancelSelectModal,\r\n    moveToBReser,\r\n    openEmptyModal,\r\n    isEmptyModal,\r\n    closeEmptyModal,\r\n    moveToPayment,\r\n    shutModal,\r\n    moveToCheck,\r\n    size,\r\n    moveToSize,\r\n    moveToSVSearch,\r\n  };\r\n};\r\nexport default useCustomHook;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useModal() {\r\n  const [isModal, setIsModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    callFn: null,\r\n  });\r\n  const navgate = useNavigate();\r\n\r\n  const openModal = (title, content, callFn) => {\r\n    setIsModal({ isOpen: true, title, content, callFn });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const shutModal = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  const moveToLogin = () => {\r\n    setIsModal(prev => ({ ...prev, isOpen: false }));\r\n    navgate(\"/login\");\r\n  };\r\n\r\n  return { isModal, openModal, closeModal, moveToLogin, shutModal };\r\n}\r\n\r\nexport default useModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const MoreBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n`;\r\n\r\nexport const TitleBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 20px 20px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  align-self: stretch;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  border-bottom: 1px solid ${ColorStyle.g500};\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const MoreTitleStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const MoreStyle = styled.div`\r\n  position: relative;\r\n  color: ${ColorStyle.g600};\r\n`;\r\n\r\nexport const WriterBoxStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  color: ${ColorStyle.g700};\r\n  font-size: ${FontSize.default};\r\n  .viewBox {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  .like-box {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n  }\r\n  .like-button {\r\n    background: none;\r\n    border: none;\r\n    padding: none;\r\n    margin: 0;\r\n    color: ${ColorStyle.g700};\r\n    font: inherit;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PrnvContentStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: flex-start;\r\n  gap: 60px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  .prnv {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  .prnvTitle {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BtnBoxStyle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 30px 0px 50px 0px;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  align-self: stretch;\r\n  .editBtn {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n\r\nexport const ReviewBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px 20px 50px 20px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .readReviewBox {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    padding-bottom: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    align-self: stretch;\r\n  }\r\n  .readReview {\r\n    display: flex;\r\n    /* width: 1105px; */\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 15px;\r\n    flex: 1 0 0;\r\n  }\r\n  .reviewInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n  }\r\n  .reviewCount {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n    color: ${ColorStyle.secondary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .userInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 30px;\r\n    align-self: stretch;\r\n  }\r\n  .user {\r\n    display: flex;\r\n    width: 65px;\r\n    align-items: center;\r\n    gap: 2px;\r\n  }\r\n  .nickName {\r\n    align-items: center;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.primary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .date {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g500};\r\n    font-size: 11px;\r\n  }\r\n  .reviewContentBox {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .reviewContent {\r\n    display: flex;\r\n    padding: 0px 10px;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-shrink: 1;\r\n    gap: 10px;\r\n    /* align-self: stretch; */\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .button-box {\r\n    display: flex;\r\n    /* width: 25px; */\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-shrink: 0;\r\n  }\r\n  .deleteBtn {\r\n    display: flex;\r\n    width: 25px;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.primary};\r\n    cursor: pointer;\r\n  }\r\n  .reportBtn {\r\n    display: flex;\r\n    /* width: 25px; */\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n  }\r\n  .inputReviewBox {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 20px 0px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 13px;\r\n    align-self: stretch;\r\n    border-top: 1px dashed ${ColorStyle.g500};\r\n  }\r\n  .inputReview {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    align-self: stretch;\r\n    textarea {\r\n      border: none;\r\n      outline: none;\r\n      resize: none;\r\n      padding: 12px 20px 4px 20px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 90%;\r\n      border-radius: 10px;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      color: ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteComment,\r\n  deleteOne,\r\n  getOne,\r\n  postComment,\r\n  postCommuCommentReport,\r\n  postCommuReport,\r\n  postFav,\r\n} from \"../../api/communityApi\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\nimport {\r\n  ContentInfoStyle,\r\n  ContentStyle,\r\n  ImgStyle,\r\n  LargeImgStyle,\r\n  NameStyle,\r\n  ThumbnailStyle,\r\n  UserStyle,\r\n  WrapStyle,\r\n} from \"./styles/ListStyle\";\r\nimport {\r\n  BtnBoxStyle,\r\n  MoreBoxStyle,\r\n  MoreStyle,\r\n  MoreTitleStyle,\r\n  PrnvContentStyle,\r\n  ReviewBox,\r\n  TitleBoxStyle,\r\n  WriterBoxStyle,\r\n} from \"./styles/ReadStyle\";\r\n// @COMMENT import React-Query\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport OptiPlaceholder from \"../image-optimization/OptiPlaceholder\";\r\nimport OptiWireframe from \"../image-optimization/OptiWireframe\";\r\nimport useCustomHook from \"../meat/hooks/useCustomHook\";\r\nimport useCustomLoginTS from \"../meat/hooks/useCustomLoginTS\";\r\n\r\nconst host = API_SERVER_HOST;\r\n// 서버데이터 초기값\r\nconst initState = {\r\n  iboard: 0,\r\n  iuser: 0,\r\n  name: \"\",\r\n  writerPic: \"\",\r\n  title: \"\",\r\n  contents: \"\",\r\n  createdAt: \"\",\r\n  isFav: 0,\r\n  isReport: 0,\r\n  pics: [],\r\n  be: {\r\n    iboard: 0,\r\n    title: \"\",\r\n  },\r\n  af: {\r\n    iboard: 0,\r\n    title: \"\",\r\n  },\r\n  comments: [\r\n    {\r\n      icomment: 0,\r\n      writerPk: 0,\r\n      writerName: \"\",\r\n      comment: \"\",\r\n      createdAt: \"\",\r\n      isCommentReport: 0,\r\n    },\r\n  ],\r\n};\r\n\r\n// 댓글 등록을 위한 초기값\r\nconst initComment = {\r\n  contents: \"\",\r\n};\r\n\r\nconst Read = () => {\r\n  // @RTK 로그인 정보 불러오기\r\n  // const authState = useSelector(state => state.authSlice);\r\n  // @RECOIL 로그인 정보 불러오기\r\n  const { userState, isSupervisorLogin } = useCustomLoginTS();\r\n  // console.log(authState.nickname);\r\n  const isNickname = userState.nickname;\r\n  // const isNickname = authState.nickname;\r\n\r\n  // 커스텀 훅\r\n  const { moveToRead, moveToList, moveToModify, page } = useCustomMove();\r\n\r\n  // 해당 글 pk값 추출 및 할당(get)\r\n  const { iboard } = useParams();\r\n\r\n  // 해당 글 상태 초기화 및 업데이트(get)\r\n  const [content, setContent] = useState(initState);\r\n  // console.log(content.name);\r\n  const isName = content.name;\r\n\r\n  // 해당 글에 댓글 작성을 위한 상태 초기화 및 업데이트(post)\r\n  const [contents, setcontents] = useState(initComment);\r\n\r\n  // 해당 글의 댓글 상태 초기화 및 업데이트(get)\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  // 커뮤니티 해당 글 이미지 미리보기 관련\r\n  const [selectedImg, setSlectedImg] = useState(content.pics[0]?.pic);\r\n\r\n  // 댓글이 빈 문자열일 때 resultModal을 띄우기 위한 상태 업데이트\r\n  const [showCommentModal, setShowCommentModal] = useState(false);\r\n\r\n  // 댓글이 50자 넘을 때 resultModal을 띄우기 위한 상태 업데이트\r\n  const [showCommentLengthModal, setShowCommentLengthModal] = useState(false);\r\n\r\n  // 댓글 삭제 관련\r\n  // 댓글 pk값 상태 업데이트\r\n  const [currentCommentId, setCurrentCommentId] = useState(null);\r\n\r\n  // selectedModal 띄우기 위한 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 해당 글 pk값 상태 업데이트\r\n  const [currentReadId, setCurrentReadId] = useState(null);\r\n\r\n  // selectedModal 을 띄우기 위한 상태 업데이트\r\n  const [showReadModal, setShowReadModal] = useState(false);\r\n\r\n  // API 통신 결과 상태 업데이트\r\n  // 댓글 등록 및 삭제 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n\r\n  // 해당 글 삭제 결과 상태 업데이트\r\n  const [delReadResult, setDelReadResult] = useState(false);\r\n\r\n  // resultModal props 값 업데이트\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(\"\");\r\n\r\n  // Modal 닫기 이후 화면 전환 상태 업데이트\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n\r\n  // ----------------------------------------------------------------------------------------------------\r\n\r\n  // 커뮤니티 해당 글 정보 가져오기(get)\r\n  const getOneData = () => {\r\n    getOne({ iboard, successFn, failFn, errorFn });\r\n  };\r\n\r\n  const successFn = result => {\r\n    setFetching(false);\r\n    setContent(result);\r\n    setComments(result.comments);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  const [favorite, setFavorite] = useState(false);\r\n  const [report, setReport] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOneData();\r\n  }, [iboard, page, favorite, report]);\r\n\r\n  // 해당글의 이미지 큰이미지로 보여주기\r\n  // content.pics가 변경될 때마다 실행됩니다.\r\n  useEffect(() => {\r\n    if (content.pics && content.pics.length > 0 && content.pics[0].pic) {\r\n      setSlectedImg(content.pics[0].pic);\r\n    }\r\n  }, [content.pics]);\r\n\r\n  // 썸네일 이미지 클릭 시 이미지 상태 업데이트\r\n  const handleThumbnailClick = pic => {\r\n    setSlectedImg(pic);\r\n  };\r\n\r\n  // 댓글 등록 관련\r\n  const handleChange = e => {\r\n    // 댓글 입력 텍스트 필드의 새로고침을 위해 변수에 할당\r\n    const newContents = { ...contents, [e.target.name]: e.target.value };\r\n    setcontents(newContents);\r\n    // 기존 방식\r\n    // contents[e.target.name] = e.target.value;\r\n    // setcontents({ ...contents });\r\n  };\r\n\r\n  // 댓글 등록 함수\r\n  const addComment = () => {\r\n    // 댓글 입력 창에 빈 문자열이면 모달창 띄우기\r\n    if (contents.contents.length !== 0) {\r\n      // 댓글이 50자 이내면 post 실행\r\n      if (contents.contents.length <= 50) {\r\n        postComment({\r\n          iboard,\r\n          contents,\r\n          successFn: successFnAdd,\r\n          failFn: failFnAdd,\r\n          errorFn: errorFnAdd,\r\n        });\r\n      }\r\n      // 댓글이 50자 초과면 모달창 띄우기\r\n      if (contents.contents.length > 50) {\r\n        setShowCommentLengthModal(true);\r\n      }\r\n    } else {\r\n      // 댓글 빈 문자열이면 모달창 띄우기\r\n      setShowCommentModal(true);\r\n    }\r\n    // console.log(contents);\r\n    // console.log(iboard);\r\n  };\r\n  const successFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록\");\r\n    setPopContent(\"댓글을 등록하였습니다.\");\r\n    setcontents({ ...initComment });\r\n    getOneData();\r\n  };\r\n  const failFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"댓글을 등록에 실패하였습니다. 다시 등록 해주세요.\");\r\n  };\r\n  const errorFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 등록 해주세요.\");\r\n  };\r\n\r\n  // 댓글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelComment = icomment => {\r\n    setCurrentCommentId(icomment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const successFnDel = result => {\r\n    console.log(\"댓글 삭제 성공\", result);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제\");\r\n    setPopContent(\"댓글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setResult(false);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"댓글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // 해당 글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelRead = iboard => {\r\n    setCurrentReadId(iboard);\r\n    setShowReadModal(true);\r\n  };\r\n\r\n  // 모달창 관련\r\n  const closeModal = () => {\r\n    // 모달창 숨기기\r\n    setResult(false);\r\n  };\r\n\r\n  // 댓글 등록시 빈 문자열일 때 모달창 닫기\r\n  const closeCommentBlank = () => {\r\n    setShowCommentModal(false);\r\n  };\r\n\r\n  // 댓글 등록 시 글 수 50자 초과 모달창 닫기\r\n  const closeCommnetLength = () => {\r\n    setShowCommentLengthModal(false);\r\n  };\r\n\r\n  // 해당 글 삭제 resultModal callFn\r\n  const closeDelReadModal = () => {\r\n    // 모달창 숨기기\r\n    setShowReadModal(false);\r\n    moveToList({ page: page });\r\n  };\r\n\r\n  // 해당 글 삭제 selectedModal 취소\r\n  const cancelReadModal = () => {\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  // 댓글 삭제 selectedModal 취소 버튼\r\n  const cancelModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 댓글 삭제를 위한 selectedModal 확인버튼\r\n  const confirmModal = () => {\r\n    if (currentCommentId) {\r\n      deleteComment({\r\n        icomment: currentCommentId,\r\n        successFn: successFnDel,\r\n        failFn: failFnDel,\r\n        errorFn: errorFnDel,\r\n      });\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 해당 글 삭제를 위한 selectedModal 확인버튼\r\n  const confirmReadModal = () => {\r\n    if (currentReadId) {\r\n      deleteOne({\r\n        iboard: currentReadId,\r\n        successFn: successFnReadDel,\r\n        failFn: failFnReadDel,\r\n        errorFn: errorFnReadDel,\r\n      });\r\n    }\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  const successFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 성공\", delReadResult);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제\");\r\n    setPopContent(\"해당 글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setDelReadResult(false);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"해당 글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setPopRedirect(1);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // @COMMENT React-query Mutation (Like function)\r\n  //  /api/community/fav initState\r\n  const initStatefav = {\r\n    iuser: 0,\r\n    iboard: 0,\r\n  };\r\n  // use Mutation\r\n  const iuser = userState.iuser;\r\n  // const dataForm = {\r\n  //   iuser: parseInt(iuser),\r\n  //   iboard: parseInt(iboard),\r\n  // };\r\n  // console.log(\"데이터 폼 테스트 :\", dataForm);\r\n\r\n  const favMutation = useMutation({\r\n    mutationFn: fav => postFav({ iboard }),\r\n    onSuccess: result => {\r\n      // console.log(\"성공한 게시물 : \", iboard);\r\n      if (result.result === 0) {\r\n        setFavorite(!favorite);\r\n        openModal(\"좋아요 해제\", \"좋아요가 해제 되었습니다.\", shutModal);\r\n      }\r\n      if (result.result === 1) {\r\n        setFavorite(!favorite);\r\n        openModal(\"좋아요 등록\", \"좋아요가 등록 되었습니다.\", shutModal);\r\n      }\r\n    },\r\n    onError: () => {},\r\n  });\r\n\r\n  const handleClickFav = () => {\r\n    console.log(\"데이터다 :\", iboard, iuser);\r\n    // console.log(\"test2\", dataForm);\r\n    favMutation.mutate();\r\n  };\r\n  const reportInitState = {\r\n    iboard: iboard,\r\n    ireport: 1,\r\n  };\r\n  const [reportData, setReportData] = useState(reportInitState);\r\n  const [reported, setReported] = useState(false);\r\n  const reportMutation = useMutation({\r\n    mutationFn: reportData => postCommuReport({ reportData }),\r\n    onSuccess: () => {\r\n      console.log(\"신고 성공\");\r\n      // console.log(\"신고 -완-\");\r\n      openModal(\"글신고완료\", \"신고가 완료 되었습니다.\", shutModal);\r\n      setReport(!report);\r\n    },\r\n    onError: error => {\r\n      if (error.response && error.response.status === 404) {\r\n        // openModal(\"예약 실패\", \"시간을 기입해주세요.\", closeModal);\r\n        openModal(\"신고 오류\", \"이미 신고한 글입니다.\", shutModal);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleClickRBoardBtn = comment => {\r\n    console.log(\"딸깍\", comment);\r\n    // console.log(\"딸깍\", comment);\r\n    openSelectModal(\r\n      \"글 신고하기\",\r\n      <div style={{ padding: \"10px\" }}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <span>신고항목을 선택해주세요.</span>\r\n        </div>\r\n        <div>\r\n          <select onChange={e => handleChangeBoardReport(e)}>\r\n            <option value={1}>욕설/인신공격</option>\r\n            <option value={2}>음란물</option>\r\n            <option value={3}>영리목적/홍보성</option>\r\n            <option value={4}>개인정보</option>\r\n            <option value={5}>게시글 도배</option>\r\n            <option value={6}>기타</option>\r\n          </select>\r\n        </div>\r\n      </div>,\r\n      () => {\r\n        handleClickBoardReport(), cancelSelectModal();\r\n      },\r\n      () => cancelSelectModal(),\r\n    );\r\n  };\r\n\r\n  const handleChangeBoardReport = e => {\r\n    const selectedValue = parseInt(e.target.value, 10);\r\n    setReportData(prevValue => ({\r\n      ...prevValue,\r\n      ireport: selectedValue,\r\n    }));\r\n  };\r\n\r\n  const handleClickBoardReport = () => {\r\n    // const numIboard = parseInt(iboard, 10);\r\n    const report = {\r\n      iboard: iboard !== undefined ? Number(iboard) : 0,\r\n      ireport: reportData.ireport,\r\n    };\r\n    console.log(\"report form test \", report);\r\n    // console.log(\"reportData \", reportData);\r\n    reportMutation.mutate(report);\r\n  };\r\n\r\n  // ! 커뮤니티 댓글 신고\r\n\r\n  const reportCommentInitState = {\r\n    icomment: 0,\r\n    ireport: 1,\r\n  };\r\n  const [reportCommentData, setReportCommentData] = useState(\r\n    reportCommentInitState,\r\n  );\r\n  const reportCommentMutation = useMutation({\r\n    mutationFn: reportCommentData =>\r\n      postCommuCommentReport({ reportCommentData }),\r\n    onSuccess: result => {\r\n      // console.log(\"값\", result);\r\n      setReport(!report);\r\n      // console.log(\"신고 -완-\");\r\n      openModal(\"댓글신고완료\", \"신고가 완료 되었습니다.\", shutModal);\r\n    },\r\n    onError: error => {\r\n      if (error.response && error.response.status === 404) {\r\n        // openModal(\"예약 실패\", \"시간을 기입해주세요.\", closeModal);\r\n        openModal(\"신고 오류\", \"이미 신고한 글입니다.\", shutModal);\r\n      }\r\n    },\r\n  });\r\n  // Call customhook\r\n  const {\r\n    isModal,\r\n    openModal,\r\n    // closeModal,\r\n    openSelectModal,\r\n    shutModal,\r\n    isSelectModal,\r\n    cancelSelectModal,\r\n  } = useCustomHook();\r\n\r\n  const handleClickRCommentBtn = comment => {\r\n    console.log(\"딸깍\", comment);\r\n    // console.log(\"딸깍\", comment);\r\n    openSelectModal(\r\n      \"댓글 신고하기\",\r\n      <div style={{ padding: \"10px\" }}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <span>신고항목을 선택해주세요.</span>\r\n        </div>\r\n        <div>\r\n          <select onChange={e => handleChangeCommentReport(e)}>\r\n            <option value={1}>욕설/인신공격</option>\r\n            <option value={2}>음란물</option>\r\n            <option value={3}>영리목적/홍보성</option>\r\n            <option value={4}>개인정보</option>\r\n            <option value={5}>게시글 도배</option>\r\n            <option value={6}>기타</option>\r\n          </select>\r\n        </div>\r\n      </div>,\r\n      () => {\r\n        handleClickCommentReport(comment), cancelSelectModal();\r\n      },\r\n      () => cancelSelectModal(),\r\n    );\r\n  };\r\n  const handleChangeCommentReport = e => {\r\n    const selectedValue = parseInt(e.target.value, 10);\r\n    console.log(\"handlechange\", selectedValue);\r\n    setReportCommentData(prevValue => ({\r\n      ...prevValue,\r\n      ireport: selectedValue,\r\n    }));\r\n  };\r\n\r\n  const handleClickCommentReport = comment => {\r\n    console.log(\"comment num \", comment);\r\n    // const numIboard = parseInt(iboard, 10);\r\n    const reportComment = {\r\n      icomment: comment !== undefined ? Number(comment) : 0,\r\n      ireport: reportCommentData.ireport,\r\n    };\r\n    console.log(\"report form test \", reportComment);\r\n    // console.log(\"reportCommentData \", reportCommentData);\r\n    reportCommentMutation.mutate(reportComment);\r\n  };\r\n\r\n  // const handleClickRPostBtn = () => {};\r\n  // Report Comment Button Click\r\n\r\n  const formatDate = dateString => {\r\n    const date = new Date(dateString);\r\n    // 'ko-KR'은 한국어 로케일을 의미합니다. 필요에 따라 변경하십시오.\r\n    // 옵션을 통해 날짜와 시간 포맷을 조정할 수 있습니다.\r\n    return date.toLocaleString(\"ko-KR\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      hour12: false, // 24시간 형식을 사용하려면 이 옵션을 false로 설정\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n\r\n      {isSelectModal.isOpen && (\r\n        <SelectedModal\r\n          title={isSelectModal.title}\r\n          content={isSelectModal.content}\r\n          confirmFn={isSelectModal.confirmFn}\r\n          cancelFn={isSelectModal.cancelFn}\r\n        />\r\n      )}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <TitleBoxStyle>\r\n        <MoreTitleStyle>{content.title}</MoreTitleStyle>\r\n        <WriterBoxStyle>\r\n          <div className=\"userName\">{content.name}</div>\r\n          <div className=\"date\">{formatDate(content.createdAt)}</div>\r\n          {/* @COMMENT TEST LIKE BUTTON */}\r\n          <div className=\"like-box\" onClick={handleClickFav}>\r\n            {content?.isFav === 1 ? (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/like_fill.svg`}\r\n                alt=\"like\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/like.svg`}\r\n                alt=\"like\"\r\n              />\r\n            )}\r\n            <div>{content.totalFav}</div>\r\n            <button className=\"like-button\">좋아요</button>\r\n          </div>\r\n          {/* <button onClick={handleClickReport}>신고버튼</button>\r\n           */}\r\n          <div className=\"like-box\" onClick={handleClickRBoardBtn}>\r\n            {/* <span>글신고하고싶다 이말이야</span> */}\r\n            {/* <select onChange={e => handleChangeReport(e)}>\r\n                  <option value={1}>욕설/인신공격</option>\r\n                  <option value={2}>음란물</option>\r\n                  <option value={3}>영리목적/홍보성</option>\r\n                  <option value={4}>개인정보</option>\r\n                  <option value={5}>게시글 도배</option>\r\n                  <option value={6}>기타</option>\r\n                </select> */}\r\n            {content?.isReport === 1 ? (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/report_fill.svg`}\r\n                alt=\"like\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/report.svg`}\r\n                alt=\"like\"\r\n              />\r\n            )}\r\n            <button className=\"like-button\">신고하기</button>\r\n          </div>\r\n        </WriterBoxStyle>\r\n      </TitleBoxStyle>\r\n      <MoreBoxStyle>\r\n        <ImgStyle>\r\n          <LargeImgStyle>\r\n            {content.pics[0] ? (\r\n              <OptiPlaceholder\r\n                src={`${host}/pic/community/${content.iboard}/${selectedImg}`}\r\n                alt=\"Large image\"\r\n                width={480}\r\n                height={480}\r\n                placeholder={\r\n                  <div>\r\n                    <OptiWireframe width={480} height={480} />\r\n                  </div>\r\n                }\r\n              />\r\n            ) : null}\r\n          </LargeImgStyle>\r\n          <ThumbnailStyle>\r\n            {content.pics.map(\r\n              (pic, index) =>\r\n                pic && (\r\n                  <div\r\n                    className=\"thumbnail\"\r\n                    key={index}\r\n                    onClick={() => {\r\n                      handleThumbnailClick(pic.pic);\r\n                    }}\r\n                  >\r\n                    <OptiPlaceholder\r\n                      src={`${host}/pic/community/${content.iboard}/${pic.pic}`}\r\n                      alt={`img_${index + 1}`}\r\n                      width={80}\r\n                      height={80}\r\n                      placeholder={\r\n                        <div>\r\n                          <OptiWireframe width={80} height={80} />\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </div>\r\n                ),\r\n            )}\r\n          </ThumbnailStyle>\r\n        </ImgStyle>\r\n        <ContentInfoStyle>\r\n          <ContentStyle>\r\n            <UserStyle>\r\n              {content.writerPic ? (\r\n                <img\r\n                  src={`${host}/pic/user/${content.iuser}/${content.writerPic}`}\r\n                  alt=\"프로필사진\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                  alt=\"기본사진\"\r\n                />\r\n              )}\r\n              <NameStyle>\r\n                <div>{content.name}</div>\r\n                {/* <TagBoxStyle>\r\n                  <Tag tagtext=\"#동성로\" />\r\n                  <Tag tagtext=\"#모듬한판\" />\r\n                  <Tag tagtext=\"#퇴근길\" />\r\n                </TagBoxStyle> */}\r\n              </NameStyle>\r\n            </UserStyle>\r\n            <MoreStyle>{content.contents}</MoreStyle>\r\n          </ContentStyle>\r\n        </ContentInfoStyle>\r\n      </MoreBoxStyle>\r\n      {content.be && (\r\n        <PrnvContentStyle>\r\n          <div className=\"prnv\">\r\n            <div className=\"prnvIcon\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/mingcute_up-line.svg`}\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n            <div className=\"prnvText\">이전글</div>\r\n          </div>\r\n          <div\r\n            className=\"prnvTitle\"\r\n            onClick={() => {\r\n              moveToRead(content.be.iboard);\r\n            }}\r\n          >\r\n            {content.be.title}\r\n          </div>\r\n        </PrnvContentStyle>\r\n      )}\r\n      {content.af && (\r\n        <PrnvContentStyle>\r\n          <div className=\"prnv\">\r\n            <div className=\"prnvIcon\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/mingcute_down-line.svg`}\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n            <div className=\"prnvText\">다음글</div>\r\n          </div>\r\n          <div\r\n            className=\"prnvTitle\"\r\n            onClick={() => {\r\n              moveToRead(content.af.iboard);\r\n            }}\r\n          >\r\n            {content.af.title}\r\n          </div>\r\n        </PrnvContentStyle>\r\n      )}\r\n      <BtnBoxStyle>\r\n        <div className=\"editBtn\">\r\n          <div\r\n            onClick={() => {\r\n              moveToModify(content.iboard);\r\n            }}\r\n          >\r\n            {isName === isNickname || isSupervisorLogin ? (\r\n              <Button bttext=\"수정하기\" />\r\n            ) : null}\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              handleDelRead(content.iboard);\r\n            }}\r\n          >\r\n            {isName === isNickname || isSupervisorLogin ? (\r\n              <Button bttext=\"삭제하기\" />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            moveToList({ page });\r\n          }}\r\n        >\r\n          <Button bttext=\"목록보기\" />\r\n        </div>\r\n      </BtnBoxStyle>\r\n      <ReviewBox>\r\n        <div className=\"readReviewBox\">\r\n          <div className=\"readReview\">\r\n            <div className=\"reviewInfo\">\r\n              <div className=\"reviewCount\">\r\n                댓글 {content.comments.length}개\r\n              </div>\r\n              {content.comments.length > 0 &&\r\n                content.comments.map(comment => (\r\n                  <>\r\n                    <div className=\"userInfo\" key={comment.icomment}>\r\n                      <div className=\"user\">\r\n                        <div className=\"icon\">\r\n                          <img\r\n                            src={`${process.env.PUBLIC_URL}/assets/images/speech.svg`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"nickName\">{comment.writerName}</div>\r\n                      </div>\r\n                      <div className=\"date\">{comment.createdAt}</div>\r\n                    </div>\r\n                    <div className=\"reviewContentBox\">\r\n                      <div className=\"reviewContent\">{comment.comment}</div>\r\n                      <div className=\"button-box\">\r\n                        {comment.writerName === isNickname ? (\r\n                          <div\r\n                            className=\"deleteBtn\"\r\n                            onClick={() => {\r\n                              handleDelComment(comment.icomment);\r\n                            }}\r\n                          >\r\n                            삭제\r\n                          </div>\r\n                        ) : null}\r\n                        {comment.isCommentReport === 0 ? (\r\n                          <div>\r\n                            <div\r\n                              className=\"reportBtn\"\r\n                              onClick={() =>\r\n                                handleClickRCommentBtn(comment.icomment)\r\n                              }\r\n                            >\r\n                              댓글신고\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"inputReviewBox\">\r\n          <div className=\"inputReview\">\r\n            <textarea\r\n              cols={50}\r\n              type=\"text\"\r\n              name=\"contents\"\r\n              value={contents.contents}\r\n              onChange={e => handleChange(e)}\r\n              placeholder=\"댓글을 입력해보세요(50자 이내)\"\r\n            />\r\n          </div>\r\n          <div onClick={addComment}>\r\n            <Button bttext=\"댓글입력\" />\r\n          </div>\r\n        </div>\r\n      </ReviewBox>\r\n\r\n      {/* 모달창 */}\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"댓글 삭제\"\r\n          content=\"정말 댓글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmModal}\r\n          cancelFn={cancelModal}\r\n        />\r\n      ) : null}\r\n\r\n      {showReadModal ? (\r\n        <SelectedModal\r\n          title=\"글 삭제\"\r\n          content=\"정말 해당 글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmReadModal}\r\n          cancelFn={cancelReadModal}\r\n        />\r\n      ) : null}\r\n\r\n      {result ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n\r\n      {delReadResult ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeDelReadModal}\r\n        />\r\n      ) : null}\r\n\r\n      {showCommentModal ? (\r\n        <ResultModal\r\n          title=\"댓글 등록\"\r\n          content=\"댓글을 입력해주세요\"\r\n          callFn={closeCommentBlank}\r\n        />\r\n      ) : null}\r\n\r\n      {showCommentLengthModal ? (\r\n        <ResultModal\r\n          title=\"댓글 등록\"\r\n          content=\"댓글을 50자 이내로 작성해주세요\"\r\n          callFn={closeCommnetLength}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React from \"react\";\r\nimport Read from \"../../components/community/Read\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\n\r\n// 글 읽기 페이지입니다.\r\nconst ReadPage = () => {\r\n  return (\r\n    <div>\r\n      <TitleHeader\r\n        timg={`${process.env.PUBLIC_URL}/assets/images/community_header.png`}\r\n        tname=\"고기잡담\"\r\n        tcontent='\"인생은 고기서 고기다\"'\r\n      />\r\n      <Read />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadPage;\r\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue, parseLengthAndUnit } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar fade = createAnimation(\"FadeLoader\", \"50% {opacity: 0.3} 100% {opacity: 1}\", \"fade\");\nfunction FadeLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.height, height = _f === void 0 ? 15 : _f, _g = _a.width, width = _g === void 0 ? 5 : _g, _h = _a.radius, radius = _h === void 0 ? 2 : _h, _j = _a.margin, margin = _j === void 0 ? 2 : _j, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"height\", \"width\", \"radius\", \"margin\"]);\n    var value = parseLengthAndUnit(margin).value;\n    var radiusValue = value + 18;\n    var quarter = radiusValue / 2 + radiusValue / 5.5;\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", fontSize: \"0\", top: radiusValue, left: radiusValue, width: \"\".concat(radiusValue * 3, \"px\"), height: \"\".concat(radiusValue * 3, \"px\") }, cssOverride);\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            width: cssValue(width),\n            height: cssValue(height),\n            margin: cssValue(margin),\n            backgroundColor: color,\n            borderRadius: cssValue(radius),\n            transition: \"2s\",\n            animationFillMode: \"both\",\n            animation: \"\".concat(fade, \" \").concat(1.2 / speedMultiplier, \"s \").concat(i * 0.12, \"s infinite ease-in-out\"),\n        };\n    };\n    var a = __assign(__assign({}, style(1)), { top: \"\".concat(radiusValue, \"px\"), left: \"0\" });\n    var b = __assign(__assign({}, style(2)), { top: \"\".concat(quarter, \"px\"), left: \"\".concat(quarter, \"px\"), transform: \"rotate(-45deg)\" });\n    var c = __assign(__assign({}, style(3)), { top: \"0\", left: \"\".concat(radiusValue, \"px\"), transform: \"rotate(90deg)\" });\n    var d = __assign(__assign({}, style(4)), { top: \"\".concat(-1 * quarter, \"px\"), left: \"\".concat(quarter, \"px\"), transform: \"rotate(45deg)\" });\n    var e = __assign(__assign({}, style(5)), { top: \"\".concat(-1 * radiusValue, \"px\"), left: \"0\" });\n    var f = __assign(__assign({}, style(6)), { top: \"\".concat(-1 * quarter, \"px\"), left: \"\".concat(-1 * quarter, \"px\"), transform: \"rotate(-45deg)\" });\n    var g = __assign(__assign({}, style(7)), { top: \"0\", left: \"\".concat(-1 * radiusValue, \"px\"), transform: \"rotate(90deg)\" });\n    var h = __assign(__assign({}, style(8)), { top: \"\".concat(quarter, \"px\"), left: \"\".concat(-1 * quarter, \"px\"), transform: \"rotate(45deg)\" });\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: a }),\n        React.createElement(\"span\", { style: b }),\n        React.createElement(\"span\", { style: c }),\n        React.createElement(\"span\", { style: d }),\n        React.createElement(\"span\", { style: e }),\n        React.createElement(\"span\", { style: f }),\n        React.createElement(\"span\", { style: g }),\n        React.createElement(\"span\", { style: h })));\n}\nexport default FadeLoader;\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else {\n      this.#currentMutation?.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\nfunction noop() {}\n","export function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwError function to override throwing behavior on a per-error basis\n  if (typeof throwError === 'function') {\n    return throwError(...params)\n  }\n\n  return !!throwError\n}\n"],"names":["_ref","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","src","alt","placeholder","props","loaded","setLoaded","useState","_Fragment","concat","cursor","onLoad","laodingCss","boxShadow","FadeLoader","color","ColorStyle","g200","loading","isSelectModal","setIsSelectModal","isOpen","useNavigate","openSelectModal","confirmSelectModal","prev","cancelSelectModal","isEmptyModal","setIsEmptyModal","openEmptyModal","closeEmptyModal","useCustomHook","navigate","urlSearchParams","setUrlSearchPrams","useSearchParams","isModal","openModal","closeModal","moveToLogin","shutModal","useModal","isLogin","useCustomLoginTS","useSelectModal","useEmptyModal","page","get","parseInt","search","category","size","filter","check","defaultQueryString","createSearchParams","toString","refresh","setRefresh","MoveToFilter","FilterParam","queryStr","FilterNum","getNum","pathname","MoveToList","CategoryParam","categoryNum","moveToRead","ishop","moveToSearch","SearchParam","SearchStr","console","log","moveToReser","MoveToPage","PageParam","PageNum","moveToReview","ireser","checkShop","name","moveToBReser","e","ibutcher","stopPropagation","moveToPayment","pk","amount","moveToCheck","CheckParam","checkNum","moveToSize","SizeParam","SizeStr","moveToSVSearch","setIsModal","navgate","MoreBoxStyle","styled","div","_templateObject","_taggedTemplateLiteral","TitleBoxStyle","_templateObject2","FontSize","strong","g500","MoreTitleStyle","_templateObject3","MoreStyle","_templateObject4","g600","WriterBoxStyle","_templateObject5","g700","default","PrnvContentStyle","_templateObject6","BtnBoxStyle","_templateObject7","ReviewBox","_templateObject8","secondary","primary","g900","host","API_SERVER_HOST","initState","iboard","iuser","writerPic","contents","createdAt","isFav","isReport","pics","be","af","comments","icomment","writerPk","writerName","comment","isCommentReport","initComment","Read","_content$pics$","userState","isSupervisorLogin","isNickname","nickname","moveToList","moveToModify","useCustomMove","useParams","setContent","isName","setcontents","setComments","fetching","setFetching","selectedImg","setSlectedImg","pic","showCommentModal","setShowCommentModal","showCommentLengthModal","setShowCommentLengthModal","currentCommentId","setCurrentCommentId","showModal","setShowModal","currentReadId","setCurrentReadId","showReadModal","setShowReadModal","result","setResult","delReadResult","setDelReadResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","getOneData","getOne","successFn","failFn","errorFn","favorite","setFavorite","report","setReport","useEffect","length","successFnAdd","failFnAdd","errorFnAdd","successFnDel","failFnDel","errorFnDel","successFnReadDel","failFnReadDel","errorFnReadDel","favMutation","useMutation","mutationFn","fav","postFav","onSuccess","onError","reportInitState","ireport","reportData","setReportData","reported","setReported","reportMutation","postCommuReport","error","response","status","handleChangeBoardReport","selectedValue","target","value","prevValue","handleClickBoardReport","undefined","Number","mutate","reportCommentData","setReportCommentData","reportCommentMutation","postCommuCommentReport","handleChangeCommentReport","handleClickCommentReport","reportComment","WrapStyle","Fetching","SelectedModal","ResultModal","className","dateString","Date","toLocaleString","year","month","day","hour","minute","second","hour12","handleClickFav","process","totalFav","marginBottom","onChange","ImgStyle","LargeImgStyle","OptiPlaceholder","OptiWireframe","ThumbnailStyle","map","index","handleThumbnailClick","ContentInfoStyle","ContentStyle","UserStyle","NameStyle","handleDelRead","handleClickRCommentBtn","cols","type","newContents","handleChange","addComment","postComment","confirmModal","deleteComment","cancelModal","confirmReadModal","deleteOne","cancelReadModal","closeDelReadModal","closeCommentBlank","closeCommnetLength","ReadPage","TitleHeader","timg","tname","tcontent","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","fade","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","_g","_h","radius","_j","margin","additionalprops","radiusValue","parseLengthAndUnit","quarter","wrapper","cssValue","backgroundColor","transition","animationFillMode","animation","a","b","transform","c","d","f","g","h","React","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_updateResult","WeakSet","_notify","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","setOptions","bindMethods","_classPrivateMethodGet","_updateResult2","bind","reset","prevOptions","_classPrivateFieldGet2","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","mutationKey","hashKey","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","action","_notify2","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","state","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","data","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","listeners","forEach","listener","queryClient","useQueryClient","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync","throwError","params"],"sourceRoot":""}