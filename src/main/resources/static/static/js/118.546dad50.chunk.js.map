{"version":3,"file":"static/js/118.546dad50.chunk.js","mappings":"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","sources":["pages/meat/JS/MeatDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { API_SERVER_HOST } from \"../../../api/config\";\r\nimport { changeBookmark, getGInfo } from \"../../../api/meatApi\";\r\nimport Button from \"../../../components/button/Button\";\r\nimport CountingStar from \"../../../components/common/CountingStar\";\r\nimport Fetching from \"../../../components/common/Fetching\";\r\nimport ResultModal from \"../../../components/common/ResultModal\";\r\nimport useCustomHook from \"../../../components/meat/hooks/useCustomHook\";\r\nimport useCustomLogin from \"../../../components/meat/hooks/JS/useCustomLogin\";\r\nimport {\r\n  ImgStyle,\r\n  InfoContent,\r\n  InfoContentWrap,\r\n  InfoDesc,\r\n  InfoDescContent,\r\n  InfoDescItem,\r\n  InfoDescWrap,\r\n  InfoImageWrap,\r\n  InfoName,\r\n  InfoWrap,\r\n  LargeImgStyle,\r\n  MapApiWrapper,\r\n  MenuCardContent,\r\n  MenuCardContentItem,\r\n  MenuCardContentPrice,\r\n  MenuCardContentWrap,\r\n  MenuCardImageWrap,\r\n  MenuCardWrap,\r\n  MenuContentWrap,\r\n  MenuTitle,\r\n  MenuWrap,\r\n  MoreBtnWrap,\r\n  OverlayContent,\r\n  OverlayItem,\r\n  OverlayWrap,\r\n  ReadWrap,\r\n  ReserBtn,\r\n  ReviewContent,\r\n  ReviewContentWrap,\r\n  ReviewContentmWrap,\r\n  ReviewItemWrap,\r\n  ReviewProfileImage,\r\n  ReviewProfileWrap,\r\n  ReviewTitle,\r\n  ReviewUserProfile,\r\n  ReviewWrap,\r\n  ThumbnailStyle,\r\n} from \"../styles/MeatDetailStyle\";\r\n\r\n// @COMMENT use React-Query\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n\r\nconst initState = {\r\n  ishop: 0,\r\n  name: \"\",\r\n  location: \"\",\r\n  open: \"\",\r\n  tel: \"\",\r\n  x: \"\",\r\n  y: \"\",\r\n  star: 0,\r\n  isBook: 0,\r\n  facilities: [\"\"],\r\n  pics: [\"\"],\r\n  menus: [\r\n    {\r\n      price: 0,\r\n      menu: \"\",\r\n      pic: \"\",\r\n    },\r\n  ],\r\n  reviews: [\r\n    {\r\n      iuser: 0,\r\n      writerPic: \"\",\r\n      ireview: 0,\r\n      nickname: \"\",\r\n      star: 0,\r\n      review: \"\",\r\n      pic: [\"\"],\r\n    },\r\n  ],\r\n};\r\n\r\nconst MeatDetailPage = () => {\r\n  const navigate = useNavigate();\r\n  const { ishop } = useParams();\r\n  const { isModal, openModal, closeModal, moveToLogin } = useCustomHook();\r\n  const { isLogin } = useCustomLogin();\r\n  const baseApi = API_SERVER_HOST;\r\n  // const host = `${baseApi}/pic`;\r\n  const host = `${baseApi}/pic/shop/${ishop}/shop_pic/`;\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  // @COMMENT use React-query\r\n  const { data, isFetching } = useQuery({\r\n    queryKey: [\"storeInfo\", isLogin, ishop],\r\n    queryFn: () => getGInfo({ ishop }),\r\n    staleTime: 1000 * 60,\r\n  });\r\n  const storeInfo = data || initState;\r\n  // console.log(\"R-Query Response : \", storeInfo);\r\n  // console.log(\"R-Query Params \", ishop);\r\n\r\n  const isBookInfo = storeInfo.isBook;\r\n\r\n  // const [storeInfo, setStoreInfo] = useState({});\r\n  // useEffect(() => {\r\n  //   setFetching(true);\r\n  //   getGInfo({ isLogin, ishop, successFn, failFn, errorFn });\r\n  //   setBookmark(isBookInfo);\r\n  // }, [isLogin, ishop, isBookInfo]);\r\n\r\n  // const successFn = result => {\r\n  //   console.log(result);\r\n  //   setStoreInfo(result);\r\n  //   setFetching(false);\r\n  //   // console.log(\"DPage res : \", storeInfo);\r\n  // };\r\n  // const failFn = result => {\r\n  //   console.log(result);\r\n  //   setFetching(true);\r\n  // };\r\n  // const errorFn = result => {\r\n  //   console.log(result);\r\n  //   setFetching(true);\r\n  // };\r\n\r\n  // ! BookMark, Go Reservation Btn Logic\r\n  const [bookmark, setBookmark] = useState(isBookInfo || 0);\r\n  console.log(\"호출 \", host);\r\n\r\n  // console.log(ishop);\r\n  const storeNum = ishop;\r\n\r\n  const [visualReview, setVisualReview] = useState(3);\r\n  const handleMoreReview = e => {\r\n    console.log(\"더보기임\");\r\n    setVisualReview(prevCount => prevCount + 3);\r\n  };\r\n\r\n  // ! BookMark 선택\r\n  const handleBookmarkClick = e => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      if (bookmark == 0) {\r\n        openModal(\"북마크 등록완료\", \"북마크에 등록되었습니다.\", closeModal);\r\n        setBookmark(1);\r\n        changeBookmark(storeNum);\r\n\r\n        // console.log(\"북마크상태\", bookmark);\r\n      } else if (bookmark == 1) {\r\n        openModal(\"북마크 해제\", \"북마크가 해제되었습니다.\", closeModal);\r\n        setBookmark(0);\r\n        changeBookmark(storeNum);\r\n        // console.log(\"북마크상태\", bookmark);\r\n      }\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n  };\r\n  const handleReserClick = e => {\r\n    e.stopPropagation();\r\n    if (isLogin) {\r\n      // PATH랑 같이 보내야함 stireInfo.name\r\n      navigate(`/meat/reservation/${ishop}`, {\r\n        state: {\r\n          storeName: storeInfo.name,\r\n        },\r\n      });\r\n    } else {\r\n      openModal(\"로그인 필요\", \"로그인이 필요한 서비스입니다.\", moveToLogin);\r\n    }\r\n  };\r\n\r\n  // ! KAKAOMAP API X,Y value\r\n  const [draggable, setDraggable] = useState(true);\r\n  const [zoomable, setZoomable] = useState(true);\r\n  const defaultMenuImage =\r\n    process.env.PUBLIC_URL + `/assets/images/favicon.png`;\r\n  return (\r\n    <div>\r\n      {fetching ? <Fetching /> : null}\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <ReadWrap>\r\n        {/* {loading ? <Loading /> : <div></div>} */}\r\n        <InfoWrap>\r\n          {/* 이미지 */}\r\n          <InfoImageWrap>\r\n            <Swiper\r\n              preventClicks={false}\r\n              preventClicksPropagation={false}\r\n              slidesPerView={1}\r\n              spaceBetween={0}\r\n              pagination={true}\r\n            >\r\n              {storeInfo.pics &&\r\n                storeInfo.pics.map((pic, index) => (\r\n                  <SwiperSlide key={index}>\r\n                    <img src={`${host}${pic}`} alt=\"\" />\r\n                  </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n            {/* 비상용 이미지 */}\r\n            {/* <img src=\"https://picsum.photos/1180/800/?category=meat\" alt=\"\" /> */}\r\n          </InfoImageWrap>\r\n          {/* 컨텐츠 */}\r\n          <InfoContentWrap>\r\n            <InfoContent>\r\n              <InfoName>\r\n                <div>\r\n                  <span> {storeInfo.name}</span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    src={\r\n                      process.env.PUBLIC_URL +\r\n                      (bookmark === 0\r\n                        ? \"/assets/images/bk_no_check.png\"\r\n                        : \"/assets/images/bk_check.png\")\r\n                    }\r\n                    onClick={handleBookmarkClick}\r\n                  />\r\n                </div>\r\n              </InfoName>\r\n              <InfoDescWrap>\r\n                <InfoDesc>\r\n                  <InfoDescItem>주소</InfoDescItem>\r\n                  <InfoDescContent>{storeInfo.location}</InfoDescContent>\r\n                </InfoDesc>\r\n                <InfoDesc>\r\n                  <InfoDescItem>전화번호</InfoDescItem>\r\n                  <InfoDescContent>{storeInfo.tel}</InfoDescContent>\r\n                </InfoDesc>\r\n                <InfoDesc>\r\n                  <InfoDescItem>영업시간</InfoDescItem>\r\n                  <InfoDescContent>{storeInfo.open}</InfoDescContent>\r\n                </InfoDesc>\r\n                <InfoDesc>\r\n                  <InfoDescItem>서비스</InfoDescItem>\r\n                  <InfoDescContent>{storeInfo.facilities}</InfoDescContent>\r\n                </InfoDesc>\r\n              </InfoDescWrap>\r\n            </InfoContent>\r\n            <ReserBtn onClick={handleReserClick}>\r\n              <span>예약하기</span>\r\n            </ReserBtn>\r\n          </InfoContentWrap>\r\n        </InfoWrap>\r\n\r\n        {/*\r\n    // ! 가게 메뉴\r\n  */}\r\n        <MenuWrap>\r\n          {storeInfo?.menus?.length === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <MenuTitle>\r\n              <span>메 뉴</span>\r\n            </MenuTitle>\r\n          )}\r\n\r\n          <MenuContentWrap>\r\n            {storeInfo.menus &&\r\n              storeInfo.menus.slice(0, 6).map((item, index) => (\r\n                <MenuCardWrap key={index}>\r\n                  {/* 그림 */}\r\n                  <MenuCardImageWrap>\r\n                    {item.pic === null ? (\r\n                      <img src={defaultMenuImage} alt=\"defaultImage\" />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseApi}/pic/shop/${storeInfo.ishop}/menu/${item.pic}`}\r\n                        alt=\"\"\r\n                      />\r\n                    )}\r\n                  </MenuCardImageWrap>\r\n                  {/*\r\n// ! 가게 정보\r\n*/}\r\n                  <MenuCardContentWrap>\r\n                    <MenuCardContent>\r\n                      <MenuCardContentItem>\r\n                        <span>{item.menu}</span>\r\n                      </MenuCardContentItem>\r\n                      <MenuCardContentPrice>\r\n                        <span>{item.price}</span>\r\n                      </MenuCardContentPrice>\r\n                    </MenuCardContent>\r\n                  </MenuCardContentWrap>\r\n                </MenuCardWrap>\r\n              ))}\r\n          </MenuContentWrap>\r\n        </MenuWrap>\r\n\r\n        {/*\r\n// ! KAKAO MAP API\r\n*/}\r\n        {/*\r\n//  ! 가게\r\n*/}\r\n        {storeInfo.x && storeInfo.y && (\r\n          <MapApiWrapper>\r\n            <Map\r\n              center={{ lat: storeInfo.y, lng: storeInfo.x }}\r\n              style={{ width: \"100%\", height: \"500px\" }}\r\n              draggable={draggable}\r\n              zoomable={zoomable}\r\n            >\r\n              <MapMarker\r\n                position={{ lat: storeInfo.y, lng: storeInfo.x }}\r\n                image={{\r\n                  src:\r\n                    process.env.PUBLIC_URL +\r\n                    `/assets/images/kakaomap_marker.png`,\r\n                  size: { width: 52, height: 69 },\r\n                  options: { offset: { x: 27, y: 69 } },\r\n                }}\r\n              />\r\n            </Map>\r\n            <OverlayWrap>\r\n              <InfoContent>\r\n                <InfoName color=\"${ColorStyle.g1000}\">\r\n                  <div>\r\n                    <span>{storeInfo.name}</span>\r\n                  </div>\r\n                </InfoName>\r\n                <InfoDescWrap>\r\n                  <InfoDesc>\r\n                    <OverlayItem>주소</OverlayItem>\r\n                    <OverlayContent> {storeInfo.location} </OverlayContent>\r\n                  </InfoDesc>\r\n                  <InfoDesc>\r\n                    <OverlayItem>전화번호</OverlayItem>\r\n                    <OverlayContent>{storeInfo.tel}</OverlayContent>\r\n                  </InfoDesc>\r\n                  <InfoDesc>\r\n                    <OverlayItem>영업시간</OverlayItem>\r\n                    <OverlayContent>{storeInfo.open}</OverlayContent>\r\n                  </InfoDesc>\r\n                  <InfoDesc>\r\n                    <OverlayItem>서비스</OverlayItem>\r\n                    <OverlayContent>{storeInfo.facilities}</OverlayContent>\r\n                  </InfoDesc>\r\n                </InfoDescWrap>\r\n              </InfoContent>\r\n            </OverlayWrap>\r\n          </MapApiWrapper>\r\n        )}\r\n\r\n        {/* 고기집 리뷰사진: /pic/shop/가게pk/reveiw/리뷰pk/사진이름 */}\r\n        <ReviewWrap>\r\n          {storeInfo?.reviews?.length === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <ReviewTitle>\r\n              <span>리 뷰</span>\r\n            </ReviewTitle>\r\n          )}\r\n\r\n          <ReviewContentWrap>\r\n            {storeInfo?.reviews &&\r\n              storeInfo?.reviews.slice(0, visualReview).map((review, index) => (\r\n                <ReviewItemWrap key={index}>\r\n                  {/* Image */}\r\n                  <ImgStyle>\r\n                    <LargeImgStyle>\r\n                      {review.pic && review.pic.length == 0 ? (\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            `/assets/images/favicon.png`\r\n                          }\r\n                          alt=\"\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseApi}/pic/shop/${storeInfo.ishop}/review/${review.ireview}/${review.pic[0]}`}\r\n                          alt=\"Large image\"\r\n                        />\r\n                      )}\r\n                    </LargeImgStyle>\r\n                    <ThumbnailStyle>\r\n                      {review.pic.slice(1, 5).map(\r\n                        (pic, index) =>\r\n                          pic && (\r\n                            <div className=\"thumbnail\" key={index}>\r\n                              <img\r\n                                src={`${baseApi}/pic/shop/${\r\n                                  storeInfo.ishop\r\n                                }/review/${review.ireview}/${\r\n                                  review.pic[`${index}`]\r\n                                }`}\r\n                                alt={`img_${index + 1}`}\r\n                              />\r\n                            </div>\r\n                          ),\r\n                      )}\r\n                    </ThumbnailStyle>\r\n                  </ImgStyle>\r\n                  <ReviewContentmWrap>\r\n                    <ReviewProfileWrap>\r\n                      <ReviewProfileImage>\r\n                        {review.writerPic ? (\r\n                          <img\r\n                            src={`${baseApi}/pic/user/${review.iuser}/${review.writerPic}`}\r\n                            alt=\"프로필사진\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${process.env.PUBLIC_URL}/assets/images/user_profile.png`}\r\n                            alt=\"기본사진\"\r\n                          />\r\n                        )}\r\n                      </ReviewProfileImage>\r\n                      <ReviewUserProfile>\r\n                        <div>\r\n                          <span>{review.nickname}</span>\r\n                        </div>\r\n                        <CountingStar star={review.star} />\r\n                      </ReviewUserProfile>\r\n                    </ReviewProfileWrap>\r\n                    <ReviewContent>\r\n                      <p>{review.review}</p>\r\n                    </ReviewContent>\r\n                  </ReviewContentmWrap>\r\n                </ReviewItemWrap>\r\n              ))}\r\n          </ReviewContentWrap>\r\n\r\n          {storeInfo?.reviews?.length === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div onClick={handleMoreReview}>\r\n              <Button bttext={\"더보기\"} />\r\n            </div>\r\n          )}\r\n          <MoreBtnWrap></MoreBtnWrap>\r\n        </ReviewWrap>\r\n      </ReadWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeatDetailPage;\r\n"],"names":["initState","ishop","name","location","open","tel","x","y","star","isBook","facilities","pics","menus","price","menu","pic","reviews","iuser","writerPic","ireview","nickname","review","MeatDetailPage","_storeInfo$menus","_storeInfo$reviews","_storeInfo$reviews2","navigate","useNavigate","useParams","isModal","openModal","closeModal","moveToLogin","useCustomHook","isLogin","useCustomLogin","baseApi","API_SERVER_HOST","host","concat","fetching","setFetching","useState","data","isFetching","useQuery","queryKey","queryFn","getGInfo","staleTime","storeInfo","isBookInfo","bookmark","setBookmark","console","log","storeNum","visualReview","setVisualReview","draggable","setDraggable","zoomable","setZoomable","_jsxs","children","_jsx","Fetching","isOpen","ResultModal","title","content","callFn","ReadWrap","InfoWrap","InfoImageWrap","Swiper","preventClicks","preventClicksPropagation","slidesPerView","spaceBetween","pagination","map","index","SwiperSlide","src","alt","InfoContentWrap","InfoContent","InfoName","onClick","e","stopPropagation","changeBookmark","InfoDescWrap","InfoDesc","InfoDescItem","InfoDescContent","ReserBtn","state","storeName","MenuWrap","length","MenuTitle","MenuContentWrap","slice","item","MenuCardWrap","MenuCardImageWrap","MenuCardContentWrap","MenuCardContent","MenuCardContentItem","MenuCardContentPrice","MapApiWrapper","Map","center","lat","lng","style","width","height","MapMarker","position","image","size","options","offset","OverlayWrap","color","OverlayItem","OverlayContent","ReviewWrap","ReviewTitle","ReviewContentWrap","ReviewItemWrap","ImgStyle","LargeImgStyle","ThumbnailStyle","className","ReviewContentmWrap","ReviewProfileWrap","ReviewProfileImage","process","ReviewUserProfile","CountingStar","ReviewContent","prevCount","Button","bttext","MoreBtnWrap"],"sourceRoot":""}