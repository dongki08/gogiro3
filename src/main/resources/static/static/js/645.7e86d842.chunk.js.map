{"version":3,"file":"static/js/645.7e86d842.chunk.js","mappings":"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","sources":["api/communityApi.js","api/config.js","api/meatApi.js","components/button/Button.js","components/button/styles/ButtonStyle.js","components/common/Fetching.js","components/community/styles/ListStyle.js","components/meat/hooks/useCustomLogin.js","components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","hooks/useCustomMove.js","util/tokenUtil.js","util/utils.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_SERVER_HOST } from \"./config\";\r\nimport authAxios from \"../util/tokenUtil\";\r\n\r\nconst host = `${API_SERVER_HOST}/api/community`;\r\n\r\n// 커뮤니티 전체 목록 가져오기(커뮤니티 리스트)\r\nexport const getList = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const response = await axios.get(`${host}`, { params: param });\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      // console.log(\"커뮤니티 목록 호출 성공\");\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"커뮤니티 목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"커뮤니티 목록 서버오류\");\r\n  }\r\n};\r\n\r\n// 글 수정하기(커뮤니티 수정)\r\nexport const putOne = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await authAxios.put(`${host}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 수정 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response) {\r\n      // 서버에서 반환된 오류 응답을 출력\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"글 수정 서버오류: \", error.response.data);\r\n    } else {\r\n      errorFn(\"글 수정 서버오류\");\r\n    }\r\n  }\r\n};\r\n\r\n// 글, 사진 등록(비동기 통신)(커뮤니티 등록)\r\nexport const postAdd = async ({ product, successFn, failFn, errorFn }) => {\r\n  try {\r\n    console.log(\"Add 컴포넌트에서 글 작성한거\", product);\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const response = await authAxios.post(`${host}`, product, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n\r\n// 해당 글 삭제(커뮤니티 삭제)\r\nexport const deleteOne = async ({ iboard, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const response = await authAxios.delete(`${host}?iboard=${iboard}`, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 삭제 오류\", response.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response) {\r\n      // 서버에서 반환된 오류 응답을 출력\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"글 삭제 서버오류: \", error.response.data);\r\n    } else {\r\n      errorFn(\"글 삭제 서버오류\");\r\n    }\r\n  }\r\n};\r\n\r\n// 해당 글 댓글 작성(커뮤니티 댓글 작성)\r\nexport const postComment = async ({\r\n  iboard,\r\n  contents,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    console.log(contents);\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const data = {\r\n      iboard: iboard,\r\n      contents: contents.contents,\r\n    };\r\n    console.log(\"입력 폼 \", data);\r\n    const response = await authAxios.post(`${host}/comment`, data, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"댓글 등록 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"댓글 등록 서버오류\");\r\n  }\r\n};\r\n\r\n// 해당 글 댓글 삭제(커뮤니티 댓글 삭제)\r\nexport const deleteComment = async ({\r\n  icomment,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  console.log(icomment);\r\n  try {\r\n    const header = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: { icomment },\r\n    };\r\n    const response = await authAxios.delete(`${host}/comment`, header);\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"글 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"글 삭제 서버오류\");\r\n  }\r\n};\r\n\r\n// 해당 글 상세보기\r\nexport const getOne = async ({ iboard, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const response = await axios.get(`${host}/${iboard}`);\r\n\r\n    const status = response.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(response.data);\r\n    } else {\r\n      failFn(\"상세보기 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"상세보기 호출 서버오류\");\r\n  }\r\n};\r\n","export const API_SERVER_HOST = \"\";\r\n","import axios from \"axios\";\r\nimport authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 0이 아니면 로그인 0이면 로그아웃 상태 true = 로그아웃 상태 / false = 로그인 상태\r\n\r\n//! GET Meat List Page\r\nexport const getGList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"파라미터\", param);\r\n  try {\r\n    const res = await axios.get(`${host}/shop`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"목록 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n// Auth test\r\nexport const getGInfo = async ({\r\n  isLogin,\r\n  ishop,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const axiosInstance = isLogin ? authAxios : axios;\r\n    const res = await axiosInstance.get(`${host}/shop/${ishop}`, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"목록 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// ! Post Reservation (/gogi/reservation)\r\nexport const postReser = async ({ reserData, successFn, failFn, errorFn }) => {\r\n  console.log(\"레저데이따\", reserData);\r\n  try {\r\n    //\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.post(`${host}/reservation`, reserData, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    //\r\n  }\r\n};\r\n\r\nexport const changeBookmark = async storeNum => {\r\n  try {\r\n    //\r\n    const data = {\r\n      ishop: storeNum,\r\n    };\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.post(`${host}/shop/bookmark`, data, header);\r\n    console.log(\"check\", res.data);\r\n  } catch (error) {\r\n    console.log(error);\r\n    //\r\n  }\r\n};\r\n\r\nexport const postReview = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"axios\", product);\r\n\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await authAxios.post(`${host}/review`, product, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { DefaultBt } from \"./styles/ButtonStyle\";\r\n\r\nconst Button = props => {\r\n  const { bttext } = props;\r\n\r\n  return (\r\n    <DefaultBt>\r\n      <span>{bttext}</span>\r\n    </DefaultBt>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${ColorStyle.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst Fetching = () => {\r\n  const laodingCss = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <ClipLoader size={50} color={ColorStyle.primary} loading={true} />\r\n      <div\r\n        style={{\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        맛있게 굽고 있는 중...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fetching;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const WrapStyle = styled.div`\r\n  position: relative;\r\n  margin: 0 18vw 50px 18vw;\r\n  flex-wrap: wrap;\r\n  gap: auto;\r\n  @media (max-width: 1680px) {\r\n    margin: 0 50px 50px 50px;\r\n  }\r\n`;\r\n\r\nexport const TableStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 3px;\r\n  border-top: ${props => props.borderTop};\r\n  margin-top: ${props => props.marginTop};\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  background: ${props => props.background};\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const TtableStyle = styled(TableStyle)`\r\n  padding: 10px 0;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  background: ${props => (props.selected ? ColorStyle.g200 : null)};\r\n  &:hover {\r\n    background: ${ColorStyle.g200};\r\n  }\r\n  @media (max-width: 980px) {\r\n    display: block;\r\n  }\r\n`;\r\nexport const TnoStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 132px;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${props => props.color};\r\n  @media (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const TitleStyle = styled.div`\r\n  position: relative;\r\n  padding: 10px;\r\n  justify-content: ${props => props.justifyContent};\r\n  align-items: center;\r\n  cursor: pointer;\r\n  /* 1줄 말줄임 */\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const InfoStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 10px 0;\r\n  justify-content: space-between;\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n  div {\r\n    width: 160px;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: ${props => props.color};\r\n  }\r\n`;\r\n\r\nexport const TopenStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 50px;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  border-right: 1px solid ${ColorStyle.g500};\r\n  border-left: 1px solid ${ColorStyle.g500};\r\n`;\r\nexport const ImgStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\nexport const LargeImgStyle = styled.div`\r\n  position: relative;\r\n  max-width: 480px;\r\n  min-width: 60px;\r\n  overflow: hidden;\r\n  box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n  img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\nexport const ThumbnailStyle = styled.div`\r\n  position: relative;\r\n  max-width: 480px;\r\n  max-height: 1000px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-between; */\r\n  align-items: center;\r\n  gap: 20px;\r\n  overflow: hidden;\r\n  img {\r\n    max-width: 80px;\r\n    max-height: 100px;\r\n    border-radius: 5px;\r\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const ContentInfoStyle = styled.div`\r\n  position: relative;\r\n  width: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 34px;\r\n`;\r\nexport const ContentStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 34px;\r\n  div {\r\n    font-size: ${FontSize.strong};\r\n  }\r\n`;\r\nexport const UserStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* align-items: flex-end; */\r\n  align-items: center;\r\n  gap: 20px;\r\n  img {\r\n    width: 56px;\r\n    height: 56px;\r\n    border-radius: 50%;\r\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\nexport const NameStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 9px;\r\n  color: ${ColorStyle.g900};\r\n`;\r\n// export const TagBoxStyle = styled.div`\r\n//   position: relative;\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   align-items: flex-start;\r\n//   gap: 10px;\r\n// `;\r\nexport const SummaryStyle = styled.div`\r\n  position: relative;\r\n  display: -webkit-box;\r\n  /* 2줄이상 말줄임 */\r\n  overflow: hidden;\r\n  word-break: break-all;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  color: ${ColorStyle.g600};\r\n`;\r\n\r\nexport const BtnStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst breakpoints = {\r\n  mobile: 600,\r\n  tablet: 900,\r\n};\r\n\r\nconst mediaQueries = key => {\r\n  return style => `@media (max-width: ${breakpoints[key]}px) { ${style} }`;\r\n};\r\n\r\nexport const PagingBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 30px 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    padding: 10px;\r\n    margin: 0;\r\n    font: inherit;\r\n    font-size: ${FontSize.strong};\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: ${ColorStyle.g900};\r\n      font-weight: bold;\r\n    }\r\n\r\n    /* ${mediaQueries(\"tablet\")`\r\n      &:not(:first-of-type):not(:last-of-type) {\r\n        &:nth-last-of-type(-n+3) { \r\n          display: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n    ${mediaQueries(\"mobile\")`\r\n      &:not(:first-of-type):not(:last-of-type) {\r\n        &:nth-last-of-type(-n+7) {\r\n          display: none;\r\n        }\r\n      }\r\n    `} */\r\n  }\r\n`;\r\nexport const PagingNumStyle = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 10px;\r\n  margin: 0;\r\n  font-size: ${FontSize.strong};\r\n`;\r\n\r\nexport const SearchStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3px;\r\n  .searchBox {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  div {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  img {\r\n    width: 34px;\r\n    background: ${ColorStyle.g400};\r\n    cursor: pointer;\r\n  }\r\n  select {\r\n    position: relative;\r\n    appearance: none;\r\n    width: 92px;\r\n    height: 35px;\r\n    padding: 5px 20px;\r\n    border: 1px solid ${ColorStyle.g400};\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n    background: url(\"/assets/images/down.svg\") no-repeat right center;\r\n  }\r\n  input {\r\n    position: relative;\r\n    appearance: none;\r\n    width: 240px;\r\n    height: 36px;\r\n    padding: 5px 20px;\r\n    border: 1px solid ${ColorStyle.g400};\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n  }\r\n`;\r\n\r\nexport const TableFootStyle = styled.div`\r\n  position: relative;\r\n  margin-top: 50px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync, logout } from \"../../../redux/authSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const authState = useSelector(state => state.authSlice);\r\n  const API_SERVER_HOST = \"\";\r\n  const host = `${API_SERVER_HOST}/api/user`;\r\n\r\n  // 로그인 상태값 파악\r\n  const isLogin = authState.result == 1 ? true : false;\r\n\r\n  // 로그인 기능\r\n  const doLogin = async ({ authParam, successFn, failFn, errorFn }) => {\r\n    // 로그인 어느화면에서 실행이 될 소지가 높아요.\r\n    // 로그인 상태 업데이트\r\n    const action = await dispatch(\r\n      loginPostAsync({ authParam, successFn, failFn, errorFn }),\r\n    );\r\n    // 결과값\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = async () => {\r\n    dispatch(logout());\r\n    try {\r\n      const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n      const res = await axios.post(`${host}/signout`, header);\r\n      if (res.status === 200) {\r\n        console.log(\"rt cookie 삭제\"); // successFn(res.data);\r\n      } else {\r\n        // failFn(\"\");\r\n      }\r\n    } catch (error) {\r\n      // errorFn(\"\");\r\n    }\r\n  };\r\n\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    // 패스로 이동 후에 replace:ture 를 적용시 뒤로 가기 화면\r\n    // 이전 페이지 기록을 남기지 않는다.\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  // 로그인 페이지 이동 기능\r\n  const moveToLogin = () => {\r\n    // return <Navigate replace to=\"/login\" />;\r\n    navigate(\"/login\");\r\n  };\r\n  const loginComplete = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return {\r\n    authState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    loginComplete,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum, getSearch } from \"../util/utils\";\r\nimport useCustomLogin from \"../components/meat/hooks/useCustomLogin\";\r\n\r\nconst useCustomMove = () => {\r\n  // 로그인 훅\r\n  const { isLogin, moveToLogin } = useCustomLogin();\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  // to add\r\n  const moveToAdd = () => {\r\n    if (isLogin) {\r\n      navigate(\"/community/add\");\r\n    } else {\r\n      moveToLogin();\r\n    }\r\n  };\r\n\r\n  // to search\r\n  const moveToSearch = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      const searchStr = getSearch(pageParam.search, search);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        search: searchStr,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n\r\n  return {\r\n    moveToList,\r\n    moveToModify,\r\n    moveToRead,\r\n    moveToAdd,\r\n    moveToSearch,\r\n    page,\r\n    search,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./CookiesUtil\";\r\nimport { API_SERVER_HOST } from \"../api/meatApi\";\r\nconst authAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  console.log(\"전달\", config);\r\n  const memberInfo = getCookie(\"member\");\r\n  console.log(\"get Token : \", memberInfo);\r\n  if (!memberInfo) {\r\n    console.log(\"not found cookie info\");\r\n    return Promise.reject({ response: { data: { error: \"please login\" } } });\r\n  }\r\n  console.log(\"toke info\");\r\n  const { accessToken } = memberInfo;\r\n  console.log(\"acessToken : \", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  console.log(\"request fail :\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst rToken = async (accessToken, refreshToken) => {\r\n  const host = API_SERVER_HOST;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(`${host}/api/user/refresh-token`, header);\r\n  console.log(\"required token\");\r\n  console.log(\"new data :\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  console.log(\"Response 전처리 ....\", res);\r\n  const data = res.data;\r\n  console.log(\"1. Response 오기전 서버 전달해준 데이터\", data);\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    console.log(\"2. 일반적 오류가 아닌 액세스 토큰 에러!! 입니다. \");\r\n    console.log(\"3. 새로운 토큰을 요청해야 합니다. \");\r\n    console.log(\"4. 쿠키에 있는 정보를 읽어서, 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    console.log(\"5. 쿠키 토큰 정보 AccessToken \", memberInfo.accessToken);\r\n    console.log(\"6. 쿠키 토큰 정보 RefreshToken \", memberInfo.refreshToken);\r\n    console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await rToken(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트 \");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    console.log(\"9. 데이터 요청하던 API 재 요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n\r\n    return await axios(originalRequest);\r\n  }\r\n\r\n  return res;\r\n};\r\nconst resFail = error => {\r\n  console.log(\"res fail : \", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nauthAxios.interceptors.request.use(beforeReq, requestFail);\r\nauthAxios.interceptors.response.use(beforeRes, resFail);\r\n\r\nexport default authAxios;\r\n","export const getNum = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n\r\nexport const getSearch = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n"],"names":["host","concat","API_SERVER_HOST","getList","async","param","successFn","failFn","errorFn","_ref","response","axios","get","params","status","toString","charAt","data","error","putOne","product","_ref2","header","headers","authAxios","put","statusText","console","log","postAdd","_ref3","post","deleteOne","iboard","_ref4","delete","postComment","contents","_ref5","deleteComment","icomment","_ref6","getOne","_ref7","getGList","res","getGInfo","isLogin","ishop","axiosInstance","postReser","reserData","changeBookmark","storeNum","postReview","props","bttext","_jsx","DefaultBt","children","styled","button","_templateObject","_taggedTemplateLiteral","ColorStyle","primary","Fetching","_jsxs","style","position","left","top","zIndex","width","height","background","display","flexDirection","gap","justifyContent","alignItems","ClipLoader","size","color","loading","fontFamily","fontSize","WrapStyle","div","TableStyle","_templateObject2","borderTop","marginTop","FontSize","strong","TtableStyle","_templateObject3","g500","selected","g200","TnoStyle","_templateObject4","TitleStyle","_templateObject5","InfoStyle","_templateObject6","TopenStyle","_templateObject7","ImgStyle","_templateObject8","LargeImgStyle","_templateObject9","ThumbnailStyle","_templateObject10","ContentInfoStyle","_templateObject11","ContentStyle","_templateObject12","UserStyle","_templateObject13","NameStyle","_templateObject14","g900","SummaryStyle","_templateObject15","g600","BtnStyle","_templateObject16","breakpoints","mobile","tablet","mediaQueries","key","PagingBoxStyle","_templateObject17","g700","_templateObject18","_templateObject19","PagingNumStyle","_templateObject20","SearchStyle","_templateObject21","g400","default","TableFootStyle","_templateObject22","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","authState","useSelector","state","authSlice","result","doLogin","authParam","loginPostAsync","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","loginComplete","TitleHeaderWrapper","TitleHeaderInfo","TitleName","span","main_title","grayScale","TitleContent","sub_title","timg","tname","tcontent","src","alt","useCustomMove","urlSearchParams","setUrlSearchPrams","useSearchParams","page","parseInt","search","queryStrDefault","createSearchParams","moveToList","pageParam","queryStr","pageNum","getNum","searchStr","getSearch","moveToModify","num","moveToRead","moveToAdd","moveToSearch","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","Authorization","refreshToken","rToken","setCookie","JSON","stringify","originalRequest","check","init"],"sourceRoot":""}