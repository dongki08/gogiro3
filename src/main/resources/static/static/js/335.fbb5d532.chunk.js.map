{"version":3,"file":"static/js/335.fbb5d532.chunk.js","mappings":"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","sources":["api/MyApi.js","components/common/ResultModal.js","components/common/SelectedModal.js","components/community/styles/AddStyle.js","components/community/Modify.js","pages/community/ModifyPage.js"],"sourcesContent":["import authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 마이페이지 : 예약 내역 가져오기 (GET)\r\nexport const getMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 변경하기 (PUT)\r\nexport const putMyBook = async ({\r\n  reserChangeForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  console.log(\"reserChangeForm:\", reserChangeForm);\r\n\r\n  const data = {\r\n    ireser: reserChangeForm.ireser,\r\n    date: reserChangeForm.date,\r\n    headCount: reserChangeForm.headCount,\r\n    request: reserChangeForm.request,\r\n  };\r\n  try {\r\n    console.log(\"PUT 요청 보내는 데이터:\", data);\r\n\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.put(`${host}/reservation`, data, {\r\n      headers: header,\r\n    });\r\n\r\n    console.log(\"PUT 요청 결과:\", res);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 변경 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 변경 오류\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"PUT 요청 에러:\", error);\r\n    errorFn(error);\r\n    console.log(\"서버 예약 변경 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 삭제하기 (PATCH)\r\nexport const patchMyBook = async ({\r\n  patchBookForm,\r\n  successPatch,\r\n  failPatch,\r\n  errorPatch,\r\n}) => {\r\n  const data = {\r\n    checkShop: patchBookForm.checkShop,\r\n    ireser: patchBookForm.ireser,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(`${host}/reservation`, data, {\r\n      headers: header,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 완전 삭제 성공\");\r\n      successPatch(res.data);\r\n      return res.data;\r\n    } else {\r\n      failPatch(\"예약 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"서버 완전 오류\");\r\n    errorPatch(error);\r\n  }\r\n};\r\n\r\n// 마이페이지 : 북마크 내역 가져오기 (GET)\r\nexport const getMyList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"parameter :\", param);\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/bookmark`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"북마크 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"북마크 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 가져오기 (GET)\r\nexport const getMyReview = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/review`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 삭제하기 (DELETE)\r\nexport const deleteMyReview = async ({\r\n  deleteForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  console.log(\"폼\", deleteForm);\r\n  // console.log(\"log\", data);\r\n  const data = {\r\n    checkShop: deleteForm.checkShop,\r\n    ireview: deleteForm.ireview,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.delete(`${host}/user/review`, {\r\n      ...header,\r\n      data: data,\r\n    });\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 삭제 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 가져오기 (GET)\r\nexport const getUserInfo = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 수정하기 (PUT)\r\nexport const putUserInfo = async ({\r\n  putUserForm,\r\n  successFn,\r\n  FailFn,\r\n  nicknameErrorFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await authAxios.put(`${host}/user`, putUserForm, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 수정 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      FailFn(\"유저 정보 수정 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response && error.response.status === 400) {\r\n      console.log(\"닉네임 중복 오류\");\r\n      nicknameErrorFn(error.response.data);\r\n    } else if (error.response) {\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"수정 서버오류\", error.response.data);\r\n    } else {\r\n      errorFn(\"수정 서버오류\");\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭 시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            callFn();\r\n          }}\r\n        >\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const AddBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  .titleBox {\r\n    display: flex;\r\n    padding: 10px;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.strong};\r\n    font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  }\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      /* min-width: 220px; */\r\n      height: 100%;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      /* color: ${ColorStyle.g500}; */\r\n    }\r\n  }\r\n`;\r\nexport const UserBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .writerBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    height: 44px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n    /* font-family: \"DAEAM_LEE_TAE_JOON\"; */\r\n  }\r\n`;\r\nexport const ContentBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    textarea {\r\n      resize: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-height: 300px;\r\n      /* resize: vertical; */\r\n      font-size: ${FontSize.default};\r\n      border-top: 1px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImageBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 930px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 100%;\r\n      border: 0px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FootStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 50px 0px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .btnBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getUserInfo } from \"../../api/MyApi\";\r\nimport { getOne, putOne } from \"../../api/communityApi\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\nimport {\r\n  AddBoxStyle,\r\n  ContentBoxStyle,\r\n  FootStyle,\r\n  ImageBoxStyle,\r\n  UserBoxStyle,\r\n} from \"./styles/AddStyle\";\r\nimport { WrapStyle } from \"./styles/ListStyle\";\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\n// 해당 글 수정을 위한 기존 글 정보 초기값\r\nconst initState = {\r\n  iboard: 0,\r\n  iuser: 0,\r\n  name: \"\",\r\n  writerPic: \"\",\r\n  title: \"\",\r\n  contents: \"\",\r\n  createdAt: \"\",\r\n  pics: [],\r\n  beAf: [\r\n    {\r\n      iboard: 0,\r\n      title: \"\",\r\n    },\r\n  ],\r\n  comments: [\r\n    {\r\n      icomment: 0,\r\n      writerPk: 0,\r\n      writerName: \"\",\r\n      comment: \"\",\r\n      createdAt: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 유저 정보 초기값\r\nconst initProfile = {\r\n  nickname: \"\",\r\n};\r\n\r\nconst Modify = () => {\r\n  // 커스텀 훅\r\n  const { moveToList, page } = useCustomMove();\r\n\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  // 해당 글 pk값 추출 및 할당(get)\r\n  const { iboard } = useParams();\r\n\r\n  // 해당 글 기존 내용 상태 가져오기 및 업데이트(get)\r\n  const [product, setProduct] = useState(initState);\r\n\r\n  // 해당 글 작성자 닉네임 정보 상태 업데이트\r\n  const [profileData, setProfileData] = useState(initProfile);\r\n\r\n  // 업로드 할 이미지 미리보기 상태 업데이트\r\n  const [images, setImages] = useState([]);\r\n\r\n  // 업로드 할 이미지 5장 초과 시 모달 띄우기 상태 업데이트\r\n  const [imagesLength, setImagesLength] = useState(false);\r\n\r\n  // 이미지 삭제 정보를 담을 상태\r\n  const [deletedImageIds, setDeletedImageIds] = useState([]);\r\n\r\n  // useRef(DOM 요소를 참조한다.)\r\n  // useRef를 만든 후 반드 시 태그랑 연결\r\n  const uploadRef = useRef(null);\r\n\r\n  // selectedModal 띄우기 위한 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // getUserInfo API 통신 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n\r\n  // 글 수정 결과 상태 업데이트\r\n  const [modifyResult, setModifyResult] = useState(false);\r\n\r\n  // resultModal props 값 업데이트\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(\"\");\r\n\r\n  // Modal 닫기 이후 화면 전환 상태 업데이트\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n\r\n  // ----------------------------------------------------------------------\r\n\r\n  // 해당 글 작성자 닉네임 정보 가져오기\r\n  useEffect(() => {\r\n    const param = {};\r\n    getUserInfo({\r\n      param,\r\n      successFn: successFnProfile,\r\n      failFn: failFnProfile,\r\n      errorFn: errorFnProfile,\r\n    });\r\n  }, []);\r\n\r\n  const successFnProfile = result => {\r\n    setProfileData(result);\r\n    console.log(result);\r\n  };\r\n  const failFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  // 커뮤니티 해당 글 정보 가져오기(get)\r\n  const getOneData = () => {\r\n    getOne({ iboard, successFn, failFn, errorFn });\r\n  };\r\n  const successFn = result => {\r\n    setFetching(false);\r\n    setProduct(result);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOneData();\r\n  }, [iboard, page]);\r\n\r\n  useEffect(() => {\r\n    // 기존 이미지 URL 초기화\r\n    const initialImages = product.pics.map(pic => ({\r\n      url: `${host}/pic/community/${product.iboard}/${pic.pic}`,\r\n      icommuPics: pic.icommuPics,\r\n    }));\r\n    setImages(initialImages);\r\n  }, [product.pics, product.iboard]);\r\n\r\n  // 이미지 미리보기 삭제 함수\r\n  const deleteImage = indexToDelete => {\r\n    // images 배열에서 이미지 삭제\r\n    const imageToDelete = images[indexToDelete];\r\n    if (imageToDelete.icommuPics) {\r\n      setDeletedImageIds(prevIds => [...prevIds, imageToDelete.icommuPics]);\r\n    }\r\n    setImages(prevImages =>\r\n      prevImages.filter((_, index) => index !== indexToDelete),\r\n    );\r\n  };\r\n\r\n  // 업로드 할 이미지 미리보기 및 교체\r\n  const handleFileChange = e => {\r\n    const files = e.target.files;\r\n    if (files) {\r\n      const totalImages = images.length + files.length;\r\n      if (totalImages > 5) {\r\n        setImagesLength(true);\r\n        // alert(\"최대 5장까지만 업로드 가능합니다.\");\r\n        return;\r\n      }\r\n\r\n      // 선택한 사진을 Array.from으로 줄을 세움\r\n      // .map으로 각 사진에게 할일 알려줌\r\n      // 모든 사진 각각 동일한 작업 할수 있음\r\n      // 각 사진을 브라우저에서 볼 수 있는 주소로 만들고\r\n      // 그 사진이 새로운 사진인지 표시하는 작업\r\n      const newFiles = Array.from(files).map(file => ({\r\n        // 각 사진에게 특별한 주소 생성\r\n        url: URL.createObjectURL(file),\r\n        file, // 새로운 파일 정보를 추가합니다.\r\n        isNew: true, // 새 이미지임을 표시합니다.\r\n      }));\r\n\r\n      setImages(prevImages => [...prevImages, ...newFiles]);\r\n    }\r\n  };\r\n\r\n  // 글 작성 시 내용 업데이트, 텍스트 필드의 변경사항 처리\r\n  const handleChange = e => {\r\n    // ...product 기존 product 상태의 모든 속성을 복사(불변성 유지)\r\n    // e.target.name은 변경된 텍스트 필드의 이름\r\n    // e.target.value는 입력된 새로운 값을 나타냄\r\n    // setProduct() 동적 속성 이름을 사용하여 해당 텍스트 필드의 값을 업데이트\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 사진추가 버튼 클릭시 이미지 파일 선택\r\n  const handleClickImg = () => {\r\n    if (images.length > 5) {\r\n      alert(\"더 이상 이미지를 추가할 수 없습니다.\");\r\n      return;\r\n    }\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  // 해당 글 수정 실행\r\n  const handleClickModify = async product => {\r\n    const formData = new FormData();\r\n\r\n    // dto 객체 생성 및 Blob으로 변환\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iboard: product.iboard,\r\n          icommuPics: deletedImageIds, // 삭제할 이미지 ID 목록을 추가합니다.\r\n          title: product.title,\r\n          contents: product.contents,\r\n        }),\r\n      ],\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // 새로 추가된 이미지만 FormData에 추가\r\n    images.forEach(image => {\r\n      if (image.isNew) {\r\n        formData.append(\"pics\", image.file);\r\n      }\r\n    });\r\n\r\n    // 글 정보 전송하기\r\n    setFetching(true);\r\n    try {\r\n      await putOne({\r\n        product: formData,\r\n        successFn: successFnModify,\r\n        failFn: failFnModify,\r\n        errorFn: errorFnModify,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"글 수정 중 에러 발생\", error);\r\n    } finally {\r\n      setFetching(false);\r\n    }\r\n  };\r\n\r\n  const successFnModify = result => {\r\n    console.log(\"글 수정 성공\", result);\r\n    setFetching(false);\r\n    setResult(true);\r\n    setPopTitle(\"글 수정\");\r\n    setPopContent(\"글 수정 성공하였습니다.\");\r\n    setPopRedirect(true);\r\n  };\r\n  const failFnModify = result => {\r\n    console.log(\"글 수정 실패\", result);\r\n    setFetching(false);\r\n    setResult(false);\r\n    setPopTitle(\"글 수정 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFnModify = result => {\r\n    console.log(\"글 수정 실패\", result);\r\n    setFetching(false);\r\n    setResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 수정 로직 실행\r\n    if (\r\n      product.title.length !== 0 &&\r\n      product.contents.length > 0 &&\r\n      product.contents.length <= 300\r\n    ) {\r\n      handleClickModify(product);\r\n    }\r\n    if (\r\n      product.title.length === 0 ||\r\n      product.contents.length === 0 ||\r\n      product.contents.length > 300\r\n    ) {\r\n      setModifyResult(true);\r\n    }\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // 모달창 닫기\r\n    setResult(false);\r\n    if (popRedirect === true) {\r\n      moveToList({ page: 1 });\r\n    }\r\n  };\r\n  // 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    // 모달 띄우기\r\n    setShowModal(true);\r\n  };\r\n\r\n  // 글 등록 시 예외처리용 resultModal 닫기 callFn\r\n  const closeException = () => {\r\n    setModifyResult(false);\r\n  };\r\n\r\n  // 사진 업로드 5장 초과 resultModal 닫기 callFn\r\n  const closeImagesLength = () => {\r\n    setImagesLength(false);\r\n  };\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n      <AddBoxStyle>\r\n        <div className=\"titleBox\">제목</div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.title}\r\n          />\r\n        </div>\r\n      </AddBoxStyle>\r\n      <UserBoxStyle>\r\n        <div className=\"titleBox\">작성자</div>\r\n        <div className=\"writerBox\">{profileData.nickname}</div>\r\n      </UserBoxStyle>\r\n      <ContentBoxStyle>\r\n        <div className=\"titleBox\">내용</div>\r\n        <div className=\"inputBox\">\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"contents\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.contents}\r\n          />\r\n        </div>\r\n      </ContentBoxStyle>\r\n      <ImageBoxStyle>\r\n        <div className=\"titleBox\">사진</div>\r\n\r\n        <div onClick={handleClickImg}>\r\n          <Button bttext=\"사진추가\" />\r\n        </div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"file\"\r\n            ref={uploadRef}\r\n            multiple={true}\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileChange}\r\n          />\r\n          <div className=\"previewBox\">\r\n            {images.map((image, index) => (\r\n              <img\r\n                key={index}\r\n                src={image.url}\r\n                alt={`미리보기${index}`}\r\n                style={{\r\n                  maxWidth: \"60px\",\r\n                  margin: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                onClick={() => deleteImage(index)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </ImageBoxStyle>\r\n      <FootStyle>\r\n        <div className=\"btnBox\">\r\n          <div onClick={handleAddClick}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={moveToList}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </FootStyle>\r\n\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"글 수정 확인\"\r\n          content=\"글을 수정하시겠습니까?\"\r\n          confirmFn={() => handleConfirm(product)}\r\n          cancelFn={handleCancel}\r\n        />\r\n      ) : null}\r\n\r\n      {result ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n\r\n      {modifyResult ? (\r\n        <ResultModal\r\n          title=\"제목 필수 입력\"\r\n          content=\"내용은 300자 이내로 작성해주세요\"\r\n          callFn={closeException}\r\n        />\r\n      ) : null}\r\n\r\n      {imagesLength ? (\r\n        <ResultModal\r\n          title=\"사진 등록\"\r\n          content=\"최대 5장까지만 업로드 가능합니다\"\r\n          callFn={closeImagesLength}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Modify;\r\n","import React from \"react\";\r\nimport Modify from \"../../components/community/Modify\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\n\r\nconst ModifyPage = () => {\r\n  return (\r\n    <div>\r\n      <TitleHeader\r\n        timg={`${process.env.PUBLIC_URL}/assets/images/community_header_3.png`}\r\n        tname=\"고기잡담\"\r\n        tcontent='\"인생은 고기서 고기다\"'\r\n      />\r\n      <Modify />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifyPage;\r\n"],"names":["API_SERVER_HOST","host","concat","getMyBook","async","param","successFn","failFn","errorFn","_ref","res","authAxios","get","params","status","toString","charAt","console","log","data","error","putMyBook","reserChangeForm","_ref2","ireser","date","headCount","request","header","headers","put","patchMyBook","patchBookForm","successPatch","failPatch","errorPatch","_ref3","checkShop","patch","getMyList","_ref4","getMyReview","_ref5","deleteMyReview","deleteForm","_ref6","ireview","delete","getUserInfo","_ref7","putUserInfo","putUserForm","FailFn","nicknameErrorFn","_ref8","statusText","response","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","AddBoxStyle","styled","div","_templateObject","_taggedTemplateLiteral","ColorStyle","g900","FontSize","strong","g500","default","UserBoxStyle","_templateObject2","ContentBoxStyle","_templateObject3","ImageBoxStyle","_templateObject4","FootStyle","_templateObject5","initState","iboard","iuser","name","writerPic","contents","createdAt","pics","beAf","comments","icomment","writerPk","writerName","comment","initProfile","nickname","Modify","moveToList","page","useCustomMove","fetching","setFetching","useState","useParams","product","setProduct","profileData","setProfileData","images","setImages","imagesLength","setImagesLength","deletedImageIds","setDeletedImageIds","uploadRef","useRef","showModal","setShowModal","result","setResult","modifyResult","setModifyResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","useEffect","successFnProfile","failFnProfile","errorFnProfile","getOne","initialImages","map","pic","url","icommuPics","handleChange","e","target","value","successFnModify","failFnModify","errorFnModify","handleConfirm","length","formData","FormData","dto","Blob","JSON","stringify","type","append","forEach","image","isNew","file","putOne","handleClickModify","WrapStyle","Fetching","className","onChange","handleClickImg","alert","current","click","ref","multiple","files","newFiles","Array","from","URL","createObjectURL","prevImages","index","src","alt","maxWidth","margin","cursor","indexToDelete","imageToDelete","prevIds","filter","_","deleteImage","handleAddClick","SelectedModal","handleCancel","ResultModal","closeModal","closeException","closeImagesLength","ModifyPage","TitleHeader","timg","process","tname","tcontent"],"sourceRoot":""}